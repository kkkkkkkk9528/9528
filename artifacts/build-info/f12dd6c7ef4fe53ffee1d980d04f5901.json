{
	"id": "f12dd6c7ef4fe53ffee1d980d04f5901",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Factory.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.20;\n\nimport \"./token.sol\";\n\n/**\n * @title Factory\n * @dev Factory contract for deploying WBGZToken using CREATE2\n */\ncontract WBGZFactory {\n    event WBGZTokenDeployed(address indexed tokenAddress, address indexed initialOwner, uint8 decimalsValue, uint256 initialSupply, bytes32 salt);\n\n    /**\n     * @notice Deploys a new WBGZToken contract using CREATE2\n     * @param initialOwner The initial owner of the token\n     * @param decimalsValue The number of decimals for the token\n     * @param initialSupply The initial supply of the token\n     * @param salt A unique salt for CREATE2 deployment\n     * @return tokenAddress The address of the deployed token\n     */\n    function deployWBGZToken(\n        address initialOwner,\n        uint8 decimalsValue,\n        uint256 initialSupply,\n        bytes32 salt\n    ) external returns (address tokenAddress) {\n        // Get the bytecode of WBGZToken\n        bytes memory bytecode = type(WBGZToken).creationCode;\n\n        // Encode the constructor arguments\n        bytes memory encodedArgs = abi.encode(initialOwner, decimalsValue, initialSupply);\n\n        // Append the encoded arguments to the bytecode\n        bytes memory fullBytecode = abi.encodePacked(bytecode, encodedArgs);\n\n        // Deploy using CREATE2\n        assembly {\n            tokenAddress := create2(0, add(fullBytecode, 0x20), mload(fullBytecode), salt)\n        }\n\n        // Check if deployment was successful\n        require(tokenAddress != address(0), \"Deployment failed\");\n\n        // Emit event\n        emit WBGZTokenDeployed(tokenAddress, initialOwner, decimalsValue, initialSupply, salt);\n    }\n\n    /**\n     * @notice Computes the address of a WBGZToken contract that would be deployed with the given parameters\n     * @param initialOwner The initial owner of the token\n     * @param decimalsValue The number of decimals for the token\n     * @param initialSupply The initial supply of the token\n     * @param salt A unique salt for CREATE2 deployment\n     * @return The computed address\n     */\n    function getWBGZTokenAddress(\n        address initialOwner,\n        uint8 decimalsValue,\n        uint256 initialSupply,\n        bytes32 salt\n    ) external view returns (address) {\n        // Get the bytecode of WBGZToken\n        bytes memory bytecode = type(WBGZToken).creationCode;\n\n        // Encode the constructor arguments\n        bytes memory encodedArgs = abi.encode(initialOwner, decimalsValue, initialSupply);\n\n        // Append the encoded arguments to the bytecode\n        bytes memory fullBytecode = abi.encodePacked(bytecode, encodedArgs);\n\n        // Compute the address using CREATE2 formula\n        bytes32 hash = keccak256(\n            abi.encodePacked(\n                bytes1(0xff),\n                address(this),\n                salt,\n                keccak256(fullBytecode)\n            )\n        );\n\n        return address(uint160(uint256(hash)));\n    }\n}"
			},
			"contracts/token.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\n\n/**\n * @title WBGZToken\n * @dev An ERC-20 token contract based on OpenZeppelin\n * Includes minting, burning, and pausing functionality, controlled by the owner\n */\ncontract WBGZToken is ERC20, ERC20Burnable, Ownable, Pausable {\n    // Token decimals\n    uint8 private _decimals;\n\n    /// @notice Maximum total supply of the token\n    uint256 private constant MAX_SUPPLY = 10_000_000 * 1e18;\n\n    /**\n     * @notice Initializes the token with custom parameters\n     * @dev Constructor\n     * @param initialOwner Initial owner address\n     * @param decimalsValue Number of decimals for the token\n     * @param initialSupply Initial token supply\n     */\n    constructor(\n        address initialOwner,\n        uint8 decimalsValue,\n        uint256 initialSupply\n    ) ERC20(unicode\"币安仙女\", unicode\"币安仙女\") Ownable(initialOwner) {\n        require(initialOwner != address(0), \"Invalid owner\");\n        require(decimalsValue <= 18, \"Decimals too high\");\n        require(initialSupply != 0, \"Initial supply must be positive\");\n        require(initialSupply <= type(uint256).max / (10 ** decimalsValue), \"Supply too large\");\n\n        _decimals = decimalsValue;\n\n        // Mint initial token supply to the initial owner\n        _mint(initialOwner, initialSupply * (10 ** decimalsValue));\n    }\n\n    /**\n     * @notice Returns the number of decimals used for token\n     * @dev Returns the number of decimals used for token\n     * @inheritdoc ERC20\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @notice Mint new tokens\n     * @dev Mint new tokens\n     * @param to Recipient address\n     * @param amount Amount to mint\n     */\n    function mint(address to, uint256 amount) public onlyOwner {\n        require(totalSupply() + amount <= MAX_SUPPLY, \"Max supply exceeded\");\n        _mint(to, amount);\n    }\n\n    /**\n     * @notice Pause all token transfers\n     * @dev Pause all token transfers\n     */\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    /**\n     * @notice Resume token transfers\n     * @dev Resume token transfers\n     */\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n    /**\n     * @dev Override _update function to add pause functionality\n     */\n    function _update(\n        address from,\n        address to,\n        uint256 value\n    ) internal override whenNotPaused {\n        super._update(from, to, value);\n    }\n}"
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 0
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":0},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":0},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":0},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":0},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":0},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":0},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":0},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":0},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":0},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":0},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 988,
								"contract": "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Factory.sol": {
				"WBGZFactory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "decimalsValue",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								}
							],
							"name": "WBGZTokenDeployed",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "decimalsValue",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								}
							],
							"name": "deployWBGZToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "decimalsValue",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								}
							],
							"name": "getWBGZTokenAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Factory contract for deploying WBGZToken using CREATE2",
						"kind": "dev",
						"methods": {
							"deployWBGZToken(address,uint8,uint256,bytes32)": {
								"params": {
									"decimalsValue": "The number of decimals for the token",
									"initialOwner": "The initial owner of the token",
									"initialSupply": "The initial supply of the token",
									"salt": "A unique salt for CREATE2 deployment"
								},
								"returns": {
									"tokenAddress": "The address of the deployed token"
								}
							},
							"getWBGZTokenAddress(address,uint8,uint256,bytes32)": {
								"params": {
									"decimalsValue": "The number of decimals for the token",
									"initialOwner": "The initial owner of the token",
									"initialSupply": "The initial supply of the token",
									"salt": "A unique salt for CREATE2 deployment"
								},
								"returns": {
									"_0": "The computed address"
								}
							}
						},
						"title": "Factory",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Factory.sol\":169:2953  contract WBGZFactory {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Factory.sol\":169:2953  contract WBGZFactory {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x18423c06\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3dcee3ac\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Factory.sol\":2077:2951  function getWBGZTokenAddress(... */\n    tag_3:\n      tag_5\n      tag_6\n      calldatasize\n      0x04\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":771:803   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":753:804   */\n      dup2\n      mstore\n        /* \"#utility.yul\":741:743   */\n      0x20\n        /* \"#utility.yul\":726:744   */\n      add\n        /* \"contracts/Factory.sol\":2077:2951  function getWBGZTokenAddress(... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Factory.sol\":723:1671  function deployWBGZToken(... */\n    tag_4:\n      tag_5\n      tag_12\n      calldatasize\n      0x04\n      tag_7\n      jump\t// in\n    tag_12:\n      tag_13\n      jump\t// in\n        /* \"contracts/Factory.sol\":2077:2951  function getWBGZTokenAddress(... */\n    tag_8:\n        /* \"contracts/Factory.sol\":2247:2254  address */\n      0x00\n        /* \"contracts/Factory.sol\":2307:2328  bytes memory bytecode */\n      dup1\n        /* \"contracts/Factory.sol\":2331:2359  type(WBGZToken).creationCode */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      tag_16\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      0x20\n      dup3\n      add\n      dup2\n      sub\n      dup3\n      mstore\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      0x40\n      mstore\n      pop\n        /* \"contracts/Factory.sol\":2307:2359  bytes memory bytecode = type(WBGZToken).creationCode */\n      swap1\n      pop\n        /* \"contracts/Factory.sol\":2414:2438  bytes memory encodedArgs */\n      0x00\n        /* \"contracts/Factory.sol\":2452:2464  initialOwner */\n      dup7\n        /* \"contracts/Factory.sol\":2466:2479  decimalsValue */\n      dup7\n        /* \"contracts/Factory.sol\":2481:2494  initialSupply */\n      dup7\n        /* \"contracts/Factory.sol\":2441:2495  abi.encode(initialOwner, decimalsValue, initialSupply) */\n      add(0x20, mload(0x40))\n      tag_18\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/Factory.sol\":2414:2495  bytes memory encodedArgs = abi.encode(initialOwner, decimalsValue, initialSupply) */\n      swap1\n      pop\n        /* \"contracts/Factory.sol\":2562:2587  bytes memory fullBytecode */\n      0x00\n        /* \"contracts/Factory.sol\":2607:2615  bytecode */\n      dup3\n        /* \"contracts/Factory.sol\":2617:2628  encodedArgs */\n      dup3\n        /* \"contracts/Factory.sol\":2590:2629  abi.encodePacked(bytecode, encodedArgs) */\n      add(0x20, mload(0x40))\n      tag_20\n      swap3\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      not(0x1f)\n      add\n      dup2\n      mstore\n      dup3\n      dup3\n      mstore\n        /* \"contracts/Factory.sol\":2848:2871  keccak256(fullBytecode) */\n      dup1\n      mload\n        /* \"contracts/Factory.sol\":2590:2629  abi.encodePacked(bytecode, encodedArgs) */\n      0x20\n        /* \"contracts/Factory.sol\":2848:2871  keccak256(fullBytecode) */\n      swap2\n      dup3\n      add\n      keccak256\n      not(sub(shl(0xf8, 0x01), 0x01))\n        /* \"contracts/Factory.sol\":2731:2885  abi.encodePacked(... */\n      dup3\n      dup6\n      add\n        /* \"#utility.yul\":1976:2015   */\n      mstore\n        /* \"contracts/Factory.sol\":2803:2807  this */\n      address\n        /* \"#utility.yul\":2077:2079   */\n      0x60\n        /* \"#utility.yul\":2048:2063   */\n      shl\n      not(sub(shl(0x60, 0x01), 0x01))\n        /* \"#utility.yul\":2044:2089   */\n      and\n        /* \"#utility.yul\":2031:2042   */\n      0x21\n      dup6\n      add\n        /* \"#utility.yul\":2024:2090   */\n      mstore\n        /* \"#utility.yul\":2106:2118   */\n      0x35\n      dup5\n      add\n        /* \"#utility.yul\":2099:2127   */\n      swap9\n      swap1\n      swap9\n      mstore\n        /* \"#utility.yul\":2143:2155   */\n      0x55\n      dup1\n      dup5\n      add\n        /* \"#utility.yul\":2136:2164   */\n      swap9\n      swap1\n      swap9\n      mstore\n        /* \"contracts/Factory.sol\":2731:2885  abi.encodePacked(... */\n      dup2\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap9\n      add\n      dup9\n      mstore\n        /* \"#utility.yul\":2180:2192   */\n      0x75\n      swap1\n      swap3\n      add\n        /* \"contracts/Factory.sol\":2731:2885  abi.encodePacked(... */\n      swap1\n      mstore\n        /* \"contracts/Factory.sol\":2708:2895  keccak256(... */\n      dup6\n      mload\n      swap6\n      add\n      swap5\n      swap1\n      swap5\n      keccak256\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Factory.sol\":2077:2951  function getWBGZTokenAddress(... */\n      jump\t// out\n        /* \"contracts/Factory.sol\":723:1671  function deployWBGZToken(... */\n    tag_13:\n        /* \"contracts/Factory.sol\":884:904  address tokenAddress */\n      0x00\n        /* \"contracts/Factory.sol\":957:978  bytes memory bytecode */\n      dup1\n        /* \"contracts/Factory.sol\":981:1009  type(WBGZToken).creationCode */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      tag_25\n      swap1\n      tag_17\n      jump\t// in\n    tag_25:\n      0x20\n      dup3\n      add\n      dup2\n      sub\n      dup3\n      mstore\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      0x40\n      mstore\n      pop\n        /* \"contracts/Factory.sol\":957:1009  bytes memory bytecode = type(WBGZToken).creationCode */\n      swap1\n      pop\n        /* \"contracts/Factory.sol\":1064:1088  bytes memory encodedArgs */\n      0x00\n        /* \"contracts/Factory.sol\":1102:1114  initialOwner */\n      dup7\n        /* \"contracts/Factory.sol\":1116:1129  decimalsValue */\n      dup7\n        /* \"contracts/Factory.sol\":1131:1144  initialSupply */\n      dup7\n        /* \"contracts/Factory.sol\":1091:1145  abi.encode(initialOwner, decimalsValue, initialSupply) */\n      add(0x20, mload(0x40))\n      tag_26\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/Factory.sol\":1064:1145  bytes memory encodedArgs = abi.encode(initialOwner, decimalsValue, initialSupply) */\n      swap1\n      pop\n        /* \"contracts/Factory.sol\":1212:1237  bytes memory fullBytecode */\n      0x00\n        /* \"contracts/Factory.sol\":1257:1265  bytecode */\n      dup3\n        /* \"contracts/Factory.sol\":1267:1278  encodedArgs */\n      dup3\n        /* \"contracts/Factory.sol\":1240:1279  abi.encodePacked(bytecode, encodedArgs) */\n      add(0x20, mload(0x40))\n      tag_27\n      swap3\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/Factory.sol\":1212:1279  bytes memory fullBytecode = abi.encodePacked(bytecode, encodedArgs) */\n      swap1\n      pop\n        /* \"contracts/Factory.sol\":1418:1422  salt */\n      dup5\n        /* \"contracts/Factory.sol\":1403:1415  fullBytecode */\n      dup2\n        /* \"contracts/Factory.sol\":1397:1416  mload(fullBytecode) */\n      mload\n        /* \"contracts/Factory.sol\":1390:1394  0x20 */\n      0x20\n        /* \"contracts/Factory.sol\":1376:1388  fullBytecode */\n      dup4\n        /* \"contracts/Factory.sol\":1372:1395  add(fullBytecode, 0x20) */\n      add\n        /* \"contracts/Factory.sol\":1369:1370  0 */\n      0x00\n        /* \"contracts/Factory.sol\":1361:1423  create2(0, add(fullBytecode, 0x20), mload(fullBytecode), salt) */\n      create2\n        /* \"contracts/Factory.sol\":1345:1423  tokenAddress := create2(0, add(fullBytecode, 0x20), mload(fullBytecode), salt) */\n      swap4\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Factory.sol\":1497:1523  tokenAddress != address(0) */\n      dup5\n      and\n        /* \"contracts/Factory.sol\":1489:1545  require(tokenAddress != address(0), \"Deployment failed\") */\n      tag_28\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2405:2407   */\n      0x20\n        /* \"contracts/Factory.sol\":1489:1545  require(tokenAddress != address(0), \"Deployment failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2387:2408   */\n      mstore\n        /* \"#utility.yul\":2444:2446   */\n      0x11\n        /* \"#utility.yul\":2424:2442   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2417:2447   */\n      mstore\n      shl(0x7a, 0x11195c1b1bde5b595b9d0819985a5b1959)\n        /* \"#utility.yul\":2463:2481   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2456:2503   */\n      mstore\n        /* \"#utility.yul\":2520:2538   */\n      0x64\n      add\n        /* \"contracts/Factory.sol\":1489:1545  require(tokenAddress != address(0), \"Deployment failed\") */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_28:\n        /* \"contracts/Factory.sol\":1583:1664  WBGZTokenDeployed(tokenAddress, initialOwner, decimalsValue, initialSupply, salt) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2777:2781   */\n      0xff\n        /* \"#utility.yul\":2765:2782   */\n      dup10\n      and\n        /* \"#utility.yul\":2747:2783   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2814:2816   */\n      0x20\n        /* \"#utility.yul\":2799:2817   */\n      dup2\n      add\n        /* \"#utility.yul\":2792:2826   */\n      dup9\n      swap1\n      mstore\n        /* \"#utility.yul\":2842:2860   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":2835:2869   */\n      dup7\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Factory.sol\":1583:1664  WBGZTokenDeployed(tokenAddress, initialOwner, decimalsValue, initialSupply, salt) */\n      dup1\n      dup11\n      and\n      swap2\n      swap1\n      dup7\n      and\n      swap1\n      0xd1c16269e4896821ea5dd6216a16b09048d63329a1b10963f0458d3f0389f4f4\n      swap1\n        /* \"#utility.yul\":2735:2737   */\n      0x60\n        /* \"#utility.yul\":2720:2738   */\n      add\n        /* \"contracts/Factory.sol\":1583:1664  WBGZTokenDeployed(tokenAddress, initialOwner, decimalsValue, initialSupply, salt) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Factory.sol\":906:1671  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/Factory.sol\":723:1671  function deployWBGZToken(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_17:\n      dataSize(sub_0)\n      dup1\n      dataOffset(sub_0)\n      dup4\n      codecopy\n      add\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14:602   */\n    tag_7:\n        /* \"#utility.yul\":98:104   */\n      0x00\n        /* \"#utility.yul\":106:112   */\n      dup1\n        /* \"#utility.yul\":114:120   */\n      0x00\n        /* \"#utility.yul\":122:128   */\n      dup1\n        /* \"#utility.yul\":175:178   */\n      0x80\n        /* \"#utility.yul\":163:172   */\n      dup6\n        /* \"#utility.yul\":154:161   */\n      dup8\n        /* \"#utility.yul\":150:173   */\n      sub\n        /* \"#utility.yul\":146:179   */\n      slt\n        /* \"#utility.yul\":143:196   */\n      iszero\n      tag_36\n      jumpi\n        /* \"#utility.yul\":192:193   */\n      0x00\n        /* \"#utility.yul\":189:190   */\n      dup1\n        /* \"#utility.yul\":182:194   */\n      revert\n        /* \"#utility.yul\":143:196   */\n    tag_36:\n        /* \"#utility.yul\":218:241   */\n      dup5\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":270:301   */\n      dup2\n      and\n        /* \"#utility.yul\":260:302   */\n      dup2\n      eq\n        /* \"#utility.yul\":250:320   */\n      tag_37\n      jumpi\n        /* \"#utility.yul\":316:317   */\n      0x00\n        /* \"#utility.yul\":313:314   */\n      dup1\n        /* \"#utility.yul\":306:318   */\n      revert\n        /* \"#utility.yul\":250:320   */\n    tag_37:\n        /* \"#utility.yul\":339:344   */\n      swap4\n      pop\n        /* \"#utility.yul\":396:398   */\n      0x20\n        /* \"#utility.yul\":381:399   */\n      dup6\n      add\n        /* \"#utility.yul\":368:400   */\n      calldataload\n        /* \"#utility.yul\":444:448   */\n      0xff\n        /* \"#utility.yul\":431:449   */\n      dup2\n      and\n        /* \"#utility.yul\":419:450   */\n      dup2\n      eq\n        /* \"#utility.yul\":409:468   */\n      tag_38\n      jumpi\n        /* \"#utility.yul\":464:465   */\n      0x00\n        /* \"#utility.yul\":461:462   */\n      dup1\n        /* \"#utility.yul\":454:466   */\n      revert\n        /* \"#utility.yul\":409:468   */\n    tag_38:\n        /* \"#utility.yul\":14:602   */\n      swap4\n      swap7\n        /* \"#utility.yul\":487:494   */\n      swap4\n      swap6\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":541:543   */\n      0x40\n        /* \"#utility.yul\":526:544   */\n      dup3\n      add\n        /* \"#utility.yul\":513:545   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":592:594   */\n      0x60\n        /* \"#utility.yul\":577:595   */\n      add\n        /* \"#utility.yul\":564:596   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":14:602   */\n      jump\t// out\n        /* \"#utility.yul\":815:1167   */\n    tag_19:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1031:1063   */\n      swap4\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":1013:1064   */\n      dup4\n      mstore\n        /* \"#utility.yul\":1112:1116   */\n      0xff\n        /* \"#utility.yul\":1100:1117   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1095:1097   */\n      0x20\n        /* \"#utility.yul\":1080:1098   */\n      dup4\n      add\n        /* \"#utility.yul\":1073:1118   */\n      mstore\n        /* \"#utility.yul\":1149:1151   */\n      0x40\n        /* \"#utility.yul\":1134:1152   */\n      dup3\n      add\n        /* \"#utility.yul\":1127:1161   */\n      mstore\n        /* \"#utility.yul\":1001:1003   */\n      0x60\n        /* \"#utility.yul\":986:1004   */\n      add\n      swap1\n        /* \"#utility.yul\":815:1167   */\n      jump\t// out\n        /* \"#utility.yul\":1172:1494   */\n    tag_33:\n        /* \"#utility.yul\":1213:1216   */\n      0x00\n        /* \"#utility.yul\":1251:1256   */\n      dup2\n        /* \"#utility.yul\":1245:1257   */\n      mload\n        /* \"#utility.yul\":1275:1276   */\n      0x00\n        /* \"#utility.yul\":1285:1413   */\n    tag_42:\n        /* \"#utility.yul\":1299:1305   */\n      dup2\n        /* \"#utility.yul\":1296:1297   */\n      dup2\n        /* \"#utility.yul\":1293:1306   */\n      lt\n        /* \"#utility.yul\":1285:1413   */\n      iszero\n      tag_44\n      jumpi\n        /* \"#utility.yul\":1396:1400   */\n      0x20\n        /* \"#utility.yul\":1381:1394   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":1377:1401   */\n      dup2\n      add\n        /* \"#utility.yul\":1371:1402   */\n      mload\n        /* \"#utility.yul\":1358:1369   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":1351:1403   */\n      mstore\n        /* \"#utility.yul\":1314:1326   */\n      add\n        /* \"#utility.yul\":1285:1413   */\n      jump(tag_42)\n    tag_44:\n      pop\n        /* \"#utility.yul\":1468:1469   */\n      0x00\n        /* \"#utility.yul\":1432:1448   */\n      swap4\n      add\n        /* \"#utility.yul\":1457:1470   */\n      swap3\n      dup4\n      mstore\n      pop\n        /* \"#utility.yul\":1432:1448   */\n      swap1\n      swap2\n        /* \"#utility.yul\":1172:1494   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1499:1760   */\n    tag_21:\n        /* \"#utility.yul\":1674:1677   */\n      0x00\n        /* \"#utility.yul\":1699:1754   */\n      tag_46\n        /* \"#utility.yul\":1724:1753   */\n      tag_47\n        /* \"#utility.yul\":1749:1752   */\n      dup4\n        /* \"#utility.yul\":1741:1747   */\n      dup7\n        /* \"#utility.yul\":1724:1753   */\n      tag_33\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":1716:1722   */\n      dup5\n        /* \"#utility.yul\":1699:1754   */\n      tag_33\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":1692:1754   */\n      swap5\n        /* \"#utility.yul\":1499:1760   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n\n    sub_0: assembly {\n            /* \"contracts/token.sol\":459:2753  contract WBGZToken is ERC20, ERC20Burnable, Ownable, Pausable {... */\n          mstore(0x40, 0x80)\n            /* \"contracts/token.sol\":950:1592  constructor(... */\n          callvalue\n          dup1\n          iszero\n          tag_1\n          jumpi\n          0x00\n          dup1\n          revert\n        tag_1:\n          pop\n          mload(0x40)\n          sub(codesize, bytecodeSize)\n          dup1\n          bytecodeSize\n          dup4\n          codecopy\n          dup2\n          add\n          0x40\n          dup2\n          swap1\n          mstore\n          tag_2\n          swap2\n          tag_3\n          jump\t// in\n        tag_2:\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n          0x40\n          dup1\n          mload\n          dup1\n          dup3\n          add\n          dup3\n          mstore\n          0x0c\n          dup1\n          dup3\n          mstore\n          shl(0xa0, 0xe5b881e5ae89e4bb99e5a5b3)\n          0x20\n          dup1\n          dup5\n          add\n          dup3\n          swap1\n          mstore\n          dup5\n          mload\n          dup1\n          dup7\n          add\n          swap1\n          swap6\n          mstore\n          swap2\n          dup5\n          mstore\n          swap1\n          dup4\n          add\n          mstore\n            /* \"contracts/token.sol\":1118:1130  initialOwner */\n          dup5\n          swap2\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n          0x03\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n          tag_8\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n          dup4\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n          dup3\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n          tag_9\n          jump\t// in\n        tag_8:\n          pop\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n          0x04\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n          tag_10\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n          dup3\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n          dup3\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n          tag_9\n          jump\t// in\n        tag_10:\n          pop\n          pop\n          pop\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n          dup2\n          and\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n          tag_12\n          jumpi\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n          0x00\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n          mload(0x40)\n          shl(0xe0, 0x1e4fbdf7)\n          dup2\n          mstore\n          0x04\n          add\n          tag_13\n          swap2\n          swap1\n          tag_14\n          jump\t// in\n        tag_13:\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          revert\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n        tag_12:\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n          tag_15\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n          dup2\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n          tag_16\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n          jump\t// in\n        tag_15:\n          pop\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"contracts/token.sol\":1150:1176  initialOwner != address(0) */\n          dup4\n          and\n            /* \"contracts/token.sol\":1142:1194  require(initialOwner != address(0), \"Invalid owner\") */\n          tag_18\n          jumpi\n          mload(0x40)\n          shl(0xe5, 0x461bcd)\n          dup2\n          mstore\n            /* \"#utility.yul\":3659:3661   */\n          0x20\n            /* \"contracts/token.sol\":1142:1194  require(initialOwner != address(0), \"Invalid owner\") */\n          0x04\n          dup3\n          add\n            /* \"#utility.yul\":3641:3662   */\n          mstore\n            /* \"#utility.yul\":3698:3700   */\n          0x0d\n            /* \"#utility.yul\":3678:3696   */\n          0x24\n          dup3\n          add\n            /* \"#utility.yul\":3671:3701   */\n          mstore\n          shl(0x99, 0x24b73b30b634b21037bbb732b9)\n            /* \"#utility.yul\":3717:3735   */\n          0x44\n          dup3\n          add\n            /* \"#utility.yul\":3710:3753   */\n          mstore\n            /* \"#utility.yul\":3770:3788   */\n          0x64\n          add\n            /* \"contracts/token.sol\":1142:1194  require(initialOwner != address(0), \"Invalid owner\") */\n          tag_13\n            /* \"#utility.yul\":3457:3794   */\n          jump\n            /* \"contracts/token.sol\":1142:1194  require(initialOwner != address(0), \"Invalid owner\") */\n        tag_18:\n            /* \"contracts/token.sol\":1229:1231  18 */\n          0x12\n            /* \"contracts/token.sol\":1212:1225  decimalsValue */\n          dup3\n            /* \"contracts/token.sol\":1212:1231  decimalsValue <= 18 */\n          0xff\n          and\n          gt\n          iszero\n            /* \"contracts/token.sol\":1204:1253  require(decimalsValue <= 18, \"Decimals too high\") */\n          tag_21\n          jumpi\n          mload(0x40)\n          shl(0xe5, 0x461bcd)\n          dup2\n          mstore\n            /* \"#utility.yul\":4001:4003   */\n          0x20\n            /* \"contracts/token.sol\":1204:1253  require(decimalsValue <= 18, \"Decimals too high\") */\n          0x04\n          dup3\n          add\n            /* \"#utility.yul\":3983:4004   */\n          mstore\n            /* \"#utility.yul\":4040:4042   */\n          0x11\n            /* \"#utility.yul\":4020:4038   */\n          0x24\n          dup3\n          add\n            /* \"#utility.yul\":4013:4043   */\n          mstore\n          shl(0x7b, 0x088cac6d2dac2d8e640e8dede40d0d2ced)\n            /* \"#utility.yul\":4059:4077   */\n          0x44\n          dup3\n          add\n            /* \"#utility.yul\":4052:4099   */\n          mstore\n            /* \"#utility.yul\":4116:4134   */\n          0x64\n          add\n            /* \"contracts/token.sol\":1204:1253  require(decimalsValue <= 18, \"Decimals too high\") */\n          tag_13\n            /* \"#utility.yul\":3799:4140   */\n          jump\n            /* \"contracts/token.sol\":1204:1253  require(decimalsValue <= 18, \"Decimals too high\") */\n        tag_21:\n            /* \"contracts/token.sol\":1271:1284  initialSupply */\n          dup1\n            /* \"contracts/token.sol\":1288:1289  0 */\n          0x00\n            /* \"contracts/token.sol\":1271:1289  initialSupply != 0 */\n          sub\n            /* \"contracts/token.sol\":1263:1325  require(initialSupply != 0, \"Initial supply must be positive\") */\n          tag_24\n          jumpi\n          mload(0x40)\n          shl(0xe5, 0x461bcd)\n          dup2\n          mstore\n            /* \"#utility.yul\":4347:4349   */\n          0x20\n            /* \"contracts/token.sol\":1263:1325  require(initialSupply != 0, \"Initial supply must be positive\") */\n          0x04\n          dup3\n          add\n            /* \"#utility.yul\":4329:4350   */\n          mstore\n            /* \"#utility.yul\":4386:4388   */\n          0x1f\n            /* \"#utility.yul\":4366:4384   */\n          0x24\n          dup3\n          add\n            /* \"#utility.yul\":4359:4389   */\n          mstore\n            /* \"#utility.yul\":4425:4458   */\n          0x496e697469616c20737570706c79206d75737420626520706f73697469766500\n            /* \"#utility.yul\":4405:4423   */\n          0x44\n          dup3\n          add\n            /* \"#utility.yul\":4398:4459   */\n          mstore\n            /* \"#utility.yul\":4476:4494   */\n          0x64\n          add\n            /* \"contracts/token.sol\":1263:1325  require(initialSupply != 0, \"Initial supply must be positive\") */\n          tag_13\n            /* \"#utility.yul\":4145:4500   */\n          jump\n            /* \"contracts/token.sol\":1263:1325  require(initialSupply != 0, \"Initial supply must be positive\") */\n        tag_24:\n            /* \"contracts/token.sol\":1381:1400  10 ** decimalsValue */\n          tag_27\n            /* \"contracts/token.sol\":1387:1400  decimalsValue */\n          dup3\n            /* \"contracts/token.sol\":1381:1383  10 */\n          0x0a\n            /* \"contracts/token.sol\":1381:1400  10 ** decimalsValue */\n          tag_28\n          jump\t// in\n        tag_27:\n            /* \"contracts/token.sol\":1360:1401  type(uint256).max / (10 ** decimalsValue) */\n          tag_29\n          swap1\n          not(0x00)\n          tag_30\n          jump\t// in\n        tag_29:\n            /* \"contracts/token.sol\":1343:1356  initialSupply */\n          dup2\n            /* \"contracts/token.sol\":1343:1401  initialSupply <= type(uint256).max / (10 ** decimalsValue) */\n          gt\n          iszero\n            /* \"contracts/token.sol\":1335:1422  require(initialSupply <= type(uint256).max / (10 ** decimalsValue), \"Supply too large\") */\n          tag_31\n          jumpi\n          mload(0x40)\n          shl(0xe5, 0x461bcd)\n          dup2\n          mstore\n            /* \"#utility.yul\":6444:6446   */\n          0x20\n            /* \"contracts/token.sol\":1335:1422  require(initialSupply <= type(uint256).max / (10 ** decimalsValue), \"Supply too large\") */\n          0x04\n          dup3\n          add\n            /* \"#utility.yul\":6426:6447   */\n          mstore\n            /* \"#utility.yul\":6483:6485   */\n          0x10\n            /* \"#utility.yul\":6463:6481   */\n          0x24\n          dup3\n          add\n            /* \"#utility.yul\":6456:6486   */\n          mstore\n          shl(0x80, 0x537570706c7920746f6f206c61726765)\n            /* \"#utility.yul\":6502:6520   */\n          0x44\n          dup3\n          add\n            /* \"#utility.yul\":6495:6541   */\n          mstore\n            /* \"#utility.yul\":6558:6576   */\n          0x64\n          add\n            /* \"contracts/token.sol\":1335:1422  require(initialSupply <= type(uint256).max / (10 ** decimalsValue), \"Supply too large\") */\n          tag_13\n            /* \"#utility.yul\":6242:6582   */\n          jump\n            /* \"contracts/token.sol\":1335:1422  require(initialSupply <= type(uint256).max / (10 ** decimalsValue), \"Supply too large\") */\n        tag_31:\n            /* \"contracts/token.sol\":1433:1442  _decimals */\n          0x05\n            /* \"contracts/token.sol\":1433:1458  _decimals = decimalsValue */\n          dup1\n          sload\n          not(shl(0xa8, 0xff))\n          and\n          shl(0xa8, 0x01)\n          0xff\n          dup6\n          and\n          mul\n          or\n          swap1\n          sstore\n            /* \"contracts/token.sol\":1527:1585  _mint(initialOwner, initialSupply * (10 ** decimalsValue)) */\n          tag_34\n            /* \"contracts/token.sol\":1533:1545  initialOwner */\n          dup4\n            /* \"contracts/token.sol\":1564:1583  10 ** decimalsValue */\n          tag_35\n            /* \"contracts/token.sol\":1433:1458  _decimals = decimalsValue */\n          dup5\n            /* \"contracts/token.sol\":1564:1566  10 */\n          0x0a\n            /* \"contracts/token.sol\":1564:1583  10 ** decimalsValue */\n          tag_28\n          jump\t// in\n        tag_35:\n            /* \"contracts/token.sol\":1547:1584  initialSupply * (10 ** decimalsValue) */\n          tag_36\n          swap1\n            /* \"contracts/token.sol\":1547:1560  initialSupply */\n          dup5\n            /* \"contracts/token.sol\":1547:1584  initialSupply * (10 ** decimalsValue) */\n          tag_37\n          jump\t// in\n        tag_36:\n            /* \"contracts/token.sol\":1527:1532  _mint */\n          tag_38\n            /* \"contracts/token.sol\":1527:1585  _mint(initialOwner, initialSupply * (10 ** decimalsValue)) */\n          jump\t// in\n        tag_34:\n            /* \"contracts/token.sol\":950:1592  constructor(... */\n          pop\n          pop\n          pop\n            /* \"contracts/token.sol\":459:2753  contract WBGZToken is ERC20, ERC20Burnable, Ownable, Pausable {... */\n          jump(tag_77)\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n        tag_16:\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n          0x05\n          dup1\n          sload\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n          dup4\n          dup2\n          and\n          not(sub(shl(0xa0, 0x01), 0x01))\n          dup4\n          and\n          dup2\n          or\n          swap1\n          swap4\n          sstore\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n          mload(0x40)\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n          swap2\n          and\n          swap2\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n          swap1\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n          dup3\n          swap1\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n          0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n          swap1\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n          0x00\n          swap1\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n          log3\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n          pop\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n          pop\n          jump\t// out\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\n        tag_38:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n          dup3\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n          tag_42\n          jumpi\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7506  0 */\n          0x00\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7476:7508  ERC20InvalidReceiver(address(0)) */\n          mload(0x40)\n          shl(0xe0, 0xec442f05)\n          dup2\n          mstore\n          0x04\n          add\n          tag_13\n          swap2\n          swap1\n          tag_14\n          jump\t// in\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n        tag_42:\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n          tag_44\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7545  0 */\n          0x00\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7548:7555  account */\n          dup4\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7557:7562  value */\n          dup4\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  _update */\n          tag_45\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n          jump\t// in\n        tag_44:\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\n          pop\n          pop\n          jump\t// out\n            /* \"contracts/token.sol\":2584:2751  function _update(... */\n        tag_45:\n            /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n          tag_47\n            /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1367  _requireNotPaused */\n          tag_48\n            /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n          jump\t// in\n        tag_47:\n            /* \"contracts/token.sol\":2714:2744  super._update(from, to, value) */\n          tag_50\n            /* \"contracts/token.sol\":2728:2732  from */\n          dup4\n            /* \"contracts/token.sol\":2734:2736  to */\n          dup4\n            /* \"contracts/token.sol\":2738:2743  value */\n          dup4\n            /* \"contracts/token.sol\":2714:2727  super._update */\n          tag_51\n            /* \"contracts/token.sol\":2714:2744  super._update(from, to, value) */\n          jump\t// in\n        tag_50:\n            /* \"contracts/token.sol\":2584:2751  function _update(... */\n          pop\n          pop\n          pop\n          jump\t// out\n            /* \"@openzeppelin/contracts/utils/Pausable.sol\":1878:2006  function _requireNotPaused() internal view virtual {... */\n        tag_48:\n            /* \"@openzeppelin/contracts/utils/Pausable.sol\":1943:1951  paused() */\n          tag_53\n            /* \"@openzeppelin/contracts/utils/Pausable.sol\":1796:1803  _paused */\n          sload(0x05)\n          shl(0xa0, 0x01)\n          swap1\n          div\n          0xff\n          and\n          swap1\n            /* \"@openzeppelin/contracts/utils/Pausable.sol\":1726:1810  function paused() public view virtual returns (bool) {... */\n          jump\n            /* \"@openzeppelin/contracts/utils/Pausable.sol\":1943:1951  paused() */\n        tag_53:\n            /* \"@openzeppelin/contracts/utils/Pausable.sol\":1939:2000  if (paused()) {... */\n          iszero\n          tag_55\n          jumpi\n            /* \"@openzeppelin/contracts/utils/Pausable.sol\":1974:1989  EnforcedPause() */\n          mload(0x40)\n          shl(0xe0, 0xd93c0665)\n          dup2\n          mstore\n          0x04\n          add\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          revert\n            /* \"@openzeppelin/contracts/utils/Pausable.sol\":1939:2000  if (paused()) {... */\n        tag_55:\n            /* \"@openzeppelin/contracts/utils/Pausable.sol\":1878:2006  function _requireNotPaused() internal view virtual {... */\n          jump\t// out\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n        tag_51:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n          dup4\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n          tag_57\n          jumpi\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6153:6158  value */\n          dup1\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6149  _totalSupply */\n          0x02\n          0x00\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6158  _totalSupply += value */\n          dup3\n          dup3\n          sload\n          tag_58\n          swap2\n          swap1\n          tag_59\n          jump\t// in\n        tag_58:\n          swap1\n          swap2\n          sstore\n          pop\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n          tag_60\n          swap1\n          pop\n          jump\n        tag_57:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n          dup4\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6208  uint256 fromBalance */\n          0x00\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n          swap1\n          dup2\n          mstore\n          0x20\n          dup2\n          swap1\n          mstore\n          0x40\n          swap1\n          keccak256\n          sload\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6263  fromBalance < value */\n          dup2\n          dup2\n          lt\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n          iszero\n          tag_61\n          jumpi\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n          mload(0x40)\n          shl(0xe2, 0x391434e3)\n          dup2\n          mstore\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"#utility.yul\":7110:7142   */\n          dup6\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n          0x04\n          dup3\n          add\n            /* \"#utility.yul\":7092:7143   */\n          mstore\n            /* \"#utility.yul\":7159:7177   */\n          0x24\n          dup2\n          add\n            /* \"#utility.yul\":7152:7186   */\n          dup3\n          swap1\n          mstore\n            /* \"#utility.yul\":7202:7220   */\n          0x44\n          dup2\n          add\n            /* \"#utility.yul\":7195:7229   */\n          dup4\n          swap1\n          mstore\n            /* \"#utility.yul\":7065:7083   */\n          0x64\n          add\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n          tag_13\n            /* \"#utility.yul\":6890:7235   */\n          jump\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n        tag_61:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n          dup5\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6484  _balances */\n          0x00\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n          swap1\n          dup2\n          mstore\n          0x20\n          dup2\n          swap1\n          mstore\n          0x40\n          swap1\n          keccak256\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6512  fromBalance - value */\n          swap1\n          dup3\n          swap1\n          sub\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6512  _balances[from] = fromBalance - value */\n          swap1\n          sstore\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n        tag_60:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n          dup3\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n          tag_64\n          jumpi\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6726  _totalSupply */\n          0x02\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6735  _totalSupply -= value */\n          dup1\n          sload\n          dup3\n          swap1\n          sub\n          swap1\n          sstore\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n          jump(tag_65)\n        tag_64:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n          dup3\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6934  _balances */\n          0x00\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n          swap1\n          dup2\n          mstore\n          0x20\n          dup2\n          swap1\n          mstore\n          0x40\n          swap1\n          keccak256\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6947  _balances[to] += value */\n          dup1\n          sload\n          dup3\n          add\n          swap1\n          sstore\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n        tag_65:\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7004  to */\n          dup2\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7000  from */\n          dup4\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n          and\n          0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7006:7011  value */\n          dup4\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n          mload(0x40)\n          tag_66\n          swap2\n            /* \"#utility.yul\":7386:7411   */\n          dup2\n          mstore\n            /* \"#utility.yul\":7374:7376   */\n          0x20\n            /* \"#utility.yul\":7359:7377   */\n          add\n          swap1\n            /* \"#utility.yul\":7240:7417   */\n          jump\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n        tag_66:\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          log3\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n          pop\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":14:523   */\n        tag_3:\n            /* \"#utility.yul\":100:106   */\n          0x00\n            /* \"#utility.yul\":108:114   */\n          dup1\n            /* \"#utility.yul\":116:122   */\n          0x00\n            /* \"#utility.yul\":169:171   */\n          0x60\n            /* \"#utility.yul\":157:166   */\n          dup5\n            /* \"#utility.yul\":148:155   */\n          dup7\n            /* \"#utility.yul\":144:167   */\n          sub\n            /* \"#utility.yul\":140:172   */\n          slt\n            /* \"#utility.yul\":137:189   */\n          iszero\n          tag_79\n          jumpi\n            /* \"#utility.yul\":185:186   */\n          0x00\n            /* \"#utility.yul\":182:183   */\n          dup1\n            /* \"#utility.yul\":175:187   */\n          revert\n            /* \"#utility.yul\":137:189   */\n        tag_79:\n            /* \"#utility.yul\":211:227   */\n          dup4\n          mload\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"#utility.yul\":256:287   */\n          dup2\n          and\n            /* \"#utility.yul\":246:288   */\n          dup2\n          eq\n            /* \"#utility.yul\":236:306   */\n          tag_80\n          jumpi\n            /* \"#utility.yul\":302:303   */\n          0x00\n            /* \"#utility.yul\":299:300   */\n          dup1\n            /* \"#utility.yul\":292:304   */\n          revert\n            /* \"#utility.yul\":236:306   */\n        tag_80:\n            /* \"#utility.yul\":375:377   */\n          0x20\n            /* \"#utility.yul\":360:378   */\n          dup6\n          add\n            /* \"#utility.yul\":354:379   */\n          mload\n            /* \"#utility.yul\":325:330   */\n          swap1\n          swap4\n          pop\n            /* \"#utility.yul\":423:427   */\n          0xff\n            /* \"#utility.yul\":410:428   */\n          dup2\n          and\n            /* \"#utility.yul\":398:429   */\n          dup2\n          eq\n            /* \"#utility.yul\":388:447   */\n          tag_81\n          jumpi\n            /* \"#utility.yul\":443:444   */\n          0x00\n            /* \"#utility.yul\":440:441   */\n          dup1\n            /* \"#utility.yul\":433:445   */\n          revert\n            /* \"#utility.yul\":388:447   */\n        tag_81:\n            /* \"#utility.yul\":466:473   */\n          dup1\n            /* \"#utility.yul\":456:473   */\n          swap3\n          pop\n          pop\n            /* \"#utility.yul\":513:515   */\n          0x40\n            /* \"#utility.yul\":502:511   */\n          dup5\n            /* \"#utility.yul\":498:516   */\n          add\n            /* \"#utility.yul\":492:517   */\n          mload\n            /* \"#utility.yul\":482:517   */\n          swap1\n          pop\n            /* \"#utility.yul\":14:523   */\n          swap3\n          pop\n          swap3\n          pop\n          swap3\n          jump\t// out\n            /* \"#utility.yul\":528:655   */\n        tag_69:\n            /* \"#utility.yul\":589:599   */\n          0x4e487b71\n            /* \"#utility.yul\":584:587   */\n          0xe0\n            /* \"#utility.yul\":580:600   */\n          shl\n            /* \"#utility.yul\":577:578   */\n          0x00\n            /* \"#utility.yul\":570:601   */\n          mstore\n            /* \"#utility.yul\":620:624   */\n          0x41\n            /* \"#utility.yul\":617:618   */\n          0x04\n            /* \"#utility.yul\":610:625   */\n          mstore\n            /* \"#utility.yul\":644:648   */\n          0x24\n            /* \"#utility.yul\":641:642   */\n          0x00\n            /* \"#utility.yul\":634:649   */\n          revert\n            /* \"#utility.yul\":660:1040   */\n        tag_70:\n            /* \"#utility.yul\":739:740   */\n          0x01\n            /* \"#utility.yul\":735:747   */\n          dup2\n          dup2\n          shr\n          swap1\n            /* \"#utility.yul\":782:794   */\n          dup3\n          and\n          dup1\n            /* \"#utility.yul\":803:864   */\n          tag_84\n          jumpi\n            /* \"#utility.yul\":857:861   */\n          0x7f\n            /* \"#utility.yul\":849:855   */\n          dup3\n            /* \"#utility.yul\":845:862   */\n          and\n            /* \"#utility.yul\":835:862   */\n          swap2\n          pop\n            /* \"#utility.yul\":803:864   */\n        tag_84:\n            /* \"#utility.yul\":910:912   */\n          0x20\n            /* \"#utility.yul\":902:908   */\n          dup3\n            /* \"#utility.yul\":899:913   */\n          lt\n            /* \"#utility.yul\":879:897   */\n          dup2\n            /* \"#utility.yul\":876:914   */\n          sub\n            /* \"#utility.yul\":873:1034   */\n          tag_85\n          jumpi\n            /* \"#utility.yul\":956:966   */\n          0x4e487b71\n            /* \"#utility.yul\":951:954   */\n          0xe0\n            /* \"#utility.yul\":947:967   */\n          shl\n            /* \"#utility.yul\":944:945   */\n          0x00\n            /* \"#utility.yul\":937:968   */\n          mstore\n            /* \"#utility.yul\":991:995   */\n          0x22\n            /* \"#utility.yul\":988:989   */\n          0x04\n            /* \"#utility.yul\":981:996   */\n          mstore\n            /* \"#utility.yul\":1019:1023   */\n          0x24\n            /* \"#utility.yul\":1016:1017   */\n          0x00\n            /* \"#utility.yul\":1009:1024   */\n          revert\n            /* \"#utility.yul\":873:1034   */\n        tag_85:\n          pop\n            /* \"#utility.yul\":660:1040   */\n          swap2\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":1171:1716   */\n        tag_72:\n            /* \"#utility.yul\":1273:1275   */\n          0x1f\n            /* \"#utility.yul\":1268:1271   */\n          dup3\n            /* \"#utility.yul\":1265:1276   */\n          gt\n            /* \"#utility.yul\":1262:1710   */\n          iszero\n          tag_50\n          jumpi\n            /* \"#utility.yul\":1309:1310   */\n          0x00\n            /* \"#utility.yul\":1334:1339   */\n          dup2\n            /* \"#utility.yul\":1330:1332   */\n          dup2\n            /* \"#utility.yul\":1323:1340   */\n          mstore\n            /* \"#utility.yul\":1379:1383   */\n          0x20\n            /* \"#utility.yul\":1375:1377   */\n          dup2\n            /* \"#utility.yul\":1365:1384   */\n          keccak256\n            /* \"#utility.yul\":1449:1451   */\n          0x1f\n            /* \"#utility.yul\":1437:1447   */\n          dup6\n            /* \"#utility.yul\":1433:1452   */\n          add\n            /* \"#utility.yul\":1430:1431   */\n          0x05\n            /* \"#utility.yul\":1426:1453   */\n          shr\n            /* \"#utility.yul\":1420:1424   */\n          dup2\n            /* \"#utility.yul\":1416:1454   */\n          add\n            /* \"#utility.yul\":1485:1489   */\n          0x20\n            /* \"#utility.yul\":1473:1483   */\n          dup7\n            /* \"#utility.yul\":1470:1490   */\n          lt\n            /* \"#utility.yul\":1467:1514   */\n          iszero\n          tag_89\n          jumpi\n          pop\n            /* \"#utility.yul\":1508:1512   */\n          dup1\n            /* \"#utility.yul\":1467:1514   */\n        tag_89:\n            /* \"#utility.yul\":1563:1565   */\n          0x1f\n            /* \"#utility.yul\":1558:1561   */\n          dup6\n            /* \"#utility.yul\":1554:1566   */\n          add\n            /* \"#utility.yul\":1551:1552   */\n          0x05\n            /* \"#utility.yul\":1547:1567   */\n          shr\n            /* \"#utility.yul\":1541:1545   */\n          dup3\n            /* \"#utility.yul\":1537:1568   */\n          add\n            /* \"#utility.yul\":1527:1568   */\n          swap2\n          pop\n            /* \"#utility.yul\":1618:1700   */\n        tag_90:\n            /* \"#utility.yul\":1636:1638   */\n          dup2\n            /* \"#utility.yul\":1629:1634   */\n          dup2\n            /* \"#utility.yul\":1626:1639   */\n          lt\n            /* \"#utility.yul\":1618:1700   */\n          iszero\n          tag_92\n          jumpi\n            /* \"#utility.yul\":1681:1698   */\n          dup3\n          dup2\n          sstore\n            /* \"#utility.yul\":1662:1663   */\n          0x01\n            /* \"#utility.yul\":1651:1664   */\n          add\n            /* \"#utility.yul\":1618:1700   */\n          jump(tag_90)\n        tag_92:\n            /* \"#utility.yul\":1622:1625   */\n          pop\n          pop\n          pop\n            /* \"#utility.yul\":1171:1716   */\n          pop\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":1892:3244   */\n        tag_9:\n            /* \"#utility.yul\":2012:2022   */\n          dup2\n          mload\n          sub(shl(0x40, 0x01), 0x01)\n            /* \"#utility.yul\":2034:2064   */\n          dup2\n          gt\n            /* \"#utility.yul\":2031:2087   */\n          iszero\n          tag_96\n          jumpi\n            /* \"#utility.yul\":2067:2085   */\n          tag_96\n          tag_69\n          jump\t// in\n        tag_96:\n            /* \"#utility.yul\":2096:2193   */\n          tag_97\n            /* \"#utility.yul\":2186:2192   */\n          dup2\n            /* \"#utility.yul\":2146:2184   */\n          tag_98\n            /* \"#utility.yul\":2178:2182   */\n          dup5\n            /* \"#utility.yul\":2172:2183   */\n          sload\n            /* \"#utility.yul\":2146:2184   */\n          tag_70\n          jump\t// in\n        tag_98:\n            /* \"#utility.yul\":2140:2144   */\n          dup5\n            /* \"#utility.yul\":2096:2193   */\n          tag_72\n          jump\t// in\n        tag_97:\n            /* \"#utility.yul\":2248:2252   */\n          0x20\n          dup1\n            /* \"#utility.yul\":2312:2314   */\n          0x1f\n            /* \"#utility.yul\":2301:2315   */\n          dup4\n          gt\n            /* \"#utility.yul\":2329:2330   */\n          0x01\n            /* \"#utility.yul\":2324:2987   */\n          dup2\n          eq\n          tag_100\n          jumpi\n            /* \"#utility.yul\":3031:3032   */\n          0x00\n            /* \"#utility.yul\":3048:3054   */\n          dup5\n            /* \"#utility.yul\":3045:3134   */\n          iszero\n          tag_101\n          jumpi\n          pop\n            /* \"#utility.yul\":3100:3119   */\n          dup6\n          dup4\n          add\n            /* \"#utility.yul\":3094:3120   */\n          mload\n            /* \"#utility.yul\":3045:3134   */\n        tag_101:\n          not(0x00)\n            /* \"#utility.yul\":1849:1850   */\n          0x03\n            /* \"#utility.yul\":1845:1856   */\n          dup7\n          swap1\n          shl\n            /* \"#utility.yul\":1841:1865   */\n          shr\n            /* \"#utility.yul\":1837:1866   */\n          not\n            /* \"#utility.yul\":1827:1867   */\n          and\n            /* \"#utility.yul\":1873:1874   */\n          0x01\n            /* \"#utility.yul\":1869:1880   */\n          dup6\n          swap1\n          shl\n            /* \"#utility.yul\":1824:1881   */\n          or\n            /* \"#utility.yul\":3147:3228   */\n          dup6\n          sstore\n            /* \"#utility.yul\":2294:3238   */\n          jump(tag_92)\n            /* \"#utility.yul\":2324:2987   */\n        tag_100:\n            /* \"#utility.yul\":1118:1119   */\n          0x00\n            /* \"#utility.yul\":1111:1125   */\n          dup6\n          dup2\n          mstore\n            /* \"#utility.yul\":1155:1159   */\n          0x20\n            /* \"#utility.yul\":1142:1160   */\n          dup2\n          keccak256\n          not(0x1f)\n            /* \"#utility.yul\":2360:2380   */\n          dup7\n          and\n          swap2\n            /* \"#utility.yul\":2478:2714   */\n        tag_104:\n            /* \"#utility.yul\":2492:2499   */\n          dup3\n            /* \"#utility.yul\":2489:2490   */\n          dup2\n            /* \"#utility.yul\":2486:2500   */\n          lt\n            /* \"#utility.yul\":2478:2714   */\n          iszero\n          tag_106\n          jumpi\n            /* \"#utility.yul\":2581:2600   */\n          dup9\n          dup7\n          add\n            /* \"#utility.yul\":2575:2601   */\n          mload\n            /* \"#utility.yul\":2560:2602   */\n          dup3\n          sstore\n            /* \"#utility.yul\":2673:2700   */\n          swap5\n          dup5\n          add\n          swap5\n            /* \"#utility.yul\":2641:2642   */\n          0x01\n            /* \"#utility.yul\":2629:2643   */\n          swap1\n          swap2\n          add\n          swap1\n            /* \"#utility.yul\":2508:2527   */\n          dup5\n          add\n            /* \"#utility.yul\":2478:2714   */\n          jump(tag_104)\n        tag_106:\n            /* \"#utility.yul\":2482:2485   */\n          pop\n            /* \"#utility.yul\":2742:2748   */\n          dup6\n            /* \"#utility.yul\":2733:2740   */\n          dup3\n            /* \"#utility.yul\":2730:2749   */\n          lt\n            /* \"#utility.yul\":2727:2928   */\n          iszero\n          tag_107\n          jumpi\n            /* \"#utility.yul\":2803:2822   */\n          dup8\n          dup6\n          add\n            /* \"#utility.yul\":2797:2823   */\n          mload\n          not(0x00)\n            /* \"#utility.yul\":2886:2887   */\n          0x03\n            /* \"#utility.yul\":2882:2896   */\n          dup9\n          swap1\n          shl\n            /* \"#utility.yul\":2898:2901   */\n          0xf8\n            /* \"#utility.yul\":2878:2902   */\n          and\n            /* \"#utility.yul\":2874:2911   */\n          shr\n            /* \"#utility.yul\":2870:2912   */\n          not\n            /* \"#utility.yul\":2855:2913   */\n          and\n            /* \"#utility.yul\":2840:2914   */\n          dup2\n          sstore\n            /* \"#utility.yul\":2727:2928   */\n        tag_107:\n          pop\n          pop\n          pop\n          pop\n          pop\n            /* \"#utility.yul\":2974:2975   */\n          0x01\n            /* \"#utility.yul\":2958:2972   */\n          swap1\n          dup2\n          shl\n            /* \"#utility.yul\":2954:2976   */\n          add\n            /* \"#utility.yul\":2941:2977   */\n          swap1\n          sstore\n          pop\n            /* \"#utility.yul\":1892:3244   */\n          jump\t// out\n            /* \"#utility.yul\":3249:3452   */\n        tag_14:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"#utility.yul\":3413:3445   */\n          swap2\n          swap1\n          swap2\n          and\n            /* \"#utility.yul\":3395:3446   */\n          dup2\n          mstore\n            /* \"#utility.yul\":3383:3385   */\n          0x20\n            /* \"#utility.yul\":3368:3386   */\n          add\n          swap1\n            /* \"#utility.yul\":3249:3452   */\n          jump\t// out\n            /* \"#utility.yul\":4505:4632   */\n        tag_74:\n            /* \"#utility.yul\":4566:4576   */\n          0x4e487b71\n            /* \"#utility.yul\":4561:4564   */\n          0xe0\n            /* \"#utility.yul\":4557:4577   */\n          shl\n            /* \"#utility.yul\":4554:4555   */\n          0x00\n            /* \"#utility.yul\":4547:4578   */\n          mstore\n            /* \"#utility.yul\":4597:4601   */\n          0x11\n            /* \"#utility.yul\":4594:4595   */\n          0x04\n            /* \"#utility.yul\":4587:4602   */\n          mstore\n            /* \"#utility.yul\":4621:4625   */\n          0x24\n            /* \"#utility.yul\":4618:4619   */\n          0x00\n            /* \"#utility.yul\":4611:4626   */\n          revert\n            /* \"#utility.yul\":4637:5059   */\n        tag_75:\n            /* \"#utility.yul\":4726:4727   */\n          0x01\n            /* \"#utility.yul\":4769:4774   */\n          dup2\n            /* \"#utility.yul\":4726:4727   */\n          dup2\n            /* \"#utility.yul\":4783:5053   */\n        tag_114:\n            /* \"#utility.yul\":4804:4811   */\n          dup1\n            /* \"#utility.yul\":4794:4802   */\n          dup6\n            /* \"#utility.yul\":4791:4812   */\n          gt\n            /* \"#utility.yul\":4783:5053   */\n          iszero\n          tag_116\n          jumpi\n            /* \"#utility.yul\":4863:4867   */\n          dup2\n            /* \"#utility.yul\":4859:4860   */\n          0x00\n            /* \"#utility.yul\":4855:4861   */\n          not\n            /* \"#utility.yul\":4851:4868   */\n          div\n            /* \"#utility.yul\":4845:4849   */\n          dup3\n            /* \"#utility.yul\":4842:4869   */\n          gt\n            /* \"#utility.yul\":4839:4892   */\n          iszero\n          tag_118\n          jumpi\n            /* \"#utility.yul\":4872:4890   */\n          tag_118\n          tag_74\n          jump\t// in\n        tag_118:\n            /* \"#utility.yul\":4922:4929   */\n          dup1\n            /* \"#utility.yul\":4912:4920   */\n          dup6\n            /* \"#utility.yul\":4908:4930   */\n          and\n            /* \"#utility.yul\":4905:4960   */\n          iszero\n          tag_119\n          jumpi\n            /* \"#utility.yul\":4942:4958   */\n          swap2\n          dup2\n          mul\n          swap2\n            /* \"#utility.yul\":4905:4960   */\n        tag_119:\n            /* \"#utility.yul\":5021:5043   */\n          swap4\n          dup5\n          shr\n          swap4\n            /* \"#utility.yul\":4981:4996   */\n          swap1\n          dup1\n          mul\n          swap1\n            /* \"#utility.yul\":4783:5053   */\n          jump(tag_114)\n        tag_116:\n            /* \"#utility.yul\":4787:4790   */\n          pop\n            /* \"#utility.yul\":4637:5059   */\n          swap3\n          pop\n          swap3\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":5064:5870   */\n        tag_76:\n            /* \"#utility.yul\":5113:5118   */\n          0x00\n            /* \"#utility.yul\":5143:5151   */\n          dup3\n            /* \"#utility.yul\":5133:5213   */\n          tag_121\n          jumpi\n          pop\n            /* \"#utility.yul\":5184:5185   */\n          0x01\n            /* \"#utility.yul\":5198:5203   */\n          jump(tag_120)\n            /* \"#utility.yul\":5133:5213   */\n        tag_121:\n            /* \"#utility.yul\":5232:5236   */\n          dup2\n            /* \"#utility.yul\":5222:5298   */\n          tag_122\n          jumpi\n          pop\n            /* \"#utility.yul\":5269:5270   */\n          0x00\n            /* \"#utility.yul\":5283:5288   */\n          jump(tag_120)\n            /* \"#utility.yul\":5222:5298   */\n        tag_122:\n            /* \"#utility.yul\":5314:5318   */\n          dup2\n            /* \"#utility.yul\":5332:5333   */\n          0x01\n            /* \"#utility.yul\":5327:5386   */\n          dup2\n          eq\n          tag_124\n          jumpi\n            /* \"#utility.yul\":5400:5401   */\n          0x02\n            /* \"#utility.yul\":5395:5525   */\n          dup2\n          eq\n          tag_125\n          jumpi\n            /* \"#utility.yul\":5307:5525   */\n          jump(tag_123)\n            /* \"#utility.yul\":5327:5386   */\n        tag_124:\n            /* \"#utility.yul\":5357:5358   */\n          0x01\n            /* \"#utility.yul\":5348:5358   */\n          swap2\n          pop\n            /* \"#utility.yul\":5371:5376   */\n          pop\n          jump(tag_120)\n            /* \"#utility.yul\":5395:5525   */\n        tag_125:\n            /* \"#utility.yul\":5432:5435   */\n          0xff\n            /* \"#utility.yul\":5422:5430   */\n          dup5\n            /* \"#utility.yul\":5419:5436   */\n          gt\n            /* \"#utility.yul\":5416:5459   */\n          iszero\n          tag_127\n          jumpi\n            /* \"#utility.yul\":5439:5457   */\n          tag_127\n          tag_74\n          jump\t// in\n        tag_127:\n          pop\n          pop\n            /* \"#utility.yul\":5495:5496   */\n          0x01\n            /* \"#utility.yul\":5481:5497   */\n          dup3\n          shl\n            /* \"#utility.yul\":5510:5515   */\n          jump(tag_120)\n            /* \"#utility.yul\":5307:5525   */\n        tag_123:\n          pop\n            /* \"#utility.yul\":5609:5611   */\n          0x20\n            /* \"#utility.yul\":5599:5607   */\n          dup4\n            /* \"#utility.yul\":5596:5612   */\n          lt\n            /* \"#utility.yul\":5590:5593   */\n          0x0133\n            /* \"#utility.yul\":5584:5588   */\n          dup4\n            /* \"#utility.yul\":5581:5594   */\n          lt\n            /* \"#utility.yul\":5577:5613   */\n          and\n            /* \"#utility.yul\":5571:5573   */\n          0x4e\n            /* \"#utility.yul\":5561:5569   */\n          dup5\n            /* \"#utility.yul\":5558:5574   */\n          lt\n            /* \"#utility.yul\":5553:5555   */\n          0x0b\n            /* \"#utility.yul\":5547:5551   */\n          dup5\n            /* \"#utility.yul\":5544:5556   */\n          lt\n            /* \"#utility.yul\":5540:5575   */\n          and\n            /* \"#utility.yul\":5537:5614   */\n          or\n            /* \"#utility.yul\":5534:5693   */\n          iszero\n          tag_128\n          jumpi\n          pop\n            /* \"#utility.yul\":5646:5665   */\n          dup2\n          dup2\n          exp\n            /* \"#utility.yul\":5678:5683   */\n          jump(tag_120)\n            /* \"#utility.yul\":5534:5693   */\n        tag_128:\n            /* \"#utility.yul\":5725:5759   */\n          tag_129\n            /* \"#utility.yul\":5750:5758   */\n          dup4\n            /* \"#utility.yul\":5744:5748   */\n          dup4\n            /* \"#utility.yul\":5725:5759   */\n          tag_75\n          jump\t// in\n        tag_129:\n            /* \"#utility.yul\":5795:5801   */\n          dup1\n            /* \"#utility.yul\":5791:5792   */\n          0x00\n            /* \"#utility.yul\":5787:5793   */\n          not\n            /* \"#utility.yul\":5783:5802   */\n          div\n            /* \"#utility.yul\":5774:5781   */\n          dup3\n            /* \"#utility.yul\":5771:5803   */\n          gt\n            /* \"#utility.yul\":5768:5826   */\n          iszero\n          tag_131\n          jumpi\n            /* \"#utility.yul\":5806:5824   */\n          tag_131\n          tag_74\n          jump\t// in\n        tag_131:\n            /* \"#utility.yul\":5844:5864   */\n          mul\n          swap1\n          pop\n            /* \"#utility.yul\":5064:5870   */\n        tag_120:\n          swap3\n          swap2\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":5875:6015   */\n        tag_28:\n            /* \"#utility.yul\":5933:5938   */\n          0x00\n            /* \"#utility.yul\":5962:6009   */\n          tag_133\n            /* \"#utility.yul\":6003:6007   */\n          0xff\n            /* \"#utility.yul\":5993:6001   */\n          dup5\n            /* \"#utility.yul\":5989:6008   */\n          and\n            /* \"#utility.yul\":5983:5987   */\n          dup4\n            /* \"#utility.yul\":5962:6009   */\n          tag_76\n          jump\t// in\n        tag_133:\n            /* \"#utility.yul\":5953:6009   */\n          swap4\n            /* \"#utility.yul\":5875:6015   */\n          swap3\n          pop\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":6020:6237   */\n        tag_30:\n            /* \"#utility.yul\":6060:6061   */\n          0x00\n            /* \"#utility.yul\":6086:6087   */\n          dup3\n            /* \"#utility.yul\":6076:6208   */\n          tag_135\n          jumpi\n            /* \"#utility.yul\":6130:6140   */\n          0x4e487b71\n            /* \"#utility.yul\":6125:6128   */\n          0xe0\n            /* \"#utility.yul\":6121:6141   */\n          shl\n            /* \"#utility.yul\":6118:6119   */\n          0x00\n            /* \"#utility.yul\":6111:6142   */\n          mstore\n            /* \"#utility.yul\":6165:6169   */\n          0x12\n            /* \"#utility.yul\":6162:6163   */\n          0x04\n            /* \"#utility.yul\":6155:6170   */\n          mstore\n            /* \"#utility.yul\":6193:6197   */\n          0x24\n            /* \"#utility.yul\":6190:6191   */\n          0x00\n            /* \"#utility.yul\":6183:6198   */\n          revert\n            /* \"#utility.yul\":6076:6208   */\n        tag_135:\n          pop\n            /* \"#utility.yul\":6222:6231   */\n          div\n          swap1\n            /* \"#utility.yul\":6020:6237   */\n          jump\t// out\n            /* \"#utility.yul\":6587:6755   */\n        tag_37:\n            /* \"#utility.yul\":6660:6669   */\n          dup1\n          dup3\n          mul\n            /* \"#utility.yul\":6691:6700   */\n          dup2\n          iszero\n            /* \"#utility.yul\":6708:6723   */\n          dup3\n          dup3\n          div\n            /* \"#utility.yul\":6702:6724   */\n          dup5\n          eq\n            /* \"#utility.yul\":6688:6725   */\n          or\n            /* \"#utility.yul\":6678:6749   */\n          tag_120\n          jumpi\n            /* \"#utility.yul\":6729:6747   */\n          tag_120\n          tag_74\n          jump\t// in\n            /* \"#utility.yul\":6760:6885   */\n        tag_59:\n            /* \"#utility.yul\":6825:6834   */\n          dup1\n          dup3\n          add\n            /* \"#utility.yul\":6846:6856   */\n          dup1\n          dup3\n          gt\n            /* \"#utility.yul\":6843:6879   */\n          iszero\n          tag_120\n          jumpi\n            /* \"#utility.yul\":6859:6877   */\n          tag_120\n          tag_74\n          jump\t// in\n            /* \"#utility.yul\":7240:7417   */\n        tag_77:\n            /* \"contracts/token.sol\":459:2753  contract WBGZToken is ERC20, ERC20Burnable, Ownable, Pausable {... */\n          dataSize(sub_0)\n          dup1\n          dataOffset(sub_0)\n          0x00\n          codecopy\n          0x00\n          return\n        stop\n\n        sub_0: assembly {\n                /* \"contracts/token.sol\":459:2753  contract WBGZToken is ERC20, ERC20Burnable, Ownable, Pausable {... */\n              mstore(0x40, 0x80)\n              callvalue\n              dup1\n              iszero\n              tag_1\n              jumpi\n              0x00\n              dup1\n              revert\n            tag_1:\n              pop\n              jumpi(tag_2, lt(calldatasize, 0x04))\n              shr(0xe0, calldataload(0x00))\n              dup1\n              0x06fdde03\n              eq\n              tag_3\n              jumpi\n              dup1\n              0x095ea7b3\n              eq\n              tag_4\n              jumpi\n              dup1\n              0x18160ddd\n              eq\n              tag_5\n              jumpi\n              dup1\n              0x23b872dd\n              eq\n              tag_6\n              jumpi\n              dup1\n              0x313ce567\n              eq\n              tag_7\n              jumpi\n              dup1\n              0x3f4ba83a\n              eq\n              tag_8\n              jumpi\n              dup1\n              0x40c10f19\n              eq\n              tag_9\n              jumpi\n              dup1\n              0x42966c68\n              eq\n              tag_10\n              jumpi\n              dup1\n              0x5c975abb\n              eq\n              tag_11\n              jumpi\n              dup1\n              0x70a08231\n              eq\n              tag_12\n              jumpi\n              dup1\n              0x715018a6\n              eq\n              tag_13\n              jumpi\n              dup1\n              0x79cc6790\n              eq\n              tag_14\n              jumpi\n              dup1\n              0x8456cb59\n              eq\n              tag_15\n              jumpi\n              dup1\n              0x8da5cb5b\n              eq\n              tag_16\n              jumpi\n              dup1\n              0x95d89b41\n              eq\n              tag_17\n              jumpi\n              dup1\n              0xa9059cbb\n              eq\n              tag_18\n              jumpi\n              dup1\n              0xdd62ed3e\n              eq\n              tag_19\n              jumpi\n              dup1\n              0xf2fde38b\n              eq\n              tag_20\n              jumpi\n            tag_2:\n              0x00\n              dup1\n              revert\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n            tag_3:\n              tag_21\n              tag_22\n              jump\t// in\n            tag_21:\n              mload(0x40)\n              tag_23\n              swap2\n              swap1\n              tag_24\n              jump\t// in\n            tag_23:\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              return\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n            tag_4:\n              tag_25\n              tag_26\n              calldatasize\n              0x04\n              tag_27\n              jump\t// in\n            tag_26:\n              tag_28\n              jump\t// in\n            tag_25:\n              mload(0x40)\n                /* \"#utility.yul\":1169:1183   */\n              swap1\n              iszero\n                /* \"#utility.yul\":1162:1184   */\n              iszero\n                /* \"#utility.yul\":1144:1185   */\n              dup2\n              mstore\n                /* \"#utility.yul\":1132:1134   */\n              0x20\n                /* \"#utility.yul\":1117:1135   */\n              add\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n              tag_23\n                /* \"#utility.yul\":1004:1191   */\n              jump\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n            tag_5:\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2881:2893  _totalSupply */\n              sload(0x02)\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n            tag_31:\n              mload(0x40)\n                /* \"#utility.yul\":1342:1367   */\n              swap1\n              dup2\n              mstore\n                /* \"#utility.yul\":1330:1332   */\n              0x20\n                /* \"#utility.yul\":1315:1333   */\n              add\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n              tag_23\n                /* \"#utility.yul\":1196:1373   */\n              jump\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n            tag_6:\n              tag_25\n              tag_36\n              calldatasize\n              0x04\n              tag_37\n              jump\t// in\n            tag_36:\n              tag_38\n              jump\t// in\n                /* \"contracts/token.sol\":1758:1856  function decimals() public view virtual override returns (uint8) {... */\n            tag_7:\n                /* \"contracts/token.sol\":1840:1849  _decimals */\n              sload(0x05)\n              shl(0xa8, 0x01)\n              swap1\n              div\n              0xff\n              and\n                /* \"contracts/token.sol\":1758:1856  function decimals() public view virtual override returns (uint8) {... */\n              mload(0x40)\n                /* \"#utility.yul\":1883:1887   */\n              0xff\n                /* \"#utility.yul\":1871:1888   */\n              swap1\n              swap2\n              and\n                /* \"#utility.yul\":1853:1889   */\n              dup2\n              mstore\n                /* \"#utility.yul\":1841:1843   */\n              0x20\n                /* \"#utility.yul\":1826:1844   */\n              add\n                /* \"contracts/token.sol\":1758:1856  function decimals() public view virtual override returns (uint8) {... */\n              tag_23\n                /* \"#utility.yul\":1711:1895   */\n              jump\n                /* \"contracts/token.sol\":2434:2497  function unpause() public onlyOwner {... */\n            tag_8:\n              tag_44\n              tag_45\n              jump\t// in\n            tag_44:\n              stop\n                /* \"contracts/token.sol\":2008:2179  function mint(address to, uint256 amount) public onlyOwner {... */\n            tag_9:\n              tag_44\n              tag_47\n              calldatasize\n              0x04\n              tag_27\n              jump\t// in\n            tag_47:\n              tag_48\n              jump\t// in\n                /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n            tag_10:\n              tag_44\n              tag_50\n              calldatasize\n              0x04\n              tag_51\n              jump\t// in\n            tag_50:\n              tag_52\n              jump\t// in\n                /* \"@openzeppelin/contracts/utils/Pausable.sol\":1726:1810  function paused() public view virtual returns (bool) {... */\n            tag_11:\n              tag_25\n              tag_54\n              jump\t// in\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n            tag_12:\n              tag_31\n              tag_57\n              calldatasize\n              0x04\n              tag_58\n              jump\t// in\n            tag_57:\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n              and\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2998:3005  uint256 */\n              0x00\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n              swap1\n              dup2\n              mstore\n              0x20\n              dup2\n              swap1\n              mstore\n              0x40\n              swap1\n              keccak256\n              sload\n              swap1\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n              jump\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n            tag_13:\n              tag_44\n              tag_62\n              jump\t// in\n                /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n            tag_14:\n              tag_44\n              tag_64\n              calldatasize\n              0x04\n              tag_27\n              jump\t// in\n            tag_64:\n              tag_65\n              jump\t// in\n                /* \"contracts/token.sol\":2280:2339  function pause() public onlyOwner {... */\n            tag_15:\n              tag_44\n              tag_67\n              jump\t// in\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n            tag_16:\n              tag_68\n              tag_69\n              jump\t// in\n            tag_68:\n              mload(0x40)\n              tag_23\n              swap2\n              swap1\n              tag_71\n              jump\t// in\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n            tag_17:\n              tag_21\n              tag_73\n              jump\t// in\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n            tag_18:\n              tag_25\n              tag_76\n              calldatasize\n              0x04\n              tag_27\n              jump\t// in\n            tag_76:\n              tag_77\n              jump\t// in\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n            tag_19:\n              tag_31\n              tag_80\n              calldatasize\n              0x04\n              tag_81\n              jump\t// in\n            tag_80:\n              tag_82\n              jump\t// in\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n            tag_20:\n              tag_44\n              tag_85\n              calldatasize\n              0x04\n              tag_58\n              jump\t// in\n            tag_85:\n              tag_86\n              jump\t// in\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n            tag_22:\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n              0x60\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n              0x03\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n              dup1\n              sload\n              tag_88\n              swap1\n              tag_89\n              jump\t// in\n            tag_88:\n              dup1\n              0x1f\n              add\n              0x20\n              dup1\n              swap2\n              div\n              mul\n              0x20\n              add\n              mload(0x40)\n              swap1\n              dup2\n              add\n              0x40\n              mstore\n              dup1\n              swap3\n              swap2\n              swap1\n              dup2\n              dup2\n              mstore\n              0x20\n              add\n              dup3\n              dup1\n              sload\n              tag_90\n              swap1\n              tag_89\n              jump\t// in\n            tag_90:\n              dup1\n              iszero\n              tag_91\n              jumpi\n              dup1\n              0x1f\n              lt\n              tag_92\n              jumpi\n              0x0100\n              dup1\n              dup4\n              sload\n              div\n              mul\n              dup4\n              mstore\n              swap2\n              0x20\n              add\n              swap2\n              jump(tag_91)\n            tag_92:\n              dup3\n              add\n              swap2\n              swap1\n              0x00\n              mstore\n              keccak256(0x00, 0x20)\n              swap1\n            tag_93:\n              dup2\n              sload\n              dup2\n              mstore\n              swap1\n              0x01\n              add\n              swap1\n              0x20\n              add\n              dup1\n              dup4\n              gt\n              tag_93\n              jumpi\n              dup3\n              swap1\n              sub\n              0x1f\n              and\n              dup3\n              add\n              swap2\n            tag_91:\n              pop\n              pop\n              pop\n              pop\n              pop\n              swap1\n              pop\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n              swap1\n              jump\t// out\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n            tag_28:\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3975:3979  bool */\n              0x00\n                /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n              caller\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n              tag_97\n                /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n              dup2\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4045:4052  spender */\n              dup6\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4054:4059  value */\n              dup6\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4037  _approve */\n              tag_98\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n              jump\t// in\n            tag_97:\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4077:4081  true */\n              0x01\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4070:4081  return true */\n              swap2\n              pop\n              pop\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n            tag_94:\n              swap3\n              swap2\n              pop\n              pop\n              jump\t// out\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n            tag_38:\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4767:4771  bool */\n              0x00\n                /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n              caller\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4860  _spendAllowance(from, spender, value) */\n              tag_102\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4839:4843  from */\n              dup6\n                /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n              dup3\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4854:4859  value */\n              dup6\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4838  _spendAllowance */\n              tag_103\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4860  _spendAllowance(from, spender, value) */\n              jump\t// in\n            tag_102:\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4896  _transfer(from, to, value) */\n              tag_104\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4880:4884  from */\n              dup6\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4886:4888  to */\n              dup6\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4890:4895  value */\n              dup6\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4879  _transfer */\n              tag_105\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4896  _transfer(from, to, value) */\n              jump\t// in\n            tag_104:\n              pop\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4913:4917  true */\n              0x01\n              swap5\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n              swap4\n              pop\n              pop\n              pop\n              pop\n              jump\t// out\n                /* \"contracts/token.sol\":2434:2497  function unpause() public onlyOwner {... */\n            tag_45:\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n              tag_108\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n              tag_109\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n              jump\t// in\n            tag_108:\n                /* \"contracts/token.sol\":2480:2490  _unpause() */\n              tag_111\n                /* \"contracts/token.sol\":2480:2488  _unpause */\n              tag_112\n                /* \"contracts/token.sol\":2480:2490  _unpause() */\n              jump\t// in\n            tag_111:\n                /* \"contracts/token.sol\":2434:2497  function unpause() public onlyOwner {... */\n              jump\t// out\n                /* \"contracts/token.sol\":2008:2179  function mint(address to, uint256 amount) public onlyOwner {... */\n            tag_48:\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n              tag_114\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n              tag_109\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n              jump\t// in\n            tag_114:\n                /* \"contracts/token.sol\":667:684  10_000_000 * 1e18 */\n              0x084595161401484a000000\n                /* \"contracts/token.sol\":2101:2107  amount */\n              dup2\n                /* \"contracts/token.sol\":2085:2098  totalSupply() */\n              tag_116\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2881:2893  _totalSupply */\n              sload(0x02)\n              swap1\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n              jump\n                /* \"contracts/token.sol\":2085:2098  totalSupply() */\n            tag_116:\n                /* \"contracts/token.sol\":2085:2107  totalSupply() + amount */\n              tag_117\n              swap2\n              swap1\n              tag_118\n              jump\t// in\n            tag_117:\n                /* \"contracts/token.sol\":2085:2121  totalSupply() + amount <= MAX_SUPPLY */\n              gt\n              iszero\n                /* \"contracts/token.sol\":2077:2145  require(totalSupply() + amount <= MAX_SUPPLY, \"Max supply exceeded\") */\n              tag_119\n              jumpi\n              mload(0x40)\n              shl(0xe5, 0x461bcd)\n              dup2\n              mstore\n                /* \"#utility.yul\":3563:3565   */\n              0x20\n                /* \"contracts/token.sol\":2077:2145  require(totalSupply() + amount <= MAX_SUPPLY, \"Max supply exceeded\") */\n              0x04\n              dup3\n              add\n                /* \"#utility.yul\":3545:3566   */\n              mstore\n                /* \"#utility.yul\":3602:3604   */\n              0x13\n                /* \"#utility.yul\":3582:3600   */\n              0x24\n              dup3\n              add\n                /* \"#utility.yul\":3575:3605   */\n              mstore\n              shl(0x6a, 0x13585e081cdd5c1c1b1e48195e18d959591959)\n                /* \"#utility.yul\":3621:3639   */\n              0x44\n              dup3\n              add\n                /* \"#utility.yul\":3614:3663   */\n              mstore\n                /* \"#utility.yul\":3680:3698   */\n              0x64\n              add\n                /* \"contracts/token.sol\":2077:2145  require(totalSupply() + amount <= MAX_SUPPLY, \"Max supply exceeded\") */\n            tag_120:\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              revert\n            tag_119:\n                /* \"contracts/token.sol\":2155:2172  _mint(to, amount) */\n              tag_122\n                /* \"contracts/token.sol\":2161:2163  to */\n              dup3\n                /* \"contracts/token.sol\":2165:2171  amount */\n              dup3\n                /* \"contracts/token.sol\":2155:2160  _mint */\n              tag_123\n                /* \"contracts/token.sol\":2155:2172  _mint(to, amount) */\n              jump\t// in\n            tag_122:\n                /* \"contracts/token.sol\":2008:2179  function mint(address to, uint256 amount) public onlyOwner {... */\n              pop\n              pop\n              jump\t// out\n                /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n            tag_52:\n                /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n              tag_125\n                /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n              caller\n                /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":692:697  value */\n              dup3\n                /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:677  _burn */\n              tag_127\n                /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n              jump\t// in\n            tag_125:\n                /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n              pop\n              jump\t// out\n                /* \"@openzeppelin/contracts/utils/Pausable.sol\":1726:1810  function paused() public view virtual returns (bool) {... */\n            tag_54:\n                /* \"@openzeppelin/contracts/utils/Pausable.sol\":1796:1803  _paused */\n              sload(0x05)\n              shl(0xa0, 0x01)\n              swap1\n              div\n              0xff\n              and\n              swap1\n                /* \"@openzeppelin/contracts/utils/Pausable.sol\":1726:1810  function paused() public view virtual returns (bool) {... */\n              jump\t// out\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n            tag_62:\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n              tag_131\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n              tag_109\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n              jump\t// in\n            tag_131:\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n              tag_111\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n              0x00\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n              tag_134\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n              jump\t// in\n                /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n            tag_65:\n                /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n              tag_136\n                /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1112:1119  account */\n              dup3\n                /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n              caller\n                /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1135:1140  value */\n              dup4\n                /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1111  _spendAllowance */\n              tag_103\n                /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n              jump\t// in\n            tag_136:\n                /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n              tag_122\n                /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1157:1164  account */\n              dup3\n                /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1166:1171  value */\n              dup3\n                /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1156  _burn */\n              tag_127\n                /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n              jump\t// in\n                /* \"contracts/token.sol\":2280:2339  function pause() public onlyOwner {... */\n            tag_67:\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n              tag_140\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n              tag_109\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n              jump\t// in\n            tag_140:\n                /* \"contracts/token.sol\":2324:2332  _pause() */\n              tag_111\n                /* \"contracts/token.sol\":2324:2330  _pause */\n              tag_143\n                /* \"contracts/token.sol\":2324:2332  _pause() */\n              jump\t// in\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n            tag_69:\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n              and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n              swap1\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n              jump\t// out\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n            tag_73:\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n              0x60\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n              0x04\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n              dup1\n              sload\n              tag_88\n              swap1\n              tag_89\n              jump\t// in\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n            tag_77:\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3313:3317  bool */\n              0x00\n                /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n              caller\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3394  _transfer(owner, to, value) */\n              tag_97\n                /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n              dup2\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3386  to */\n              dup6\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3388:3393  value */\n              dup6\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3376  _transfer */\n              tag_105\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3394  _transfer(owner, to, value) */\n              jump\t// in\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n            tag_82:\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n              swap2\n              dup3\n              and\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3535:3542  uint256 */\n              0x00\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n              swap1\n              dup2\n              mstore\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3572  _allowances */\n              0x01\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n              0x20\n              swap1\n              dup2\n              mstore\n              0x40\n              dup1\n              dup4\n              keccak256\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n              swap4\n              swap1\n              swap5\n              and\n              dup3\n              mstore\n              swap2\n              swap1\n              swap2\n              mstore\n              keccak256\n              sload\n              swap1\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n              jump\t// out\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n            tag_86:\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n              tag_156\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n              tag_109\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n              jump\t// in\n            tag_156:\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n              dup2\n              and\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n              tag_158\n              jumpi\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n              0x00\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n              mload(0x40)\n              shl(0xe0, 0x1e4fbdf7)\n              dup2\n              mstore\n              0x04\n              add\n              tag_120\n              swap2\n              swap1\n              tag_71\n              jump\t// in\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n            tag_158:\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n              tag_125\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n              dup2\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n              tag_134\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n              jump\t// in\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n            tag_98:\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n              tag_163\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8723:8728  owner */\n              dup4\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8730:8737  spender */\n              dup4\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8739:8744  value */\n              dup4\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8746:8750  true */\n              0x01\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8722  _approve */\n              tag_164\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n              jump\t// in\n            tag_163:\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n              pop\n              pop\n              pop\n              jump\t// out\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10795  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n            tag_103:\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10418:10442  uint256 currentAllowance */\n              0x00\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10470  allowance(owner, spender) */\n              tag_166\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10455:10460  owner */\n              dup5\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10462:10469  spender */\n              dup5\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10454  allowance */\n              tag_82\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10470  allowance(owner, spender) */\n              jump\t// in\n            tag_166:\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10418:10470  uint256 currentAllowance = allowance(owner, spender) */\n              swap1\n              pop\n              not(0x00)\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10484:10500  currentAllowance */\n              dup2\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10484:10520  currentAllowance < type(uint256).max */\n              lt\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10480:10789  if (currentAllowance < type(uint256).max) {... */\n              iszero\n              tag_171\n              jumpi\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10559:10564  value */\n              dup2\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10540:10556  currentAllowance */\n              dup2\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10540:10564  currentAllowance < value */\n              lt\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10536:10666  if (currentAllowance < value) {... */\n              iszero\n              tag_168\n              jumpi\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10618:10625  spender */\n              dup3\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10627:10643  currentAllowance */\n              dup2\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10645:10650  value */\n              dup4\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10591:10651  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n              mload(0x40)\n              shl(0xe1, 0x7dc7a0d9)\n              dup2\n              mstore\n              0x04\n              add\n              tag_120\n              swap4\n              swap3\n              swap2\n              swap1\n              tag_170\n              jump\t// in\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10536:10666  if (currentAllowance < value) {... */\n            tag_168:\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10764  _approve(owner, spender, currentAllowance - value, false) */\n              tag_171\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10716:10721  owner */\n              dup5\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10730  spender */\n              dup5\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10751:10756  value */\n              dup5\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10748  currentAllowance */\n              dup5\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10756  currentAllowance - value */\n              sub\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10763  false */\n              0x00\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10715  _approve */\n              tag_164\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10764  _approve(owner, spender, currentAllowance - value, false) */\n              jump\t// in\n            tag_171:\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10408:10795  {... */\n              pop\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10795  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n              pop\n              pop\n              pop\n              jump\t// out\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5297:5597  function _transfer(address from, address to, uint256 value) internal {... */\n            tag_105:\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5398  from == address(0) */\n              dup4\n              and\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n              tag_173\n              jumpi\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5448:5449  0 */\n              0x00\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5451  ERC20InvalidSender(address(0)) */\n              mload(0x40)\n              shl(0xe1, 0x4b637e8f)\n              dup2\n              mstore\n              0x04\n              add\n              tag_120\n              swap2\n              swap1\n              tag_71\n              jump\t// in\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n            tag_173:\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5491  to == address(0) */\n              dup3\n              and\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n              tag_175\n              jumpi\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5543:5544  0 */\n              0x00\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5514:5546  ERC20InvalidReceiver(address(0)) */\n              mload(0x40)\n              shl(0xe0, 0xec442f05)\n              dup2\n              mstore\n              0x04\n              add\n              tag_120\n              swap2\n              swap1\n              tag_71\n              jump\t// in\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n            tag_175:\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n              tag_163\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5574:5578  from */\n              dup4\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5580:5582  to */\n              dup4\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5584:5589  value */\n              dup4\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5573  _update */\n              tag_178\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n              jump\t// in\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n            tag_109:\n                /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n              caller\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n              tag_181\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n              tag_69\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n              jump\t// in\n            tag_181:\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n              and\n              eq\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n              tag_111\n              jumpi\n                /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n              caller\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n              mload(0x40)\n              shl(0xe0, 0x118cdaa7)\n              dup2\n              mstore\n              0x04\n              add\n              tag_120\n              swap2\n              swap1\n              tag_71\n              jump\t// in\n                /* \"@openzeppelin/contracts/utils/Pausable.sol\":2586:2703  function _unpause() internal virtual whenPaused {... */\n            tag_112:\n                /* \"@openzeppelin/contracts/utils/Pausable.sol\":1597:1613  _requirePaused() */\n              tag_186\n                /* \"@openzeppelin/contracts/utils/Pausable.sol\":1597:1611  _requirePaused */\n              tag_187\n                /* \"@openzeppelin/contracts/utils/Pausable.sol\":1597:1613  _requirePaused() */\n              jump\t// in\n            tag_186:\n                /* \"@openzeppelin/contracts/utils/Pausable.sol\":2644:2651  _paused */\n              0x05\n                /* \"@openzeppelin/contracts/utils/Pausable.sol\":2644:2659  _paused = false */\n              dup1\n              sload\n              not(shl(0xa0, 0xff))\n              and\n              swap1\n              sstore\n                /* \"@openzeppelin/contracts/utils/Pausable.sol\":2674:2696  Unpaused(_msgSender()) */\n              0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n                /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n              caller\n                /* \"@openzeppelin/contracts/utils/Pausable.sol\":2683:2695  _msgSender() */\n            tag_189:\n                /* \"@openzeppelin/contracts/utils/Pausable.sol\":2674:2696  Unpaused(_msgSender()) */\n              mload(0x40)\n              tag_190\n              swap2\n              swap1\n              tag_71\n              jump\t// in\n            tag_190:\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              log1\n                /* \"@openzeppelin/contracts/utils/Pausable.sol\":2586:2703  function _unpause() internal virtual whenPaused {... */\n              jump\t// out\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\n            tag_123:\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n              dup3\n              and\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n              tag_192\n              jumpi\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7506  0 */\n              0x00\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7476:7508  ERC20InvalidReceiver(address(0)) */\n              mload(0x40)\n              shl(0xe0, 0xec442f05)\n              dup2\n              mstore\n              0x04\n              add\n              tag_120\n              swap2\n              swap1\n              tag_71\n              jump\t// in\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n            tag_192:\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n              tag_122\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7545  0 */\n              0x00\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7548:7555  account */\n              dup4\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7557:7562  value */\n              dup4\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  _update */\n              tag_178\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n              jump\t// in\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7888:8094  function _burn(address account, uint256 value) internal {... */\n            tag_127:\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7958:7979  account == address(0) */\n              dup3\n              and\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7954:8043  if (account == address(0)) {... */\n              tag_196\n              jumpi\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8029:8030  0 */\n              0x00\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8002:8032  ERC20InvalidSender(address(0)) */\n              mload(0x40)\n              shl(0xe1, 0x4b637e8f)\n              dup2\n              mstore\n              0x04\n              add\n              tag_120\n              swap2\n              swap1\n              tag_71\n              jump\t// in\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7954:8043  if (account == address(0)) {... */\n            tag_196:\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8052:8087  _update(account, address(0), value) */\n              tag_122\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8060:8067  account */\n              dup3\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8077:8078  0 */\n              0x00\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8081:8086  value */\n              dup4\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8052:8059  _update */\n              tag_178\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8052:8087  _update(account, address(0), value) */\n              jump\t// in\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n            tag_134:\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n              0x05\n              dup1\n              sload\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n              dup4\n              dup2\n              and\n              not(sub(shl(0xa0, 0x01), 0x01))\n              dup4\n              and\n              dup2\n              or\n              swap1\n              swap4\n              sstore\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n              mload(0x40)\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n              swap2\n              and\n              swap2\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n              swap1\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n              dup3\n              swap1\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n              0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n              swap1\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n              0x00\n              swap1\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n              log3\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n              pop\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n              pop\n              jump\t// out\n                /* \"@openzeppelin/contracts/utils/Pausable.sol\":2339:2454  function _pause() internal virtual whenNotPaused {... */\n            tag_143:\n                /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n              tag_201\n                /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1367  _requireNotPaused */\n              tag_202\n                /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n              jump\t// in\n            tag_201:\n                /* \"@openzeppelin/contracts/utils/Pausable.sol\":2398:2405  _paused */\n              0x05\n                /* \"@openzeppelin/contracts/utils/Pausable.sol\":2398:2412  _paused = true */\n              dup1\n              sload\n              not(shl(0xa0, 0xff))\n              and\n              shl(0xa0, 0x01)\n              or\n              swap1\n              sstore\n                /* \"@openzeppelin/contracts/utils/Pausable.sol\":2427:2447  Paused(_msgSender()) */\n              0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n                /* \"@openzeppelin/contracts/utils/Pausable.sol\":2434:2446  _msgSender() */\n              tag_189\n                /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n              caller\n              swap1\n                /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n              jump\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n            tag_164:\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9736  owner == address(0) */\n              dup5\n              and\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n              tag_207\n              jumpi\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9788:9789  0 */\n              0x00\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9759:9791  ERC20InvalidApprover(address(0)) */\n              mload(0x40)\n              shl(0xe0, 0xe602df05)\n              dup2\n              mstore\n              0x04\n              add\n              tag_120\n              swap2\n              swap1\n              tag_71\n              jump\t// in\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n            tag_207:\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9836  spender == address(0) */\n              dup4\n              and\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n              tag_209\n              jumpi\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9887:9888  0 */\n              0x00\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9859:9890  ERC20InvalidSpender(address(0)) */\n              mload(0x40)\n              shl(0xe1, 0x4a1406b1)\n              dup2\n              mstore\n              0x04\n              add\n              tag_120\n              swap2\n              swap1\n              tag_71\n              jump\t// in\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n            tag_209:\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n              dup1\n              dup6\n              and\n              0x00\n              swap1\n              dup2\n              mstore\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9921  _allowances */\n              0x01\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n              0x20\n              swap1\n              dup2\n              mstore\n              0x40\n              dup1\n              dup4\n              keccak256\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9937  _allowances[owner][spender] */\n              swap4\n              dup8\n              and\n              dup4\n              mstore\n              swap3\n              swap1\n              mstore\n              keccak256\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9945  _allowances[owner][spender] = value */\n              dup3\n              swap1\n              sstore\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:10031  if (emitEvent) {... */\n              dup1\n              iszero\n              tag_171\n              jumpi\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10005:10012  spender */\n              dup3\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n              and\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9998:10003  owner */\n              dup5\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n              and\n              0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10014:10019  value */\n              dup5\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n              mload(0x40)\n              tag_212\n              swap2\n                /* \"#utility.yul\":1342:1367   */\n              dup2\n              mstore\n                /* \"#utility.yul\":1330:1332   */\n              0x20\n                /* \"#utility.yul\":1315:1333   */\n              add\n              swap1\n                /* \"#utility.yul\":1196:1373   */\n              jump\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n            tag_212:\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              log3\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n              pop\n              pop\n              pop\n              pop\n              jump\t// out\n                /* \"contracts/token.sol\":2584:2751  function _update(... */\n            tag_178:\n                /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n              tag_214\n                /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1367  _requireNotPaused */\n              tag_202\n                /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n              jump\t// in\n            tag_214:\n                /* \"contracts/token.sol\":2714:2744  super._update(from, to, value) */\n              tag_163\n                /* \"contracts/token.sol\":2728:2732  from */\n              dup4\n                /* \"contracts/token.sol\":2734:2736  to */\n              dup4\n                /* \"contracts/token.sol\":2738:2743  value */\n              dup4\n                /* \"contracts/token.sol\":2714:2727  super._update */\n              tag_217\n                /* \"contracts/token.sol\":2714:2744  super._update(from, to, value) */\n              jump\t// in\n                /* \"@openzeppelin/contracts/utils/Pausable.sol\":2078:2204  function _requirePaused() internal view virtual {... */\n            tag_187:\n                /* \"@openzeppelin/contracts/utils/Pausable.sol\":2141:2149  paused() */\n              tag_219\n                /* \"@openzeppelin/contracts/utils/Pausable.sol\":2141:2147  paused */\n              tag_54\n                /* \"@openzeppelin/contracts/utils/Pausable.sol\":2141:2149  paused() */\n              jump\t// in\n            tag_219:\n                /* \"@openzeppelin/contracts/utils/Pausable.sol\":2136:2198  if (!paused()) {... */\n              tag_111\n              jumpi\n                /* \"@openzeppelin/contracts/utils/Pausable.sol\":2172:2187  ExpectedPause() */\n              mload(0x40)\n              shl(0xe0, 0x8dfc202b)\n              dup2\n              mstore\n              0x04\n              add\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              revert\n                /* \"@openzeppelin/contracts/utils/Pausable.sol\":1878:2006  function _requireNotPaused() internal view virtual {... */\n            tag_202:\n                /* \"@openzeppelin/contracts/utils/Pausable.sol\":1943:1951  paused() */\n              tag_222\n                /* \"@openzeppelin/contracts/utils/Pausable.sol\":1943:1949  paused */\n              tag_54\n                /* \"@openzeppelin/contracts/utils/Pausable.sol\":1943:1951  paused() */\n              jump\t// in\n            tag_222:\n                /* \"@openzeppelin/contracts/utils/Pausable.sol\":1939:2000  if (paused()) {... */\n              iszero\n              tag_111\n              jumpi\n                /* \"@openzeppelin/contracts/utils/Pausable.sol\":1974:1989  EnforcedPause() */\n              mload(0x40)\n              shl(0xe0, 0xd93c0665)\n              dup2\n              mstore\n              0x04\n              add\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              revert\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n            tag_217:\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n              dup4\n              and\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n              tag_225\n              jumpi\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6153:6158  value */\n              dup1\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6149  _totalSupply */\n              0x02\n              0x00\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6158  _totalSupply += value */\n              dup3\n              dup3\n              sload\n              tag_226\n              swap2\n              swap1\n              tag_118\n              jump\t// in\n            tag_226:\n              swap1\n              swap2\n              sstore\n              pop\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n              tag_227\n              swap1\n              pop\n              jump\n            tag_225:\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n              dup4\n              and\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6208  uint256 fromBalance */\n              0x00\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n              swap1\n              dup2\n              mstore\n              0x20\n              dup2\n              swap1\n              mstore\n              0x40\n              swap1\n              keccak256\n              sload\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6263  fromBalance < value */\n              dup2\n              dup2\n              lt\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n              iszero\n              tag_228\n              jumpi\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6315:6319  from */\n              dup4\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n              dup2\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6334:6339  value */\n              dup4\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n              mload(0x40)\n              shl(0xe2, 0x391434e3)\n              dup2\n              mstore\n              0x04\n              add\n              tag_120\n              swap4\n              swap3\n              swap2\n              swap1\n              tag_170\n              jump\t// in\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n            tag_228:\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n              dup5\n              and\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6484  _balances */\n              0x00\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n              swap1\n              dup2\n              mstore\n              0x20\n              dup2\n              swap1\n              mstore\n              0x40\n              swap1\n              keccak256\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6512  fromBalance - value */\n              swap1\n              dup3\n              swap1\n              sub\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6512  _balances[from] = fromBalance - value */\n              swap1\n              sstore\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n            tag_227:\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n              dup3\n              and\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n              tag_230\n              jumpi\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6726  _totalSupply */\n              0x02\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6735  _totalSupply -= value */\n              dup1\n              sload\n              dup3\n              swap1\n              sub\n              swap1\n              sstore\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n              jump(tag_231)\n            tag_230:\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n              dup3\n              and\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6934  _balances */\n              0x00\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n              swap1\n              dup2\n              mstore\n              0x20\n              dup2\n              swap1\n              mstore\n              0x40\n              swap1\n              keccak256\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6947  _balances[to] += value */\n              dup1\n              sload\n              dup3\n              add\n              swap1\n              sstore\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n            tag_231:\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7004  to */\n              dup2\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n              and\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7000  from */\n              dup4\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n              and\n              0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7006:7011  value */\n              dup4\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n              mload(0x40)\n              tag_232\n              swap2\n                /* \"#utility.yul\":1342:1367   */\n              dup2\n              mstore\n                /* \"#utility.yul\":1330:1332   */\n              0x20\n                /* \"#utility.yul\":1315:1333   */\n              add\n              swap1\n                /* \"#utility.yul\":1196:1373   */\n              jump\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n            tag_232:\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              log3\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n              pop\n              pop\n              pop\n              jump\t// out\n                /* \"#utility.yul\":14:562   */\n            tag_24:\n                /* \"#utility.yul\":126:130   */\n              0x00\n                /* \"#utility.yul\":155:157   */\n              0x20\n                /* \"#utility.yul\":184:186   */\n              dup1\n                /* \"#utility.yul\":173:182   */\n              dup4\n                /* \"#utility.yul\":166:187   */\n              mstore\n                /* \"#utility.yul\":216:222   */\n              dup4\n                /* \"#utility.yul\":210:223   */\n              mload\n                /* \"#utility.yul\":259:265   */\n              dup1\n                /* \"#utility.yul\":254:256   */\n              dup3\n                /* \"#utility.yul\":243:252   */\n              dup6\n                /* \"#utility.yul\":239:257   */\n              add\n                /* \"#utility.yul\":232:266   */\n              mstore\n                /* \"#utility.yul\":284:285   */\n              0x00\n                /* \"#utility.yul\":294:434   */\n            tag_236:\n                /* \"#utility.yul\":308:314   */\n              dup2\n                /* \"#utility.yul\":305:306   */\n              dup2\n                /* \"#utility.yul\":302:315   */\n              lt\n                /* \"#utility.yul\":294:434   */\n              iszero\n              tag_238\n              jumpi\n                /* \"#utility.yul\":403:417   */\n              dup6\n              dup2\n              add\n                /* \"#utility.yul\":399:422   */\n              dup4\n              add\n                /* \"#utility.yul\":393:423   */\n              mload\n                /* \"#utility.yul\":369:386   */\n              dup6\n              dup3\n              add\n                /* \"#utility.yul\":388:390   */\n              0x40\n                /* \"#utility.yul\":365:391   */\n              add\n                /* \"#utility.yul\":358:424   */\n              mstore\n                /* \"#utility.yul\":323:333   */\n              dup3\n              add\n                /* \"#utility.yul\":294:434   */\n              jump(tag_236)\n            tag_238:\n                /* \"#utility.yul\":298:301   */\n              pop\n                /* \"#utility.yul\":483:484   */\n              0x00\n                /* \"#utility.yul\":478:480   */\n              0x40\n                /* \"#utility.yul\":469:475   */\n              dup3\n                /* \"#utility.yul\":458:467   */\n              dup7\n                /* \"#utility.yul\":454:476   */\n              add\n                /* \"#utility.yul\":450:481   */\n              add\n                /* \"#utility.yul\":443:485   */\n              mstore\n                /* \"#utility.yul\":553:555   */\n              0x40\n                /* \"#utility.yul\":546:548   */\n              0x1f\n                /* \"#utility.yul\":542:549   */\n              not\n                /* \"#utility.yul\":537:539   */\n              0x1f\n                /* \"#utility.yul\":529:535   */\n              dup4\n                /* \"#utility.yul\":525:540   */\n              add\n                /* \"#utility.yul\":521:550   */\n              and\n                /* \"#utility.yul\":510:519   */\n              dup6\n                /* \"#utility.yul\":506:551   */\n              add\n                /* \"#utility.yul\":502:556   */\n              add\n                /* \"#utility.yul\":494:556   */\n              swap3\n              pop\n              pop\n              pop\n                /* \"#utility.yul\":14:562   */\n              swap3\n              swap2\n              pop\n              pop\n              jump\t// out\n                /* \"#utility.yul\":567:740   */\n            tag_233:\n                /* \"#utility.yul\":635:655   */\n              dup1\n              calldataload\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"#utility.yul\":684:715   */\n              dup2\n              and\n                /* \"#utility.yul\":674:716   */\n              dup2\n              eq\n                /* \"#utility.yul\":664:734   */\n              tag_240\n              jumpi\n                /* \"#utility.yul\":730:731   */\n              0x00\n                /* \"#utility.yul\":727:728   */\n              dup1\n                /* \"#utility.yul\":720:732   */\n              revert\n                /* \"#utility.yul\":664:734   */\n            tag_240:\n                /* \"#utility.yul\":567:740   */\n              swap2\n              swap1\n              pop\n              jump\t// out\n                /* \"#utility.yul\":745:999   */\n            tag_27:\n                /* \"#utility.yul\":813:819   */\n              0x00\n                /* \"#utility.yul\":821:827   */\n              dup1\n                /* \"#utility.yul\":874:876   */\n              0x40\n                /* \"#utility.yul\":862:871   */\n              dup4\n                /* \"#utility.yul\":853:860   */\n              dup6\n                /* \"#utility.yul\":849:872   */\n              sub\n                /* \"#utility.yul\":845:877   */\n              slt\n                /* \"#utility.yul\":842:894   */\n              iszero\n              tag_242\n              jumpi\n                /* \"#utility.yul\":890:891   */\n              0x00\n                /* \"#utility.yul\":887:888   */\n              dup1\n                /* \"#utility.yul\":880:892   */\n              revert\n                /* \"#utility.yul\":842:894   */\n            tag_242:\n                /* \"#utility.yul\":913:942   */\n              tag_243\n                /* \"#utility.yul\":932:941   */\n              dup4\n                /* \"#utility.yul\":913:942   */\n              tag_233\n              jump\t// in\n            tag_243:\n                /* \"#utility.yul\":903:942   */\n              swap5\n                /* \"#utility.yul\":989:991   */\n              0x20\n                /* \"#utility.yul\":974:992   */\n              swap4\n              swap1\n              swap4\n              add\n                /* \"#utility.yul\":961:993   */\n              calldataload\n              swap4\n              pop\n              pop\n              pop\n                /* \"#utility.yul\":745:999   */\n              jump\t// out\n                /* \"#utility.yul\":1378:1706   */\n            tag_37:\n                /* \"#utility.yul\":1455:1461   */\n              0x00\n                /* \"#utility.yul\":1463:1469   */\n              dup1\n                /* \"#utility.yul\":1471:1477   */\n              0x00\n                /* \"#utility.yul\":1524:1526   */\n              0x60\n                /* \"#utility.yul\":1512:1521   */\n              dup5\n                /* \"#utility.yul\":1503:1510   */\n              dup7\n                /* \"#utility.yul\":1499:1522   */\n              sub\n                /* \"#utility.yul\":1495:1527   */\n              slt\n                /* \"#utility.yul\":1492:1544   */\n              iszero\n              tag_247\n              jumpi\n                /* \"#utility.yul\":1540:1541   */\n              0x00\n                /* \"#utility.yul\":1537:1538   */\n              dup1\n                /* \"#utility.yul\":1530:1542   */\n              revert\n                /* \"#utility.yul\":1492:1544   */\n            tag_247:\n                /* \"#utility.yul\":1563:1592   */\n              tag_248\n                /* \"#utility.yul\":1582:1591   */\n              dup5\n                /* \"#utility.yul\":1563:1592   */\n              tag_233\n              jump\t// in\n            tag_248:\n                /* \"#utility.yul\":1553:1592   */\n              swap3\n              pop\n                /* \"#utility.yul\":1611:1649   */\n              tag_249\n                /* \"#utility.yul\":1645:1647   */\n              0x20\n                /* \"#utility.yul\":1634:1643   */\n              dup6\n                /* \"#utility.yul\":1630:1648   */\n              add\n                /* \"#utility.yul\":1611:1649   */\n              tag_233\n              jump\t// in\n            tag_249:\n                /* \"#utility.yul\":1601:1649   */\n              swap2\n              pop\n                /* \"#utility.yul\":1696:1698   */\n              0x40\n                /* \"#utility.yul\":1685:1694   */\n              dup5\n                /* \"#utility.yul\":1681:1699   */\n              add\n                /* \"#utility.yul\":1668:1700   */\n              calldataload\n                /* \"#utility.yul\":1658:1700   */\n              swap1\n              pop\n                /* \"#utility.yul\":1378:1706   */\n              swap3\n              pop\n              swap3\n              pop\n              swap3\n              jump\t// out\n                /* \"#utility.yul\":1900:2080   */\n            tag_51:\n                /* \"#utility.yul\":1959:1965   */\n              0x00\n                /* \"#utility.yul\":2012:2014   */\n              0x20\n                /* \"#utility.yul\":2000:2009   */\n              dup3\n                /* \"#utility.yul\":1991:1998   */\n              dup5\n                /* \"#utility.yul\":1987:2010   */\n              sub\n                /* \"#utility.yul\":1983:2015   */\n              slt\n                /* \"#utility.yul\":1980:2032   */\n              iszero\n              tag_252\n              jumpi\n                /* \"#utility.yul\":2028:2029   */\n              0x00\n                /* \"#utility.yul\":2025:2026   */\n              dup1\n                /* \"#utility.yul\":2018:2030   */\n              revert\n                /* \"#utility.yul\":1980:2032   */\n            tag_252:\n              pop\n                /* \"#utility.yul\":2051:2074   */\n              calldataload\n              swap2\n                /* \"#utility.yul\":1900:2080   */\n              swap1\n              pop\n              jump\t// out\n                /* \"#utility.yul\":2085:2271   */\n            tag_58:\n                /* \"#utility.yul\":2144:2150   */\n              0x00\n                /* \"#utility.yul\":2197:2199   */\n              0x20\n                /* \"#utility.yul\":2185:2194   */\n              dup3\n                /* \"#utility.yul\":2176:2183   */\n              dup5\n                /* \"#utility.yul\":2172:2195   */\n              sub\n                /* \"#utility.yul\":2168:2200   */\n              slt\n                /* \"#utility.yul\":2165:2217   */\n              iszero\n              tag_254\n              jumpi\n                /* \"#utility.yul\":2213:2214   */\n              0x00\n                /* \"#utility.yul\":2210:2211   */\n              dup1\n                /* \"#utility.yul\":2203:2215   */\n              revert\n                /* \"#utility.yul\":2165:2217   */\n            tag_254:\n                /* \"#utility.yul\":2236:2265   */\n              tag_255\n                /* \"#utility.yul\":2255:2264   */\n              dup3\n                /* \"#utility.yul\":2236:2265   */\n              tag_233\n              jump\t// in\n            tag_255:\n                /* \"#utility.yul\":2226:2265   */\n              swap4\n                /* \"#utility.yul\":2085:2271   */\n              swap3\n              pop\n              pop\n              pop\n              jump\t// out\n                /* \"#utility.yul\":2276:2479   */\n            tag_71:\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"#utility.yul\":2440:2472   */\n              swap2\n              swap1\n              swap2\n              and\n                /* \"#utility.yul\":2422:2473   */\n              dup2\n              mstore\n                /* \"#utility.yul\":2410:2412   */\n              0x20\n                /* \"#utility.yul\":2395:2413   */\n              add\n              swap1\n                /* \"#utility.yul\":2276:2479   */\n              jump\t// out\n                /* \"#utility.yul\":2484:2744   */\n            tag_81:\n                /* \"#utility.yul\":2552:2558   */\n              0x00\n                /* \"#utility.yul\":2560:2566   */\n              dup1\n                /* \"#utility.yul\":2613:2615   */\n              0x40\n                /* \"#utility.yul\":2601:2610   */\n              dup4\n                /* \"#utility.yul\":2592:2599   */\n              dup6\n                /* \"#utility.yul\":2588:2611   */\n              sub\n                /* \"#utility.yul\":2584:2616   */\n              slt\n                /* \"#utility.yul\":2581:2633   */\n              iszero\n              tag_258\n              jumpi\n                /* \"#utility.yul\":2629:2630   */\n              0x00\n                /* \"#utility.yul\":2626:2627   */\n              dup1\n                /* \"#utility.yul\":2619:2631   */\n              revert\n                /* \"#utility.yul\":2581:2633   */\n            tag_258:\n                /* \"#utility.yul\":2652:2681   */\n              tag_259\n                /* \"#utility.yul\":2671:2680   */\n              dup4\n                /* \"#utility.yul\":2652:2681   */\n              tag_233\n              jump\t// in\n            tag_259:\n                /* \"#utility.yul\":2642:2681   */\n              swap2\n              pop\n                /* \"#utility.yul\":2700:2738   */\n              tag_260\n                /* \"#utility.yul\":2734:2736   */\n              0x20\n                /* \"#utility.yul\":2723:2732   */\n              dup5\n                /* \"#utility.yul\":2719:2737   */\n              add\n                /* \"#utility.yul\":2700:2738   */\n              tag_233\n              jump\t// in\n            tag_260:\n                /* \"#utility.yul\":2690:2738   */\n              swap1\n              pop\n                /* \"#utility.yul\":2484:2744   */\n              swap3\n              pop\n              swap3\n              swap1\n              pop\n              jump\t// out\n                /* \"#utility.yul\":2749:3129   */\n            tag_89:\n                /* \"#utility.yul\":2828:2829   */\n              0x01\n                /* \"#utility.yul\":2824:2836   */\n              dup2\n              dup2\n              shr\n              swap1\n                /* \"#utility.yul\":2871:2883   */\n              dup3\n              and\n              dup1\n                /* \"#utility.yul\":2892:2953   */\n              tag_262\n              jumpi\n                /* \"#utility.yul\":2946:2950   */\n              0x7f\n                /* \"#utility.yul\":2938:2944   */\n              dup3\n                /* \"#utility.yul\":2934:2951   */\n              and\n                /* \"#utility.yul\":2924:2951   */\n              swap2\n              pop\n                /* \"#utility.yul\":2892:2953   */\n            tag_262:\n                /* \"#utility.yul\":2999:3001   */\n              0x20\n                /* \"#utility.yul\":2991:2997   */\n              dup3\n                /* \"#utility.yul\":2988:3002   */\n              lt\n                /* \"#utility.yul\":2968:2986   */\n              dup2\n                /* \"#utility.yul\":2965:3003   */\n              sub\n                /* \"#utility.yul\":2962:3123   */\n              tag_263\n              jumpi\n                /* \"#utility.yul\":3045:3055   */\n              0x4e487b71\n                /* \"#utility.yul\":3040:3043   */\n              0xe0\n                /* \"#utility.yul\":3036:3056   */\n              shl\n                /* \"#utility.yul\":3033:3034   */\n              0x00\n                /* \"#utility.yul\":3026:3057   */\n              mstore\n                /* \"#utility.yul\":3080:3084   */\n              0x22\n                /* \"#utility.yul\":3077:3078   */\n              0x04\n                /* \"#utility.yul\":3070:3085   */\n              mstore\n                /* \"#utility.yul\":3108:3112   */\n              0x24\n                /* \"#utility.yul\":3105:3106   */\n              0x00\n                /* \"#utility.yul\":3098:3113   */\n              revert\n                /* \"#utility.yul\":2962:3123   */\n            tag_263:\n              pop\n                /* \"#utility.yul\":2749:3129   */\n              swap2\n              swap1\n              pop\n              jump\t// out\n                /* \"#utility.yul\":3134:3356   */\n            tag_118:\n                /* \"#utility.yul\":3199:3208   */\n              dup1\n              dup3\n              add\n                /* \"#utility.yul\":3220:3230   */\n              dup1\n              dup3\n              gt\n                /* \"#utility.yul\":3217:3350   */\n              iszero\n              tag_94\n              jumpi\n                /* \"#utility.yul\":3272:3282   */\n              0x4e487b71\n                /* \"#utility.yul\":3267:3270   */\n              0xe0\n                /* \"#utility.yul\":3263:3283   */\n              shl\n                /* \"#utility.yul\":3260:3261   */\n              0x00\n                /* \"#utility.yul\":3253:3284   */\n              mstore\n                /* \"#utility.yul\":3307:3311   */\n              0x11\n                /* \"#utility.yul\":3304:3305   */\n              0x04\n                /* \"#utility.yul\":3297:3312   */\n              mstore\n                /* \"#utility.yul\":3335:3339   */\n              0x24\n                /* \"#utility.yul\":3332:3333   */\n              0x00\n                /* \"#utility.yul\":3325:3340   */\n              revert\n                /* \"#utility.yul\":3709:4054   */\n            tag_170:\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"#utility.yul\":3929:3961   */\n              swap4\n              swap1\n              swap4\n              and\n                /* \"#utility.yul\":3911:3962   */\n              dup4\n              mstore\n                /* \"#utility.yul\":3993:3995   */\n              0x20\n                /* \"#utility.yul\":3978:3996   */\n              dup4\n              add\n                /* \"#utility.yul\":3971:4005   */\n              swap2\n              swap1\n              swap2\n              mstore\n                /* \"#utility.yul\":4036:4038   */\n              0x40\n                /* \"#utility.yul\":4021:4039   */\n              dup3\n              add\n                /* \"#utility.yul\":4014:4048   */\n              mstore\n                /* \"#utility.yul\":3899:3901   */\n              0x60\n                /* \"#utility.yul\":3884:3902   */\n              add\n              swap1\n                /* \"#utility.yul\":3709:4054   */\n              jump\t// out\n\n            auxdata: 0xa2646970667358221220f529989a813db1d2559468912ed7ef9fa1bfb27f6bf334d9913188b73ea920de64736f6c63430008140033\n        }\n    }\n\n    auxdata: 0xa2646970667358221220f4b71b283a26963bd3ad24b0f8cc9e292aa8a0725df89c9f6ad366752026351564736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506116438061001d5f395ff3fe608060405234801562000010575f80fd5b506004361062000038575f3560e01c806318423c06146200003c5780633dcee3ac146200006f575b5f80fd5b620000536200004d3660046200029d565b62000086565b6040516001600160a01b03909116815260200160405180910390f35b62000053620000803660046200029d565b6200015c565b5f80604051806020016200009a906200028f565b6020820181038252601f19601f8201166040525090505f868686604051602001620000c893929190620002f3565b60405160208183030381529060405290505f8282604051602001620000ef92919062000346565b60408051808303601f1901815282825280516020918201206001600160f81b0319828501523060601b6001600160601b0319166021850152603584019890985260558084019890985281518084039098018852607590920190528551950194909420979650505050505050565b5f806040518060200162000170906200028f565b6020820181038252601f19601f8201166040525090505f8686866040516020016200019e93929190620002f3565b60405160208183030381529060405290505f8282604051602001620001c592919062000346565b6040516020818303038152906040529050848151602083015ff593506001600160a01b038416620002305760405162461bcd60e51b815260206004820152601160248201527011195c1b1bde5b595b9d0819985a5b1959607a1b604482015260640160405180910390fd5b6040805160ff89168152602081018890529081018690526001600160a01b03808a1691908616907fd1c16269e4896821ea5dd6216a16b09048d63329a1b10963f0458d3f0389f4f49060600160405180910390a3505050949350505050565b6112a7806200036783390190565b5f805f8060808587031215620002b1575f80fd5b84356001600160a01b0381168114620002c8575f80fd5b9350602085013560ff81168114620002de575f80fd5b93969395505050506040820135916060013590565b6001600160a01b0393909316835260ff919091166020830152604082015260600190565b5f81515f5b818110156200033857602081850181015186830152016200031c565b505f93019283525090919050565b5f6200035e62000357838662000317565b8462000317565b94935050505056fe608060405234801562000010575f80fd5b50604051620012a7380380620012a783398101604081905262000033916200045f565b604080518082018252600c8082526be5b881e5ae89e4bb99e5a5b360a01b60208084018290528451808601909552918452908301528491600362000078838262000551565b50600462000087828262000551565b5050506001600160a01b038116620000bf575f604051631e4fbdf760e01b8152600401620000b6919062000619565b60405180910390fd5b620000ca8162000251565b506001600160a01b038316620001135760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b21037bbb732b960991b6044820152606401620000b6565b60128260ff1611156200015d5760405162461bcd60e51b8152602060048201526011602482015270088cac6d2dac2d8e640e8dede40d0d2ced607b1b6044820152606401620000b6565b805f03620001ae5760405162461bcd60e51b815260206004820152601f60248201527f496e697469616c20737570706c79206d75737420626520706f736974697665006044820152606401620000b6565b620001bb82600a6200073c565b620001c8905f1962000753565b8111156200020c5760405162461bcd60e51b815260206004820152601060248201526f537570706c7920746f6f206c6172676560801b6044820152606401620000b6565b6005805460ff60a81b1916600160a81b60ff85160217905562000248836200023684600a6200073c565b62000242908462000773565b620002a2565b505050620007a3565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b038216620002ce575f60405163ec442f0560e01b8152600401620000b6919062000619565b620002db5f8383620002df565b5050565b620002e9620002fb565b620002f683838362000330565b505050565b6200030f600554600160a01b900460ff1690565b156200032e5760405163d93c066560e01b815260040160405180910390fd5b565b6001600160a01b0383166200035e578060025f8282546200035291906200078d565b90915550620003d09050565b6001600160a01b0383165f9081526020819052604090205481811015620003b25760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401620000b6565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216620003ee576002805482900390556200040c565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200045291815260200190565b60405180910390a3505050565b5f805f6060848603121562000472575f80fd5b83516001600160a01b038116811462000489575f80fd5b602085015190935060ff81168114620004a0575f80fd5b80925050604084015190509250925092565b634e487b7160e01b5f52604160045260245ffd5b600181811c90821680620004db57607f821691505b602082108103620004fa57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115620002f6575f81815260208120601f850160051c81016020861015620005285750805b601f850160051c820191505b81811015620005495782815560010162000534565b505050505050565b81516001600160401b038111156200056d576200056d620004b2565b62000585816200057e8454620004c6565b8462000500565b602080601f831160018114620005bb575f8415620005a35750858301515b5f19600386901b1c1916600185901b17855562000549565b5f85815260208120601f198616915b82811015620005eb57888601518255948401946001909101908401620005ca565b50858210156200060957878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160a01b0391909116815260200190565b634e487b7160e01b5f52601160045260245ffd5b600181815b808511156200068157815f19048211156200066557620006656200062d565b808516156200067357918102915b93841c939080029062000646565b509250929050565b5f82620006995750600162000736565b81620006a757505f62000736565b8160018114620006c05760028114620006cb57620006eb565b600191505062000736565b60ff841115620006df57620006df6200062d565b50506001821b62000736565b5060208310610133831016604e8410600b841016171562000710575081810a62000736565b6200071c838362000641565b805f19048211156200073257620007326200062d565b0290505b92915050565b5f6200074c60ff84168362000689565b9392505050565b5f826200076e57634e487b7160e01b5f52601260045260245ffd5b500490565b80820281158282048414176200073657620007366200062d565b808201808211156200073657620007366200062d565b610af680620007b15f395ff3fe608060405234801561000f575f80fd5b50600436106100e4575f3560e01c806306fdde03146100e8578063095ea7b31461010657806318160ddd1461012957806323b872dd1461013b578063313ce5671461014e5780633f4ba83a1461016d57806340c10f191461017757806342966c681461018a5780635c975abb1461019d57806370a08231146101a5578063715018a6146101cd57806379cc6790146101d55780638456cb59146101e85780638da5cb5b146101f057806395d89b4114610205578063a9059cbb1461020d578063dd62ed3e14610220578063f2fde38b14610233575b5f80fd5b6100f0610246565b6040516100fd9190610905565b60405180910390f35b61011961011436600461096b565b6102d6565b60405190151581526020016100fd565b6002545b6040519081526020016100fd565b610119610149366004610993565b6102ef565b600554600160a81b900460ff1660405160ff90911681526020016100fd565b610175610312565b005b61017561018536600461096b565b610324565b6101756101983660046109cc565b6103a3565b6101196103b0565b61012d6101b33660046109e3565b6001600160a01b03165f9081526020819052604090205490565b6101756103c0565b6101756101e336600461096b565b6103d1565b6101756103e6565b6101f86103f6565b6040516100fd9190610a03565b6100f0610405565b61011961021b36600461096b565b610414565b61012d61022e366004610a17565b610421565b6101756102413660046109e3565b61044b565b60606003805461025590610a48565b80601f016020809104026020016040519081016040528092919081815260200182805461028190610a48565b80156102cc5780601f106102a3576101008083540402835291602001916102cc565b820191905f5260205f20905b8154815290600101906020018083116102af57829003601f168201915b5050505050905090565b5f336102e3818585610485565b60019150505b92915050565b5f336102fc858285610497565b6103078585856104e8565b506001949350505050565b61031a610545565b610322610577565b565b61032c610545565b6a084595161401484a0000008161034260025490565b61034c9190610a80565b11156103955760405162461bcd60e51b815260206004820152601360248201527213585e081cdd5c1c1b1e48195e18d959591959606a1b60448201526064015b60405180910390fd5b61039f82826105c6565b5050565b6103ad33826105fa565b50565b600554600160a01b900460ff1690565b6103c8610545565b6103225f61062e565b6103dc823383610497565b61039f82826105fa565b6103ee610545565b61032261067f565b6005546001600160a01b031690565b60606004805461025590610a48565b5f336102e38185856104e8565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b610453610545565b6001600160a01b03811661047c575f604051631e4fbdf760e01b815260040161038c9190610a03565b6103ad8161062e565b61049283838360016106c2565b505050565b5f6104a28484610421565b90505f198110156104e257818110156104d457828183604051637dc7a0d960e11b815260040161038c93929190610a9f565b6104e284848484035f6106c2565b50505050565b6001600160a01b038316610511575f604051634b637e8f60e11b815260040161038c9190610a03565b6001600160a01b03821661053a575f60405163ec442f0560e01b815260040161038c9190610a03565b610492838383610794565b3361054e6103f6565b6001600160a01b031614610322573360405163118cdaa760e01b815260040161038c9190610a03565b61057f6107a7565b6005805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516105bc9190610a03565b60405180910390a1565b6001600160a01b0382166105ef575f60405163ec442f0560e01b815260040161038c9190610a03565b61039f5f8383610794565b6001600160a01b038216610623575f604051634b637e8f60e11b815260040161038c9190610a03565b61039f825f83610794565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6106876107cc565b6005805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586105af3390565b6001600160a01b0384166106eb575f60405163e602df0560e01b815260040161038c9190610a03565b6001600160a01b038316610714575f604051634a1406b160e11b815260040161038c9190610a03565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156104e257826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161078691815260200190565b60405180910390a350505050565b61079c6107cc565b6104928383836107f2565b6107af6103b0565b61032257604051638dfc202b60e01b815260040160405180910390fd5b6107d46103b0565b156103225760405163d93c066560e01b815260040160405180910390fd5b6001600160a01b03831661081c578060025f8282546108119190610a80565b909155506108799050565b6001600160a01b0383165f908152602081905260409020548181101561085b5783818360405163391434e360e21b815260040161038c93929190610a9f565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216610895576002805482900390556108b3565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516108f891815260200190565b60405180910390a3505050565b5f6020808352835180828501525f5b8181101561093057858101830151858201604001528201610914565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610966575f80fd5b919050565b5f806040838503121561097c575f80fd5b61098583610950565b946020939093013593505050565b5f805f606084860312156109a5575f80fd5b6109ae84610950565b92506109bc60208501610950565b9150604084013590509250925092565b5f602082840312156109dc575f80fd5b5035919050565b5f602082840312156109f3575f80fd5b6109fc82610950565b9392505050565b6001600160a01b0391909116815260200190565b5f8060408385031215610a28575f80fd5b610a3183610950565b9150610a3f60208401610950565b90509250929050565b600181811c90821680610a5c57607f821691505b602082108103610a7a57634e487b7160e01b5f52602260045260245ffd5b50919050565b808201808211156102e957634e487b7160e01b5f52601160045260245ffd5b6001600160a01b03939093168352602083019190915260408201526060019056fea2646970667358221220f529989a813db1d2559468912ed7ef9fa1bfb27f6bf334d9913188b73ea920de64736f6c63430008140033a2646970667358221220f4b71b283a26963bd3ad24b0f8cc9e292aa8a0725df89c9f6ad366752026351564736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1643 DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x38 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x18423C06 EQ PUSH3 0x3C JUMPI DUP1 PUSH4 0x3DCEE3AC EQ PUSH3 0x6F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH3 0x53 PUSH3 0x4D CALLDATASIZE PUSH1 0x4 PUSH3 0x29D JUMP JUMPDEST PUSH3 0x86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x53 PUSH3 0x80 CALLDATASIZE PUSH1 0x4 PUSH3 0x29D JUMP JUMPDEST PUSH3 0x15C JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH3 0x9A SWAP1 PUSH3 0x28F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND PUSH1 0x40 MSTORE POP SWAP1 POP PUSH0 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0xC8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x2F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0xEF SWAP3 SWAP2 SWAP1 PUSH3 0x346 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP3 DUP6 ADD MSTORE ADDRESS PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x21 DUP6 ADD MSTORE PUSH1 0x35 DUP5 ADD SWAP9 SWAP1 SWAP9 MSTORE PUSH1 0x55 DUP1 DUP5 ADD SWAP9 SWAP1 SWAP9 MSTORE DUP2 MLOAD DUP1 DUP5 SUB SWAP1 SWAP9 ADD DUP9 MSTORE PUSH1 0x75 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP6 MLOAD SWAP6 ADD SWAP5 SWAP1 SWAP5 KECCAK256 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH3 0x170 SWAP1 PUSH3 0x28F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND PUSH1 0x40 MSTORE POP SWAP1 POP PUSH0 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x19E SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x2F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x1C5 SWAP3 SWAP2 SWAP1 PUSH3 0x346 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP5 DUP2 MLOAD PUSH1 0x20 DUP4 ADD PUSH0 CREATE2 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH3 0x230 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x11195C1B1BDE5B595B9D0819985A5B1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF DUP10 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND SWAP2 SWAP1 DUP7 AND SWAP1 PUSH32 0xD1C16269E4896821EA5DD6216A16B09048D63329A1B10963F0458D3F0389F4F4 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x12A7 DUP1 PUSH3 0x367 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x2B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x2C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH3 0x2DE JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x338 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD MSTORE ADD PUSH3 0x31C JUMP JUMPDEST POP PUSH0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x35E PUSH3 0x357 DUP4 DUP7 PUSH3 0x317 JUMP JUMPDEST DUP5 PUSH3 0x317 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x12A7 CODESIZE SUB DUP1 PUSH3 0x12A7 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x33 SWAP2 PUSH3 0x45F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0xC DUP1 DUP3 MSTORE PUSH12 0xE5B881E5AE89E4BB99E5A5B3 PUSH1 0xA0 SHL PUSH1 0x20 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP7 ADD SWAP1 SWAP6 MSTORE SWAP2 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE DUP5 SWAP2 PUSH1 0x3 PUSH3 0x78 DUP4 DUP3 PUSH3 0x551 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x87 DUP3 DUP3 PUSH3 0x551 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0xBF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xB6 SWAP2 SWAP1 PUSH3 0x619 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xCA DUP2 PUSH3 0x251 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x113 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x24B73B30B634B21037BBB732B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xB6 JUMP JUMPDEST PUSH1 0x12 DUP3 PUSH1 0xFF AND GT ISZERO PUSH3 0x15D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x88CAC6D2DAC2D8E640E8DEDE40D0D2CED PUSH1 0x7B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xB6 JUMP JUMPDEST DUP1 PUSH0 SUB PUSH3 0x1AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C20737570706C79206D75737420626520706F73697469766500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xB6 JUMP JUMPDEST PUSH3 0x1BB DUP3 PUSH1 0xA PUSH3 0x73C JUMP JUMPDEST PUSH3 0x1C8 SWAP1 PUSH0 NOT PUSH3 0x753 JUMP JUMPDEST DUP2 GT ISZERO PUSH3 0x20C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x537570706C7920746F6F206C61726765 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xB6 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL PUSH1 0xFF DUP6 AND MUL OR SWAP1 SSTORE PUSH3 0x248 DUP4 PUSH3 0x236 DUP5 PUSH1 0xA PUSH3 0x73C JUMP JUMPDEST PUSH3 0x242 SWAP1 DUP5 PUSH3 0x773 JUMP JUMPDEST PUSH3 0x2A2 JUMP JUMPDEST POP POP POP PUSH3 0x7A3 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x2CE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xB6 SWAP2 SWAP1 PUSH3 0x619 JUMP JUMPDEST PUSH3 0x2DB PUSH0 DUP4 DUP4 PUSH3 0x2DF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0x2E9 PUSH3 0x2FB JUMP JUMPDEST PUSH3 0x2F6 DUP4 DUP4 DUP4 PUSH3 0x330 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x30F PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO PUSH3 0x32E JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x35E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x352 SWAP2 SWAP1 PUSH3 0x78D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH3 0x3D0 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH3 0x3B2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH3 0xB6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x3EE JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH3 0x40C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x452 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x472 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x489 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH1 0xFF DUP2 AND DUP2 EQ PUSH3 0x4A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x4DB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x4FA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x2F6 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x528 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x549 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x534 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x56D JUMPI PUSH3 0x56D PUSH3 0x4B2 JUMP JUMPDEST PUSH3 0x585 DUP2 PUSH3 0x57E DUP5 SLOAD PUSH3 0x4C6 JUMP JUMPDEST DUP5 PUSH3 0x500 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x5BB JUMPI PUSH0 DUP5 ISZERO PUSH3 0x5A3 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x549 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x5EB JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x5CA JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x609 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x681 JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH3 0x665 JUMPI PUSH3 0x665 PUSH3 0x62D JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x673 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x646 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH3 0x699 JUMPI POP PUSH1 0x1 PUSH3 0x736 JUMP JUMPDEST DUP2 PUSH3 0x6A7 JUMPI POP PUSH0 PUSH3 0x736 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x6C0 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x6CB JUMPI PUSH3 0x6EB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x736 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x6DF JUMPI PUSH3 0x6DF PUSH3 0x62D JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x736 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x710 JUMPI POP DUP2 DUP2 EXP PUSH3 0x736 JUMP JUMPDEST PUSH3 0x71C DUP4 DUP4 PUSH3 0x641 JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH3 0x732 JUMPI PUSH3 0x732 PUSH3 0x62D JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x74C PUSH1 0xFF DUP5 AND DUP4 PUSH3 0x689 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH3 0x76E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH3 0x736 JUMPI PUSH3 0x736 PUSH3 0x62D JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x736 JUMPI PUSH3 0x736 PUSH3 0x62D JUMP JUMPDEST PUSH2 0xAF6 DUP1 PUSH3 0x7B1 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE4 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x233 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF0 PUSH2 0x246 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFD SWAP2 SWAP1 PUSH2 0x905 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 PUSH2 0x114 CALLDATASIZE PUSH1 0x4 PUSH2 0x96B JUMP JUMPDEST PUSH2 0x2D6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFD JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFD JUMP JUMPDEST PUSH2 0x119 PUSH2 0x149 CALLDATASIZE PUSH1 0x4 PUSH2 0x993 JUMP JUMPDEST PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFD JUMP JUMPDEST PUSH2 0x175 PUSH2 0x312 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x175 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0x96B JUMP JUMPDEST PUSH2 0x324 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0x9CC JUMP JUMPDEST PUSH2 0x3A3 JUMP JUMPDEST PUSH2 0x119 PUSH2 0x3B0 JUMP JUMPDEST PUSH2 0x12D PUSH2 0x1B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x3C0 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x1E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x96B JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x3E6 JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFD SWAP2 SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH2 0xF0 PUSH2 0x405 JUMP JUMPDEST PUSH2 0x119 PUSH2 0x21B CALLDATASIZE PUSH1 0x4 PUSH2 0x96B JUMP JUMPDEST PUSH2 0x414 JUMP JUMPDEST PUSH2 0x12D PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0xA17 JUMP JUMPDEST PUSH2 0x421 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x241 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0x44B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x255 SWAP1 PUSH2 0xA48 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x281 SWAP1 PUSH2 0xA48 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2CC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2A3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2CC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2AF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2E3 DUP2 DUP6 DUP6 PUSH2 0x485 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2FC DUP6 DUP3 DUP6 PUSH2 0x497 JUMP JUMPDEST PUSH2 0x307 DUP6 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x31A PUSH2 0x545 JUMP JUMPDEST PUSH2 0x322 PUSH2 0x577 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x32C PUSH2 0x545 JUMP JUMPDEST PUSH11 0x84595161401484A000000 DUP2 PUSH2 0x342 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x34C SWAP2 SWAP1 PUSH2 0xA80 JUMP JUMPDEST GT ISZERO PUSH2 0x395 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13585E081CDD5C1C1B1E48195E18D959591959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x39F DUP3 DUP3 PUSH2 0x5C6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3AD CALLER DUP3 PUSH2 0x5FA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3C8 PUSH2 0x545 JUMP JUMPDEST PUSH2 0x322 PUSH0 PUSH2 0x62E JUMP JUMPDEST PUSH2 0x3DC DUP3 CALLER DUP4 PUSH2 0x497 JUMP JUMPDEST PUSH2 0x39F DUP3 DUP3 PUSH2 0x5FA JUMP JUMPDEST PUSH2 0x3EE PUSH2 0x545 JUMP JUMPDEST PUSH2 0x322 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x255 SWAP1 PUSH2 0xA48 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2E3 DUP2 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x453 PUSH2 0x545 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x47C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH2 0x3AD DUP2 PUSH2 0x62E JUMP JUMPDEST PUSH2 0x492 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x6C2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4A2 DUP5 DUP5 PUSH2 0x421 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 LT ISZERO PUSH2 0x4E2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4D4 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA9F JUMP JUMPDEST PUSH2 0x4E2 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x6C2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x511 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x53A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH2 0x492 DUP4 DUP4 DUP4 PUSH2 0x794 JUMP JUMPDEST CALLER PUSH2 0x54E PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x322 JUMPI CALLER PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH2 0x57F PUSH2 0x7A7 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5BC SWAP2 SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5EF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH2 0x39F PUSH0 DUP4 DUP4 PUSH2 0x794 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x623 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH2 0x39F DUP3 PUSH0 DUP4 PUSH2 0x794 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x687 PUSH2 0x7CC JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x5AF CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x6EB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x714 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x4E2 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x786 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x79C PUSH2 0x7CC JUMP JUMPDEST PUSH2 0x492 DUP4 DUP4 DUP4 PUSH2 0x7F2 JUMP JUMPDEST PUSH2 0x7AF PUSH2 0x3B0 JUMP JUMPDEST PUSH2 0x322 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7D4 PUSH2 0x3B0 JUMP JUMPDEST ISZERO PUSH2 0x322 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x81C JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x811 SWAP2 SWAP1 PUSH2 0xA80 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x879 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x85B JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x895 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x8B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x8F8 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x930 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x914 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x966 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x97C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x985 DUP4 PUSH2 0x950 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9AE DUP5 PUSH2 0x950 JUMP JUMPDEST SWAP3 POP PUSH2 0x9BC PUSH1 0x20 DUP6 ADD PUSH2 0x950 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9DC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9FC DUP3 PUSH2 0x950 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA28 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA31 DUP4 PUSH2 0x950 JUMP JUMPDEST SWAP2 POP PUSH2 0xA3F PUSH1 0x20 DUP5 ADD PUSH2 0x950 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xA5C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xA7A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2E9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 0x29 SWAP9 SWAP11 DUP2 RETURNDATASIZE 0xB1 0xD2 SSTORE SWAP5 PUSH9 0x912ED7EF9FA1BFB27F PUSH12 0xF334D9913188B73EA920DE64 PUSH20 0x6F6C63430008140033A2646970667358221220F4 0xB7 SHL 0x28 GASPRICE 0x26 SWAP7 EXTCODESIZE 0xD3 0xAD 0x24 0xB0 0xF8 0xCC SWAP15 0x29 0x2A 0xA8 LOG0 PUSH19 0x5DF89C9F6AD366752026351564736F6C634300 ADDMOD EQ STOP CALLER ",
							"sourceMap": "169:2784:8:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@deployWBGZToken_1161": {
									"entryPoint": 348,
									"id": 1161,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@getWBGZTokenAddress_1231": {
									"entryPoint": 134,
									"id": 1231,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint8t_uint256t_bytes32": {
									"entryPoint": 669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_bytes": {
									"entryPoint": 791,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes1_t_address_t_bytes32_t_bytes32__to_t_bytes1_t_address_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 838,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint8_t_uint256__to_t_address_t_uint8_t_uint256__fromStack_reversed": {
									"entryPoint": 755,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fa2295279825fc5c1b0ee87bfb3d9f97e1f777c29c82f8d0a2e2fc2fa6c99dcb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8_t_uint256_t_bytes32__to_t_uint8_t_uint256_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2877:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "133:469:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "180:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "189:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "192:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "182:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "182:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "154:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "163:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "150:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "150:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "175:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "146:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "146:33:10"
															},
															"nodeType": "YulIf",
															"src": "143:53:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "205:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "231:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "218:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "209:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "304:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "313:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "316:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "306:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "306:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "306:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "263:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "274:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "289:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "294:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "285:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "285:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "298:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "281:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "281:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "270:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "270:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "260:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "260:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "253:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:50:10"
															},
															"nodeType": "YulIf",
															"src": "250:70:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "329:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "339:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "329:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "353:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "385:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "396:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "381:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "381:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "368:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "368:32:10"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "357:7:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "452:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "461:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "464:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "454:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "454:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "454:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nodeType": "YulIdentifier",
																				"src": "422:7:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value_1",
																						"nodeType": "YulIdentifier",
																						"src": "435:7:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "444:4:10",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "431:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "431:18:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "419:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "419:31:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "412:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "412:39:10"
															},
															"nodeType": "YulIf",
															"src": "409:59:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "477:17:10",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "487:7:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "477:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "503:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "530:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "541:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "526:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "526:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "513:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:32:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "503:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "554:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "581:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "592:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "577:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "577:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "564:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "564:32:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "554:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint8t_uint256t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "75:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "86:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "98:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "106:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "114:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "122:6:10",
														"type": ""
													}
												],
												"src": "14:588:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "708:102:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "718:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "730:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "741:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "726:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "718:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "760:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "775:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "791:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "796:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "787:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "787:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "800:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "783:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "783:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "771:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "771:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "753:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "753:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "753:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "677:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "688:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "699:4:10",
														"type": ""
													}
												],
												"src": "607:203:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "968:199:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "978:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "990:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1001:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "986:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "986:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "978:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1020:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1035:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1051:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1056:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1047:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1047:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1060:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1043:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1043:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1031:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1031:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1013:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1013:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1013:51:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1084:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1095:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1080:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1080:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "1104:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1112:4:10",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1100:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:17:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1073:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1073:45:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1073:45:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1149:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1134:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1134:18:10"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "1154:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint8_t_uint256__to_t_address_t_uint8_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "921:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "932:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "940:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "948:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "959:4:10",
														"type": ""
													}
												],
												"src": "815:352:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1221:273:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1231:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1251:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1245:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1245:12:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1235:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1266:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1275:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1270:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1337:76:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "1362:3:10"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1367:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1358:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1358:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "1385:5:10"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1392:1:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1381:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1381:13:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1396:4:10",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1377:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1377:24:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1371:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1371:31:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1351:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1351:52:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1351:52:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1296:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1299:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1293:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1307:21:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1309:17:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1318:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1321:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1314:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1314:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1309:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1289:3:10",
																"statements": []
															},
															"src": "1285:128:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1422:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1436:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1441:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1432:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1432:16:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1426:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1464:2:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1468:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1457:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1457:13:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1457:13:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1479:9:10",
															"value": {
																"name": "_1",
																"nodeType": "YulIdentifier",
																"src": "1486:2:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1479:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1198:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1205:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1213:3:10",
														"type": ""
													}
												],
												"src": "1172:322:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1682:78:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1692:62:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1716:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1741:6:10"
																			},
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1749:3:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_bytes",
																			"nodeType": "YulIdentifier",
																			"src": "1724:16:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1724:29:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "1699:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1699:55:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1692:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1650:3:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1655:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1663:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1674:3:10",
														"type": ""
													}
												],
												"src": "1499:261:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1966:232:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1983:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1992:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2004:3:10",
																						"type": "",
																						"value": "248"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2009:3:10",
																						"type": "",
																						"value": "255"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2000:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2000:13:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1988:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1988:26:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1976:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1976:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1976:39:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2035:3:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2040:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2031:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2031:11:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2052:2:10",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "2056:6:10"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2048:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2048:15:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2077:2:10",
																										"type": "",
																										"value": "96"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2081:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2073:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2073:10:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2085:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "2069:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2069:18:10"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2065:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2065:23:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2044:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2044:45:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2024:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2024:66:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2024:66:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2110:3:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2115:2:10",
																				"type": "",
																				"value": "21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2106:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2106:12:10"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2120:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2099:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2099:28:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2099:28:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2147:3:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2152:2:10",
																				"type": "",
																				"value": "53"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2143:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2143:12:10"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "2157:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2136:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2136:28:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2136:28:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2173:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2184:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2189:2:10",
																		"type": "",
																		"value": "85"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2180:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2180:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2173:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes1_t_address_t_bytes32_t_bytes32__to_t_bytes1_t_address_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1918:3:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1923:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1931:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1939:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1947:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1958:3:10",
														"type": ""
													}
												],
												"src": "1765:433:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2377:167:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2394:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2405:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2387:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2387:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2387:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2428:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2439:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2424:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2424:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2444:2:10",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2417:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2417:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2417:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2467:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2478:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2463:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2463:18:10"
																	},
																	{
																		"hexValue": "4465706c6f796d656e74206661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2483:19:10",
																		"type": "",
																		"value": "Deployment failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2456:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2456:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2456:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2512:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2524:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2535:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2520:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2520:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2512:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fa2295279825fc5c1b0ee87bfb3d9f97e1f777c29c82f8d0a2e2fc2fa6c99dcb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2354:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2368:4:10",
														"type": ""
													}
												],
												"src": "2203:341:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2702:173:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2712:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2724:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2735:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2720:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2720:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2712:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2754:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2769:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2777:4:10",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2765:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2765:17:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2747:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2747:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2747:36:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2803:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2814:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2799:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2799:18:10"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2819:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2792:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2792:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2792:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2846:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2857:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2842:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2842:18:10"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2862:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2835:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2835:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2835:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8_t_uint256_t_bytes32__to_t_uint8_t_uint256_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2655:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2666:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2674:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2682:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2693:4:10",
														"type": ""
													}
												],
												"src": "2549:326:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_addresst_uint8t_uint256t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        if iszero(eq(value_1, and(value_1, 0xff))) { revert(0, 0) }\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint8_t_uint256__to_t_address_t_uint8_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value, i), 0x20)))\n        }\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        end := abi_encode_bytes(value1, abi_encode_bytes(value0, pos))\n    }\n    function abi_encode_tuple_packed_t_bytes1_t_address_t_bytes32_t_bytes32__to_t_bytes1_t_address_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, and(value0, shl(248, 255)))\n        mstore(add(pos, 1), and(shl(96, value1), not(sub(shl(96, 1), 1))))\n        mstore(add(pos, 21), value2)\n        mstore(add(pos, 53), value3)\n        end := add(pos, 85)\n    }\n    function abi_encode_tuple_t_stringliteral_fa2295279825fc5c1b0ee87bfb3d9f97e1f777c29c82f8d0a2e2fc2fa6c99dcb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Deployment failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint8_t_uint256_t_bytes32__to_t_uint8_t_uint256_t_bytes32__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, 0xff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b506004361062000038575f3560e01c806318423c06146200003c5780633dcee3ac146200006f575b5f80fd5b620000536200004d3660046200029d565b62000086565b6040516001600160a01b03909116815260200160405180910390f35b62000053620000803660046200029d565b6200015c565b5f80604051806020016200009a906200028f565b6020820181038252601f19601f8201166040525090505f868686604051602001620000c893929190620002f3565b60405160208183030381529060405290505f8282604051602001620000ef92919062000346565b60408051808303601f1901815282825280516020918201206001600160f81b0319828501523060601b6001600160601b0319166021850152603584019890985260558084019890985281518084039098018852607590920190528551950194909420979650505050505050565b5f806040518060200162000170906200028f565b6020820181038252601f19601f8201166040525090505f8686866040516020016200019e93929190620002f3565b60405160208183030381529060405290505f8282604051602001620001c592919062000346565b6040516020818303038152906040529050848151602083015ff593506001600160a01b038416620002305760405162461bcd60e51b815260206004820152601160248201527011195c1b1bde5b595b9d0819985a5b1959607a1b604482015260640160405180910390fd5b6040805160ff89168152602081018890529081018690526001600160a01b03808a1691908616907fd1c16269e4896821ea5dd6216a16b09048d63329a1b10963f0458d3f0389f4f49060600160405180910390a3505050949350505050565b6112a7806200036783390190565b5f805f8060808587031215620002b1575f80fd5b84356001600160a01b0381168114620002c8575f80fd5b9350602085013560ff81168114620002de575f80fd5b93969395505050506040820135916060013590565b6001600160a01b0393909316835260ff919091166020830152604082015260600190565b5f81515f5b818110156200033857602081850181015186830152016200031c565b505f93019283525090919050565b5f6200035e62000357838662000317565b8462000317565b94935050505056fe608060405234801562000010575f80fd5b50604051620012a7380380620012a783398101604081905262000033916200045f565b604080518082018252600c8082526be5b881e5ae89e4bb99e5a5b360a01b60208084018290528451808601909552918452908301528491600362000078838262000551565b50600462000087828262000551565b5050506001600160a01b038116620000bf575f604051631e4fbdf760e01b8152600401620000b6919062000619565b60405180910390fd5b620000ca8162000251565b506001600160a01b038316620001135760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b21037bbb732b960991b6044820152606401620000b6565b60128260ff1611156200015d5760405162461bcd60e51b8152602060048201526011602482015270088cac6d2dac2d8e640e8dede40d0d2ced607b1b6044820152606401620000b6565b805f03620001ae5760405162461bcd60e51b815260206004820152601f60248201527f496e697469616c20737570706c79206d75737420626520706f736974697665006044820152606401620000b6565b620001bb82600a6200073c565b620001c8905f1962000753565b8111156200020c5760405162461bcd60e51b815260206004820152601060248201526f537570706c7920746f6f206c6172676560801b6044820152606401620000b6565b6005805460ff60a81b1916600160a81b60ff85160217905562000248836200023684600a6200073c565b62000242908462000773565b620002a2565b505050620007a3565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b038216620002ce575f60405163ec442f0560e01b8152600401620000b6919062000619565b620002db5f8383620002df565b5050565b620002e9620002fb565b620002f683838362000330565b505050565b6200030f600554600160a01b900460ff1690565b156200032e5760405163d93c066560e01b815260040160405180910390fd5b565b6001600160a01b0383166200035e578060025f8282546200035291906200078d565b90915550620003d09050565b6001600160a01b0383165f9081526020819052604090205481811015620003b25760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401620000b6565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216620003ee576002805482900390556200040c565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200045291815260200190565b60405180910390a3505050565b5f805f6060848603121562000472575f80fd5b83516001600160a01b038116811462000489575f80fd5b602085015190935060ff81168114620004a0575f80fd5b80925050604084015190509250925092565b634e487b7160e01b5f52604160045260245ffd5b600181811c90821680620004db57607f821691505b602082108103620004fa57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115620002f6575f81815260208120601f850160051c81016020861015620005285750805b601f850160051c820191505b81811015620005495782815560010162000534565b505050505050565b81516001600160401b038111156200056d576200056d620004b2565b62000585816200057e8454620004c6565b8462000500565b602080601f831160018114620005bb575f8415620005a35750858301515b5f19600386901b1c1916600185901b17855562000549565b5f85815260208120601f198616915b82811015620005eb57888601518255948401946001909101908401620005ca565b50858210156200060957878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160a01b0391909116815260200190565b634e487b7160e01b5f52601160045260245ffd5b600181815b808511156200068157815f19048211156200066557620006656200062d565b808516156200067357918102915b93841c939080029062000646565b509250929050565b5f82620006995750600162000736565b81620006a757505f62000736565b8160018114620006c05760028114620006cb57620006eb565b600191505062000736565b60ff841115620006df57620006df6200062d565b50506001821b62000736565b5060208310610133831016604e8410600b841016171562000710575081810a62000736565b6200071c838362000641565b805f19048211156200073257620007326200062d565b0290505b92915050565b5f6200074c60ff84168362000689565b9392505050565b5f826200076e57634e487b7160e01b5f52601260045260245ffd5b500490565b80820281158282048414176200073657620007366200062d565b808201808211156200073657620007366200062d565b610af680620007b15f395ff3fe608060405234801561000f575f80fd5b50600436106100e4575f3560e01c806306fdde03146100e8578063095ea7b31461010657806318160ddd1461012957806323b872dd1461013b578063313ce5671461014e5780633f4ba83a1461016d57806340c10f191461017757806342966c681461018a5780635c975abb1461019d57806370a08231146101a5578063715018a6146101cd57806379cc6790146101d55780638456cb59146101e85780638da5cb5b146101f057806395d89b4114610205578063a9059cbb1461020d578063dd62ed3e14610220578063f2fde38b14610233575b5f80fd5b6100f0610246565b6040516100fd9190610905565b60405180910390f35b61011961011436600461096b565b6102d6565b60405190151581526020016100fd565b6002545b6040519081526020016100fd565b610119610149366004610993565b6102ef565b600554600160a81b900460ff1660405160ff90911681526020016100fd565b610175610312565b005b61017561018536600461096b565b610324565b6101756101983660046109cc565b6103a3565b6101196103b0565b61012d6101b33660046109e3565b6001600160a01b03165f9081526020819052604090205490565b6101756103c0565b6101756101e336600461096b565b6103d1565b6101756103e6565b6101f86103f6565b6040516100fd9190610a03565b6100f0610405565b61011961021b36600461096b565b610414565b61012d61022e366004610a17565b610421565b6101756102413660046109e3565b61044b565b60606003805461025590610a48565b80601f016020809104026020016040519081016040528092919081815260200182805461028190610a48565b80156102cc5780601f106102a3576101008083540402835291602001916102cc565b820191905f5260205f20905b8154815290600101906020018083116102af57829003601f168201915b5050505050905090565b5f336102e3818585610485565b60019150505b92915050565b5f336102fc858285610497565b6103078585856104e8565b506001949350505050565b61031a610545565b610322610577565b565b61032c610545565b6a084595161401484a0000008161034260025490565b61034c9190610a80565b11156103955760405162461bcd60e51b815260206004820152601360248201527213585e081cdd5c1c1b1e48195e18d959591959606a1b60448201526064015b60405180910390fd5b61039f82826105c6565b5050565b6103ad33826105fa565b50565b600554600160a01b900460ff1690565b6103c8610545565b6103225f61062e565b6103dc823383610497565b61039f82826105fa565b6103ee610545565b61032261067f565b6005546001600160a01b031690565b60606004805461025590610a48565b5f336102e38185856104e8565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b610453610545565b6001600160a01b03811661047c575f604051631e4fbdf760e01b815260040161038c9190610a03565b6103ad8161062e565b61049283838360016106c2565b505050565b5f6104a28484610421565b90505f198110156104e257818110156104d457828183604051637dc7a0d960e11b815260040161038c93929190610a9f565b6104e284848484035f6106c2565b50505050565b6001600160a01b038316610511575f604051634b637e8f60e11b815260040161038c9190610a03565b6001600160a01b03821661053a575f60405163ec442f0560e01b815260040161038c9190610a03565b610492838383610794565b3361054e6103f6565b6001600160a01b031614610322573360405163118cdaa760e01b815260040161038c9190610a03565b61057f6107a7565b6005805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516105bc9190610a03565b60405180910390a1565b6001600160a01b0382166105ef575f60405163ec442f0560e01b815260040161038c9190610a03565b61039f5f8383610794565b6001600160a01b038216610623575f604051634b637e8f60e11b815260040161038c9190610a03565b61039f825f83610794565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6106876107cc565b6005805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586105af3390565b6001600160a01b0384166106eb575f60405163e602df0560e01b815260040161038c9190610a03565b6001600160a01b038316610714575f604051634a1406b160e11b815260040161038c9190610a03565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156104e257826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161078691815260200190565b60405180910390a350505050565b61079c6107cc565b6104928383836107f2565b6107af6103b0565b61032257604051638dfc202b60e01b815260040160405180910390fd5b6107d46103b0565b156103225760405163d93c066560e01b815260040160405180910390fd5b6001600160a01b03831661081c578060025f8282546108119190610a80565b909155506108799050565b6001600160a01b0383165f908152602081905260409020548181101561085b5783818360405163391434e360e21b815260040161038c93929190610a9f565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216610895576002805482900390556108b3565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516108f891815260200190565b60405180910390a3505050565b5f6020808352835180828501525f5b8181101561093057858101830151858201604001528201610914565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610966575f80fd5b919050565b5f806040838503121561097c575f80fd5b61098583610950565b946020939093013593505050565b5f805f606084860312156109a5575f80fd5b6109ae84610950565b92506109bc60208501610950565b9150604084013590509250925092565b5f602082840312156109dc575f80fd5b5035919050565b5f602082840312156109f3575f80fd5b6109fc82610950565b9392505050565b6001600160a01b0391909116815260200190565b5f8060408385031215610a28575f80fd5b610a3183610950565b9150610a3f60208401610950565b90509250929050565b600181811c90821680610a5c57607f821691505b602082108103610a7a57634e487b7160e01b5f52602260045260245ffd5b50919050565b808201808211156102e957634e487b7160e01b5f52601160045260245ffd5b6001600160a01b03939093168352602083019190915260408201526060019056fea2646970667358221220f529989a813db1d2559468912ed7ef9fa1bfb27f6bf334d9913188b73ea920de64736f6c63430008140033a2646970667358221220f4b71b283a26963bd3ad24b0f8cc9e292aa8a0725df89c9f6ad366752026351564736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x38 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x18423C06 EQ PUSH3 0x3C JUMPI DUP1 PUSH4 0x3DCEE3AC EQ PUSH3 0x6F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH3 0x53 PUSH3 0x4D CALLDATASIZE PUSH1 0x4 PUSH3 0x29D JUMP JUMPDEST PUSH3 0x86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x53 PUSH3 0x80 CALLDATASIZE PUSH1 0x4 PUSH3 0x29D JUMP JUMPDEST PUSH3 0x15C JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH3 0x9A SWAP1 PUSH3 0x28F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND PUSH1 0x40 MSTORE POP SWAP1 POP PUSH0 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0xC8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x2F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0xEF SWAP3 SWAP2 SWAP1 PUSH3 0x346 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP3 DUP6 ADD MSTORE ADDRESS PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x21 DUP6 ADD MSTORE PUSH1 0x35 DUP5 ADD SWAP9 SWAP1 SWAP9 MSTORE PUSH1 0x55 DUP1 DUP5 ADD SWAP9 SWAP1 SWAP9 MSTORE DUP2 MLOAD DUP1 DUP5 SUB SWAP1 SWAP9 ADD DUP9 MSTORE PUSH1 0x75 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP6 MLOAD SWAP6 ADD SWAP5 SWAP1 SWAP5 KECCAK256 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH3 0x170 SWAP1 PUSH3 0x28F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND PUSH1 0x40 MSTORE POP SWAP1 POP PUSH0 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x19E SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x2F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x1C5 SWAP3 SWAP2 SWAP1 PUSH3 0x346 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP5 DUP2 MLOAD PUSH1 0x20 DUP4 ADD PUSH0 CREATE2 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH3 0x230 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x11195C1B1BDE5B595B9D0819985A5B1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF DUP10 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND SWAP2 SWAP1 DUP7 AND SWAP1 PUSH32 0xD1C16269E4896821EA5DD6216A16B09048D63329A1B10963F0458D3F0389F4F4 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x12A7 DUP1 PUSH3 0x367 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x2B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x2C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH3 0x2DE JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x338 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD MSTORE ADD PUSH3 0x31C JUMP JUMPDEST POP PUSH0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x35E PUSH3 0x357 DUP4 DUP7 PUSH3 0x317 JUMP JUMPDEST DUP5 PUSH3 0x317 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x12A7 CODESIZE SUB DUP1 PUSH3 0x12A7 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x33 SWAP2 PUSH3 0x45F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0xC DUP1 DUP3 MSTORE PUSH12 0xE5B881E5AE89E4BB99E5A5B3 PUSH1 0xA0 SHL PUSH1 0x20 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP7 ADD SWAP1 SWAP6 MSTORE SWAP2 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE DUP5 SWAP2 PUSH1 0x3 PUSH3 0x78 DUP4 DUP3 PUSH3 0x551 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x87 DUP3 DUP3 PUSH3 0x551 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0xBF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xB6 SWAP2 SWAP1 PUSH3 0x619 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xCA DUP2 PUSH3 0x251 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x113 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x24B73B30B634B21037BBB732B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xB6 JUMP JUMPDEST PUSH1 0x12 DUP3 PUSH1 0xFF AND GT ISZERO PUSH3 0x15D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x88CAC6D2DAC2D8E640E8DEDE40D0D2CED PUSH1 0x7B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xB6 JUMP JUMPDEST DUP1 PUSH0 SUB PUSH3 0x1AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C20737570706C79206D75737420626520706F73697469766500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xB6 JUMP JUMPDEST PUSH3 0x1BB DUP3 PUSH1 0xA PUSH3 0x73C JUMP JUMPDEST PUSH3 0x1C8 SWAP1 PUSH0 NOT PUSH3 0x753 JUMP JUMPDEST DUP2 GT ISZERO PUSH3 0x20C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x537570706C7920746F6F206C61726765 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xB6 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL PUSH1 0xFF DUP6 AND MUL OR SWAP1 SSTORE PUSH3 0x248 DUP4 PUSH3 0x236 DUP5 PUSH1 0xA PUSH3 0x73C JUMP JUMPDEST PUSH3 0x242 SWAP1 DUP5 PUSH3 0x773 JUMP JUMPDEST PUSH3 0x2A2 JUMP JUMPDEST POP POP POP PUSH3 0x7A3 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x2CE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xB6 SWAP2 SWAP1 PUSH3 0x619 JUMP JUMPDEST PUSH3 0x2DB PUSH0 DUP4 DUP4 PUSH3 0x2DF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0x2E9 PUSH3 0x2FB JUMP JUMPDEST PUSH3 0x2F6 DUP4 DUP4 DUP4 PUSH3 0x330 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x30F PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO PUSH3 0x32E JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x35E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x352 SWAP2 SWAP1 PUSH3 0x78D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH3 0x3D0 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH3 0x3B2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH3 0xB6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x3EE JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH3 0x40C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x452 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x472 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x489 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH1 0xFF DUP2 AND DUP2 EQ PUSH3 0x4A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x4DB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x4FA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x2F6 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x528 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x549 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x534 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x56D JUMPI PUSH3 0x56D PUSH3 0x4B2 JUMP JUMPDEST PUSH3 0x585 DUP2 PUSH3 0x57E DUP5 SLOAD PUSH3 0x4C6 JUMP JUMPDEST DUP5 PUSH3 0x500 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x5BB JUMPI PUSH0 DUP5 ISZERO PUSH3 0x5A3 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x549 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x5EB JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x5CA JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x609 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x681 JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH3 0x665 JUMPI PUSH3 0x665 PUSH3 0x62D JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x673 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x646 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH3 0x699 JUMPI POP PUSH1 0x1 PUSH3 0x736 JUMP JUMPDEST DUP2 PUSH3 0x6A7 JUMPI POP PUSH0 PUSH3 0x736 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x6C0 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x6CB JUMPI PUSH3 0x6EB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x736 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x6DF JUMPI PUSH3 0x6DF PUSH3 0x62D JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x736 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x710 JUMPI POP DUP2 DUP2 EXP PUSH3 0x736 JUMP JUMPDEST PUSH3 0x71C DUP4 DUP4 PUSH3 0x641 JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH3 0x732 JUMPI PUSH3 0x732 PUSH3 0x62D JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x74C PUSH1 0xFF DUP5 AND DUP4 PUSH3 0x689 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH3 0x76E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH3 0x736 JUMPI PUSH3 0x736 PUSH3 0x62D JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x736 JUMPI PUSH3 0x736 PUSH3 0x62D JUMP JUMPDEST PUSH2 0xAF6 DUP1 PUSH3 0x7B1 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE4 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x233 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF0 PUSH2 0x246 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFD SWAP2 SWAP1 PUSH2 0x905 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 PUSH2 0x114 CALLDATASIZE PUSH1 0x4 PUSH2 0x96B JUMP JUMPDEST PUSH2 0x2D6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFD JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFD JUMP JUMPDEST PUSH2 0x119 PUSH2 0x149 CALLDATASIZE PUSH1 0x4 PUSH2 0x993 JUMP JUMPDEST PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFD JUMP JUMPDEST PUSH2 0x175 PUSH2 0x312 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x175 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0x96B JUMP JUMPDEST PUSH2 0x324 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0x9CC JUMP JUMPDEST PUSH2 0x3A3 JUMP JUMPDEST PUSH2 0x119 PUSH2 0x3B0 JUMP JUMPDEST PUSH2 0x12D PUSH2 0x1B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x3C0 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x1E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x96B JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x3E6 JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFD SWAP2 SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH2 0xF0 PUSH2 0x405 JUMP JUMPDEST PUSH2 0x119 PUSH2 0x21B CALLDATASIZE PUSH1 0x4 PUSH2 0x96B JUMP JUMPDEST PUSH2 0x414 JUMP JUMPDEST PUSH2 0x12D PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0xA17 JUMP JUMPDEST PUSH2 0x421 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x241 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0x44B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x255 SWAP1 PUSH2 0xA48 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x281 SWAP1 PUSH2 0xA48 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2CC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2A3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2CC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2AF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2E3 DUP2 DUP6 DUP6 PUSH2 0x485 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2FC DUP6 DUP3 DUP6 PUSH2 0x497 JUMP JUMPDEST PUSH2 0x307 DUP6 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x31A PUSH2 0x545 JUMP JUMPDEST PUSH2 0x322 PUSH2 0x577 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x32C PUSH2 0x545 JUMP JUMPDEST PUSH11 0x84595161401484A000000 DUP2 PUSH2 0x342 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x34C SWAP2 SWAP1 PUSH2 0xA80 JUMP JUMPDEST GT ISZERO PUSH2 0x395 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13585E081CDD5C1C1B1E48195E18D959591959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x39F DUP3 DUP3 PUSH2 0x5C6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3AD CALLER DUP3 PUSH2 0x5FA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3C8 PUSH2 0x545 JUMP JUMPDEST PUSH2 0x322 PUSH0 PUSH2 0x62E JUMP JUMPDEST PUSH2 0x3DC DUP3 CALLER DUP4 PUSH2 0x497 JUMP JUMPDEST PUSH2 0x39F DUP3 DUP3 PUSH2 0x5FA JUMP JUMPDEST PUSH2 0x3EE PUSH2 0x545 JUMP JUMPDEST PUSH2 0x322 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x255 SWAP1 PUSH2 0xA48 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2E3 DUP2 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x453 PUSH2 0x545 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x47C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH2 0x3AD DUP2 PUSH2 0x62E JUMP JUMPDEST PUSH2 0x492 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x6C2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4A2 DUP5 DUP5 PUSH2 0x421 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 LT ISZERO PUSH2 0x4E2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4D4 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA9F JUMP JUMPDEST PUSH2 0x4E2 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x6C2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x511 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x53A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH2 0x492 DUP4 DUP4 DUP4 PUSH2 0x794 JUMP JUMPDEST CALLER PUSH2 0x54E PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x322 JUMPI CALLER PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH2 0x57F PUSH2 0x7A7 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5BC SWAP2 SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5EF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH2 0x39F PUSH0 DUP4 DUP4 PUSH2 0x794 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x623 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH2 0x39F DUP3 PUSH0 DUP4 PUSH2 0x794 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x687 PUSH2 0x7CC JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x5AF CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x6EB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x714 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x4E2 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x786 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x79C PUSH2 0x7CC JUMP JUMPDEST PUSH2 0x492 DUP4 DUP4 DUP4 PUSH2 0x7F2 JUMP JUMPDEST PUSH2 0x7AF PUSH2 0x3B0 JUMP JUMPDEST PUSH2 0x322 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7D4 PUSH2 0x3B0 JUMP JUMPDEST ISZERO PUSH2 0x322 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x81C JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x811 SWAP2 SWAP1 PUSH2 0xA80 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x879 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x85B JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x895 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x8B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x8F8 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x930 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x914 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x966 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x97C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x985 DUP4 PUSH2 0x950 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9AE DUP5 PUSH2 0x950 JUMP JUMPDEST SWAP3 POP PUSH2 0x9BC PUSH1 0x20 DUP6 ADD PUSH2 0x950 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9DC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9FC DUP3 PUSH2 0x950 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA28 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA31 DUP4 PUSH2 0x950 JUMP JUMPDEST SWAP2 POP PUSH2 0xA3F PUSH1 0x20 DUP5 ADD PUSH2 0x950 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xA5C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xA7A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2E9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 0x29 SWAP9 SWAP11 DUP2 RETURNDATASIZE 0xB1 0xD2 SSTORE SWAP5 PUSH9 0x912ED7EF9FA1BFB27F PUSH12 0xF334D9913188B73EA920DE64 PUSH20 0x6F6C63430008140033A2646970667358221220F4 0xB7 SHL 0x28 GASPRICE 0x26 SWAP7 EXTCODESIZE 0xD3 0xAD 0x24 0xB0 0xF8 0xCC SWAP15 0x29 0x2A 0xA8 LOG0 PUSH19 0x5DF89C9F6AD366752026351564736F6C634300 ADDMOD EQ STOP CALLER ",
							"sourceMap": "169:2784:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2077:874;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;771:32:10;;;753:51;;741:2;726:18;2077:874:8;;;;;;;723:948;;;;;;:::i;:::-;;:::i;2077:874::-;2247:7;2307:21;2331:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2307:52;;2414:24;2452:12;2466:13;2481;2441:54;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2414:81;;2562:25;2607:8;2617:11;2590:39;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;2590:39:8;;;;;;2848:23;;2590:39;2848:23;;;;-1:-1:-1;;;;;;2731:154:8;;;1976:39:10;2803:4:8;2077:2:10;2048:15;-1:-1:-1;;;;;;2044:45:10;2031:11;;;2024:66;2106:12;;;2099:28;;;;2143:12;;;;2136:28;;;;2731:154:8;;;;;;;;;;2180:12:10;;;;2731:154:8;;2708:187;;;;;;;;;;-1:-1:-1;;;;;;;2077:874:8:o;723:948::-;884:20;957:21;981:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;957:52;;1064:24;1102:12;1116:13;1131;1091:54;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1064:81;;1212:25;1257:8;1267:11;1240:39;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1212:67;;1418:4;1403:12;1397:19;1390:4;1376:12;1372:23;1369:1;1361:62;1345:78;-1:-1:-1;;;;;;1497:26:8;;1489:56;;;;-1:-1:-1;;;1489:56:8;;2405:2:10;1489:56:8;;;2387:21:10;2444:2;2424:18;;;2417:30;-1:-1:-1;;;2463:18:10;;;2456:47;2520:18;;1489:56:8;;;;;;;;1583:81;;;2777:4:10;2765:17;;2747:36;;2814:2;2799:18;;2792:34;;;2842:18;;;2835:34;;;-1:-1:-1;;;;;1583:81:8;;;;;;;;;;2735:2:10;2720:18;1583:81:8;;;;;;;906:765;;;723:948;;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;14:588:10:-;98:6;106;114;122;175:3;163:9;154:7;150:23;146:33;143:53;;;192:1;189;182:12;143:53;218:23;;-1:-1:-1;;;;;270:31:10;;260:42;;250:70;;316:1;313;306:12;250:70;339:5;-1:-1:-1;396:2:10;381:18;;368:32;444:4;431:18;;419:31;;409:59;;464:1;461;454:12;409:59;14:588;;487:7;;-1:-1:-1;;;;541:2:10;526:18;;513:32;;592:2;577:18;564:32;;14:588::o;815:352::-;-1:-1:-1;;;;;1031:32:10;;;;1013:51;;1112:4;1100:17;;;;1095:2;1080:18;;1073:45;1149:2;1134:18;;1127:34;1001:2;986:18;;815:352::o;1172:322::-;1213:3;1251:5;1245:12;1275:1;1285:128;1299:6;1296:1;1293:13;1285:128;;;1396:4;1381:13;;;1377:24;;1371:31;1358:11;;;1351:52;1314:12;1285:128;;;-1:-1:-1;1468:1:10;1432:16;;1457:13;;;-1:-1:-1;1432:16:10;;1172:322;-1:-1:-1;1172:322:10:o;1499:261::-;1674:3;1699:55;1724:29;1749:3;1741:6;1724:29;:::i;:::-;1716:6;1699:55;:::i;:::-;1692:62;1499:261;-1:-1:-1;;;;1499:261:10:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1139800",
								"executionCost": "1185",
								"totalCost": "1140985"
							},
							"external": {
								"deployWBGZToken(address,uint8,uint256,bytes32)": "infinite",
								"getWBGZTokenAddress(address,uint8,uint256,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 169,
									"end": 2953,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 169,
									"end": 2953,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 169,
									"end": 2953,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 169,
									"end": 2953,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 169,
									"end": 2953,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 169,
									"end": 2953,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 169,
									"end": 2953,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 169,
									"end": 2953,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 169,
									"end": 2953,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 2953,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 169,
									"end": 2953,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 169,
									"end": 2953,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 169,
									"end": 2953,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 169,
									"end": 2953,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 169,
									"end": 2953,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 169,
									"end": 2953,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 169,
									"end": 2953,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 169,
									"end": 2953,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 2953,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 169,
									"end": 2953,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 2953,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f4b71b283a26963bd3ad24b0f8cc9e292aa8a0725df89c9f6ad366752026351564736f6c63430008140033",
									".code": [
										{
											"begin": 169,
											"end": 2953,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 169,
											"end": 2953,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 169,
											"end": 2953,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 169,
											"end": 2953,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 169,
											"end": 2953,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 169,
											"end": 2953,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 169,
											"end": 2953,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 169,
											"end": 2953,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 169,
											"end": 2953,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 2953,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 169,
											"end": 2953,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 169,
											"end": 2953,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 169,
											"end": 2953,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 169,
											"end": 2953,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 169,
											"end": 2953,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 169,
											"end": 2953,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 169,
											"end": 2953,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 169,
											"end": 2953,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 169,
											"end": 2953,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 169,
											"end": 2953,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 2953,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 169,
											"end": 2953,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 169,
											"end": 2953,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 169,
											"end": 2953,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 169,
											"end": 2953,
											"name": "PUSH",
											"source": 8,
											"value": "18423C06"
										},
										{
											"begin": 169,
											"end": 2953,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 169,
											"end": 2953,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 169,
											"end": 2953,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 169,
											"end": 2953,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 169,
											"end": 2953,
											"name": "PUSH",
											"source": 8,
											"value": "3DCEE3AC"
										},
										{
											"begin": 169,
											"end": 2953,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 169,
											"end": 2953,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 169,
											"end": 2953,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 169,
											"end": 2953,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 169,
											"end": 2953,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 169,
											"end": 2953,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 2953,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 169,
											"end": 2953,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2077,
											"end": 2951,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2077,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2077,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2077,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2077,
											"end": 2951,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2077,
											"end": 2951,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2077,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2077,
											"end": 2951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2077,
											"end": 2951,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2077,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2077,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 2077,
											"end": 2951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2077,
											"end": 2951,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2077,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2077,
											"end": 2951,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2077,
											"end": 2951,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 771,
											"end": 803,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 771,
											"end": 803,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 771,
											"end": 803,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 753,
											"end": 804,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 753,
											"end": 804,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 741,
											"end": 743,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 726,
											"end": 744,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2077,
											"end": 2951,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2077,
											"end": 2951,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2077,
											"end": 2951,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2077,
											"end": 2951,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2077,
											"end": 2951,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2077,
											"end": 2951,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2077,
											"end": 2951,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 723,
											"end": 1671,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 723,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 723,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 723,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 723,
											"end": 1671,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 723,
											"end": 1671,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 723,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 723,
											"end": 1671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 723,
											"end": 1671,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 723,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 723,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 723,
											"end": 1671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2077,
											"end": 2951,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 2077,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2247,
											"end": 2254,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2307,
											"end": 2328,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 2331,
											"end": 2359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2307,
											"end": 2359,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2307,
											"end": 2359,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2414,
											"end": 2438,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2452,
											"end": 2464,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2466,
											"end": 2479,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2481,
											"end": 2494,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2495,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2495,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2495,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2441,
											"end": 2495,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 2441,
											"end": 2495,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2495,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2495,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2495,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 2441,
											"end": 2495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2495,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 2441,
											"end": 2495,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2495,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2495,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2495,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2441,
											"end": 2495,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2495,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2495,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2495,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2495,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2495,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2495,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2495,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2495,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2414,
											"end": 2495,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2414,
											"end": 2495,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2562,
											"end": 2587,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2607,
											"end": 2615,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2628,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2590,
											"end": 2629,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2629,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2590,
											"end": 2629,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2629,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2590,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2629,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2590,
											"end": 2629,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2590,
											"end": 2629,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2590,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 2590,
											"end": 2629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2590,
											"end": 2629,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2590,
											"end": 2629,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2629,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2590,
											"end": 2629,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2590,
											"end": 2629,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2590,
											"end": 2629,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2590,
											"end": 2629,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2590,
											"end": 2629,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2590,
											"end": 2629,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2590,
											"end": 2629,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2590,
											"end": 2629,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2590,
											"end": 2629,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2590,
											"end": 2629,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2848,
											"end": 2871,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2848,
											"end": 2871,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2590,
											"end": 2629,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2848,
											"end": 2871,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2848,
											"end": 2871,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2848,
											"end": 2871,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2848,
											"end": 2871,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2731,
											"end": 2885,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2731,
											"end": 2885,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2731,
											"end": 2885,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1976,
											"end": 2015,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2803,
											"end": 2807,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 2077,
											"end": 2079,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2048,
											"end": 2063,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2044,
											"end": 2089,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2031,
											"end": 2042,
											"name": "PUSH",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 2031,
											"end": 2042,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2031,
											"end": 2042,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2024,
											"end": 2090,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2106,
											"end": 2118,
											"name": "PUSH",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 2106,
											"end": 2118,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2106,
											"end": 2118,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2099,
											"end": 2127,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 2099,
											"end": 2127,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2099,
											"end": 2127,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 2099,
											"end": 2127,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 2155,
											"name": "PUSH",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 2143,
											"end": 2155,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 2155,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 2155,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2136,
											"end": 2164,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 2136,
											"end": 2164,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2136,
											"end": 2164,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 2136,
											"end": 2164,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2731,
											"end": 2885,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2731,
											"end": 2885,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2731,
											"end": 2885,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2731,
											"end": 2885,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2731,
											"end": 2885,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2731,
											"end": 2885,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2731,
											"end": 2885,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": 2731,
											"end": 2885,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2731,
											"end": 2885,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 2731,
											"end": 2885,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2180,
											"end": 2192,
											"name": "PUSH",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 2180,
											"end": 2192,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2180,
											"end": 2192,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2180,
											"end": 2192,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2731,
											"end": 2885,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2731,
											"end": 2885,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2895,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2895,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2895,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2895,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2895,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2895,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2895,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2895,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2895,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2895,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2077,
											"end": 2951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 723,
											"end": 1671,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 723,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 884,
											"end": 904,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 957,
											"end": 978,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 981,
											"end": 1009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 957,
											"end": 1009,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 957,
											"end": 1009,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 1088,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1114,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1129,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1131,
											"end": 1144,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 1091,
											"end": 1145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 1145,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 1145,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1212,
											"end": 1237,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1257,
											"end": 1265,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1267,
											"end": 1278,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1279,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1279,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1279,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1240,
											"end": 1279,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1240,
											"end": 1279,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1279,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1279,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 1240,
											"end": 1279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1279,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1240,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1279,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1279,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1279,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1240,
											"end": 1279,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1279,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1279,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1279,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1279,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1279,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1279,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1279,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1279,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1418,
											"end": 1422,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1403,
											"end": 1415,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1397,
											"end": 1416,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1390,
											"end": 1394,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1376,
											"end": 1388,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1372,
											"end": 1395,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1369,
											"end": 1370,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1361,
											"end": 1423,
											"name": "CREATE2",
											"source": 8
										},
										{
											"begin": 1345,
											"end": 1423,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1497,
											"end": 1523,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1497,
											"end": 1523,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1489,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 1489,
											"end": 1545,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1489,
											"end": 1545,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1489,
											"end": 1545,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1489,
											"end": 1545,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1489,
											"end": 1545,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2405,
											"end": 2407,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1489,
											"end": 1545,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1489,
											"end": 1545,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1489,
											"end": 1545,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2408,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2444,
											"end": 2446,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 2424,
											"end": 2442,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 2424,
											"end": 2442,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2424,
											"end": 2442,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2417,
											"end": 2447,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "11195C1B1BDE5B595B9D0819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2463,
											"end": 2481,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 2463,
											"end": 2481,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2463,
											"end": 2481,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2456,
											"end": 2503,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 2538,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 2520,
											"end": 2538,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1489,
											"end": 1545,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1489,
											"end": 1545,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1489,
											"end": 1545,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1489,
											"end": 1545,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1489,
											"end": 1545,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1489,
											"end": 1545,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1489,
											"end": 1545,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1489,
											"end": 1545,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 1489,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1664,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1583,
											"end": 1664,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1664,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2777,
											"end": 2781,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 2765,
											"end": 2782,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 2765,
											"end": 2782,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2747,
											"end": 2783,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2747,
											"end": 2783,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2814,
											"end": 2816,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2799,
											"end": 2817,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2799,
											"end": 2817,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2792,
											"end": 2826,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2860,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2860,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2860,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2835,
											"end": 2869,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2835,
											"end": 2869,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2835,
											"end": 2869,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1583,
											"end": 1664,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1664,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1664,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1664,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1664,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1664,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1664,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1664,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1664,
											"name": "PUSH",
											"source": 8,
											"value": "D1C16269E4896821EA5DD6216A16B09048D63329A1B10963F0458D3F0389F4F4"
										},
										{
											"begin": 1583,
											"end": 1664,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2735,
											"end": 2737,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2720,
											"end": 2738,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1583,
											"end": 1664,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1583,
											"end": 1664,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1664,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1664,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1664,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1664,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1664,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 906,
											"end": 1671,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 906,
											"end": 1671,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 906,
											"end": 1671,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 723,
											"end": 1671,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 723,
											"end": 1671,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 723,
											"end": 1671,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 723,
											"end": 1671,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 723,
											"end": 1671,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 723,
											"end": 1671,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 723,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "17"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH #[$]",
											"source": -1,
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [$]",
											"source": -1,
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 602,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 14,
											"end": 602,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 98,
											"end": 104,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 106,
											"end": 112,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 114,
											"end": 120,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 122,
											"end": 128,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 175,
											"end": 178,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 163,
											"end": 172,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 154,
											"end": 161,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 150,
											"end": 173,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 146,
											"end": 179,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 143,
											"end": 196,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 143,
											"end": 196,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 143,
											"end": 196,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 192,
											"end": 193,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 189,
											"end": 190,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 182,
											"end": 194,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 143,
											"end": 196,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 143,
											"end": 196,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 218,
											"end": 241,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 218,
											"end": 241,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 270,
											"end": 301,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 270,
											"end": 301,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 260,
											"end": 302,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 260,
											"end": 302,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 250,
											"end": 320,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 250,
											"end": 320,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 316,
											"end": 317,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 314,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 306,
											"end": 318,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 250,
											"end": 320,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 250,
											"end": 320,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 339,
											"end": 344,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 396,
											"end": 398,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 381,
											"end": 399,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 381,
											"end": 399,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 368,
											"end": 400,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 444,
											"end": 448,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 431,
											"end": 449,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 431,
											"end": 449,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 419,
											"end": 450,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 419,
											"end": 450,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 409,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 409,
											"end": 468,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 464,
											"end": 465,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 461,
											"end": 462,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 454,
											"end": 466,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 409,
											"end": 468,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 409,
											"end": 468,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14,
											"end": 602,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 14,
											"end": 602,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 487,
											"end": 494,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 487,
											"end": 494,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 541,
											"end": 543,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 526,
											"end": 544,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 526,
											"end": 544,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 513,
											"end": 545,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 513,
											"end": 545,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 592,
											"end": 594,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 577,
											"end": 595,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 564,
											"end": 596,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 564,
											"end": 596,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14,
											"end": 602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 815,
											"end": 1167,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 815,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1031,
											"end": 1063,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1031,
											"end": 1063,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1031,
											"end": 1063,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1031,
											"end": 1063,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1013,
											"end": 1064,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1013,
											"end": 1064,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1112,
											"end": 1116,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1100,
											"end": 1117,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1100,
											"end": 1117,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1100,
											"end": 1117,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1100,
											"end": 1117,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1095,
											"end": 1097,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1080,
											"end": 1098,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1080,
											"end": 1098,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1073,
											"end": 1118,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1149,
											"end": 1151,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1134,
											"end": 1152,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1134,
											"end": 1152,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1127,
											"end": 1161,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1003,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 986,
											"end": 1004,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 986,
											"end": 1004,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 815,
											"end": 1167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1172,
											"end": 1494,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 1172,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1213,
											"end": 1216,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1251,
											"end": 1256,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1245,
											"end": 1257,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1275,
											"end": 1276,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1285,
											"end": 1413,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 1285,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1305,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1296,
											"end": 1297,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1306,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1285,
											"end": 1413,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1285,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1285,
											"end": 1413,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1400,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1377,
											"end": 1401,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1377,
											"end": 1401,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1371,
											"end": 1402,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1358,
											"end": 1369,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1358,
											"end": 1369,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1358,
											"end": 1369,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1351,
											"end": 1403,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1314,
											"end": 1326,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1285,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 1285,
											"end": 1413,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1285,
											"end": 1413,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1285,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1468,
											"end": 1469,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1432,
											"end": 1448,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 1448,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1457,
											"end": 1470,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1457,
											"end": 1470,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1457,
											"end": 1470,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1432,
											"end": 1448,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 1448,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1172,
											"end": 1494,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1172,
											"end": 1494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1499,
											"end": 1760,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 1499,
											"end": 1760,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1677,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1699,
											"end": 1754,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 1724,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 1749,
											"end": 1752,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1724,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 1724,
											"end": 1753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1724,
											"end": 1753,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 1724,
											"end": 1753,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1716,
											"end": 1722,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1699,
											"end": 1754,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 1699,
											"end": 1754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1699,
											"end": 1754,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 1699,
											"end": 1754,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1692,
											"end": 1754,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 1499,
											"end": 1760,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1499,
											"end": 1760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									],
									".data": {
										"0": {
											".code": [
												{
													"begin": 459,
													"end": 2753,
													"name": "PUSH",
													"source": 9,
													"value": "80"
												},
												{
													"begin": 459,
													"end": 2753,
													"name": "PUSH",
													"source": 9,
													"value": "40"
												},
												{
													"begin": 459,
													"end": 2753,
													"name": "MSTORE",
													"source": 9
												},
												{
													"begin": 950,
													"end": 1592,
													"name": "CALLVALUE",
													"source": 9
												},
												{
													"begin": 950,
													"end": 1592,
													"name": "DUP1",
													"source": 9
												},
												{
													"begin": 950,
													"end": 1592,
													"name": "ISZERO",
													"source": 9
												},
												{
													"begin": 950,
													"end": 1592,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "1"
												},
												{
													"begin": 950,
													"end": 1592,
													"name": "JUMPI",
													"source": 9
												},
												{
													"begin": 950,
													"end": 1592,
													"name": "PUSH",
													"source": 9,
													"value": "0"
												},
												{
													"begin": 950,
													"end": 1592,
													"name": "DUP1",
													"source": 9
												},
												{
													"begin": 950,
													"end": 1592,
													"name": "REVERT",
													"source": 9
												},
												{
													"begin": 950,
													"end": 1592,
													"name": "tag",
													"source": 9,
													"value": "1"
												},
												{
													"begin": 950,
													"end": 1592,
													"name": "JUMPDEST",
													"source": 9
												},
												{
													"begin": 950,
													"end": 1592,
													"name": "POP",
													"source": 9
												},
												{
													"begin": 950,
													"end": 1592,
													"name": "PUSH",
													"source": 9,
													"value": "40"
												},
												{
													"begin": 950,
													"end": 1592,
													"name": "MLOAD",
													"source": 9
												},
												{
													"begin": 950,
													"end": 1592,
													"name": "PUSHSIZE",
													"source": 9
												},
												{
													"begin": 950,
													"end": 1592,
													"name": "CODESIZE",
													"source": 9
												},
												{
													"begin": 950,
													"end": 1592,
													"name": "SUB",
													"source": 9
												},
												{
													"begin": 950,
													"end": 1592,
													"name": "DUP1",
													"source": 9
												},
												{
													"begin": 950,
													"end": 1592,
													"name": "PUSHSIZE",
													"source": 9
												},
												{
													"begin": 950,
													"end": 1592,
													"name": "DUP4",
													"source": 9
												},
												{
													"begin": 950,
													"end": 1592,
													"name": "CODECOPY",
													"source": 9
												},
												{
													"begin": 950,
													"end": 1592,
													"name": "DUP2",
													"source": 9
												},
												{
													"begin": 950,
													"end": 1592,
													"name": "ADD",
													"source": 9
												},
												{
													"begin": 950,
													"end": 1592,
													"name": "PUSH",
													"source": 9,
													"value": "40"
												},
												{
													"begin": 950,
													"end": 1592,
													"name": "DUP2",
													"source": 9
												},
												{
													"begin": 950,
													"end": 1592,
													"name": "SWAP1",
													"source": 9
												},
												{
													"begin": 950,
													"end": 1592,
													"name": "MSTORE",
													"source": 9
												},
												{
													"begin": 950,
													"end": 1592,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "2"
												},
												{
													"begin": 950,
													"end": 1592,
													"name": "SWAP2",
													"source": 9
												},
												{
													"begin": 950,
													"end": 1592,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "3"
												},
												{
													"begin": 950,
													"end": 1592,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 9
												},
												{
													"begin": 950,
													"end": 1592,
													"name": "tag",
													"source": 9,
													"value": "2"
												},
												{
													"begin": 950,
													"end": 1592,
													"name": "JUMPDEST",
													"source": 9
												},
												{
													"begin": 1582,
													"end": 1695,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 1582,
													"end": 1695,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 1582,
													"end": 1695,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": 1582,
													"end": 1695,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 1582,
													"end": 1695,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 1582,
													"end": 1695,
													"name": "ADD",
													"source": 2
												},
												{
													"begin": 1582,
													"end": 1695,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 1582,
													"end": 1695,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 1582,
													"end": 1695,
													"name": "PUSH",
													"source": 2,
													"value": "C"
												},
												{
													"begin": 1582,
													"end": 1695,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 1582,
													"end": 1695,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 1582,
													"end": 1695,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E5B881E5AE89E4BB99E5A5B3"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 1582,
													"end": 1695,
													"name": "PUSH",
													"source": 2,
													"value": "20"
												},
												{
													"begin": 1582,
													"end": 1695,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 1582,
													"end": 1695,
													"name": "DUP5",
													"source": 2
												},
												{
													"begin": 1582,
													"end": 1695,
													"name": "ADD",
													"source": 2
												},
												{
													"begin": 1582,
													"end": 1695,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 1582,
													"end": 1695,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 1582,
													"end": 1695,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 1582,
													"end": 1695,
													"name": "DUP5",
													"source": 2
												},
												{
													"begin": 1582,
													"end": 1695,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": 1582,
													"end": 1695,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 1582,
													"end": 1695,
													"name": "DUP7",
													"source": 2
												},
												{
													"begin": 1582,
													"end": 1695,
													"name": "ADD",
													"source": 2
												},
												{
													"begin": 1582,
													"end": 1695,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 1582,
													"end": 1695,
													"name": "SWAP6",
													"source": 2
												},
												{
													"begin": 1582,
													"end": 1695,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 1582,
													"end": 1695,
													"name": "SWAP2",
													"source": 2
												},
												{
													"begin": 1582,
													"end": 1695,
													"name": "DUP5",
													"source": 2
												},
												{
													"begin": 1582,
													"end": 1695,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 1582,
													"end": 1695,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 1582,
													"end": 1695,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 1582,
													"end": 1695,
													"name": "ADD",
													"source": 2
												},
												{
													"begin": 1582,
													"end": 1695,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 1118,
													"end": 1130,
													"name": "DUP5",
													"source": 9
												},
												{
													"begin": 1118,
													"end": 1130,
													"name": "SWAP2",
													"source": 9
												},
												{
													"begin": 1648,
													"end": 1653,
													"name": "PUSH",
													"source": 2,
													"value": "3"
												},
												{
													"begin": 1648,
													"end": 1661,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "8"
												},
												{
													"begin": 1582,
													"end": 1695,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 1648,
													"end": 1653,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 1648,
													"end": 1661,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "9"
												},
												{
													"begin": 1648,
													"end": 1661,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 1648,
													"end": 1661,
													"name": "tag",
													"source": 2,
													"value": "8"
												},
												{
													"begin": 1648,
													"end": 1661,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 1671,
													"end": 1678,
													"name": "PUSH",
													"source": 2,
													"value": "4"
												},
												{
													"begin": 1671,
													"end": 1688,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "10"
												},
												{
													"begin": 1681,
													"end": 1688,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 1671,
													"end": 1678,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 1671,
													"end": 1688,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "9"
												},
												{
													"begin": 1671,
													"end": 1688,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 1671,
													"end": 1688,
													"name": "tag",
													"source": 2,
													"value": "10"
												},
												{
													"begin": 1671,
													"end": 1688,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 1273,
													"end": 1299,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 1273,
													"end": 1299,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 1269,
													"end": 1364,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "12"
												},
												{
													"begin": 1269,
													"end": 1364,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 1350,
													"end": 1351,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 1322,
													"end": 1353,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 1322,
													"end": 1353,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1E4FBDF7"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 1322,
													"end": 1353,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 1322,
													"end": 1353,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 1322,
													"end": 1353,
													"name": "PUSH",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 1322,
													"end": 1353,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 1322,
													"end": 1353,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "13"
												},
												{
													"begin": 1322,
													"end": 1353,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 1322,
													"end": 1353,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 1322,
													"end": 1353,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "14"
												},
												{
													"begin": 1322,
													"end": 1353,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 1322,
													"end": 1353,
													"name": "tag",
													"source": 0,
													"value": "13"
												},
												{
													"begin": 1322,
													"end": 1353,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 1322,
													"end": 1353,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 1322,
													"end": 1353,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": 1322,
													"end": 1353,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 1322,
													"end": 1353,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 1322,
													"end": 1353,
													"name": "SUB",
													"source": 0
												},
												{
													"begin": 1322,
													"end": 1353,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 1322,
													"end": 1353,
													"name": "REVERT",
													"source": 0
												},
												{
													"begin": 1269,
													"end": 1364,
													"name": "tag",
													"source": 0,
													"value": "12"
												},
												{
													"begin": 1269,
													"end": 1364,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 1373,
													"end": 1405,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "15"
												},
												{
													"begin": 1392,
													"end": 1404,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 1373,
													"end": 1391,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "16"
												},
												{
													"begin": 1373,
													"end": 1405,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 1373,
													"end": 1405,
													"name": "tag",
													"source": 0,
													"value": "15"
												},
												{
													"begin": 1373,
													"end": 1405,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 1150,
													"end": 1176,
													"name": "DUP4",
													"source": 9
												},
												{
													"begin": 1150,
													"end": 1176,
													"modifierDepth": 2,
													"name": "AND",
													"source": 9
												},
												{
													"begin": 1142,
													"end": 1194,
													"modifierDepth": 2,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "18"
												},
												{
													"begin": 1142,
													"end": 1194,
													"modifierDepth": 2,
													"name": "JUMPI",
													"source": 9
												},
												{
													"begin": 1142,
													"end": 1194,
													"modifierDepth": 2,
													"name": "PUSH",
													"source": 9,
													"value": "40"
												},
												{
													"begin": 1142,
													"end": 1194,
													"name": "MLOAD",
													"source": 9
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "461BCD"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E5"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 1142,
													"end": 1194,
													"name": "DUP2",
													"source": 9
												},
												{
													"begin": 1142,
													"end": 1194,
													"name": "MSTORE",
													"source": 9
												},
												{
													"begin": 3659,
													"end": 3661,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 1142,
													"end": 1194,
													"modifierDepth": 2,
													"name": "PUSH",
													"source": 9,
													"value": "4"
												},
												{
													"begin": 1142,
													"end": 1194,
													"name": "DUP3",
													"source": 9
												},
												{
													"begin": 1142,
													"end": 1194,
													"modifierDepth": 2,
													"name": "ADD",
													"source": 9
												},
												{
													"begin": 3641,
													"end": 3662,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 3698,
													"end": 3700,
													"name": "PUSH",
													"source": 10,
													"value": "D"
												},
												{
													"begin": 3678,
													"end": 3696,
													"name": "PUSH",
													"source": 10,
													"value": "24"
												},
												{
													"begin": 3678,
													"end": 3696,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 3678,
													"end": 3696,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 3671,
													"end": 3701,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "24B73B30B634B21037BBB732B9"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "99"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 3717,
													"end": 3735,
													"name": "PUSH",
													"source": 10,
													"value": "44"
												},
												{
													"begin": 3717,
													"end": 3735,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 3717,
													"end": 3735,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 3710,
													"end": 3753,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 3770,
													"end": 3788,
													"name": "PUSH",
													"source": 10,
													"value": "64"
												},
												{
													"begin": 3770,
													"end": 3788,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 1142,
													"end": 1194,
													"modifierDepth": 2,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "13"
												},
												{
													"begin": 3457,
													"end": 3794,
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 1142,
													"end": 1194,
													"modifierDepth": 2,
													"name": "tag",
													"source": 9,
													"value": "18"
												},
												{
													"begin": 1142,
													"end": 1194,
													"modifierDepth": 2,
													"name": "JUMPDEST",
													"source": 9
												},
												{
													"begin": 1229,
													"end": 1231,
													"modifierDepth": 2,
													"name": "PUSH",
													"source": 9,
													"value": "12"
												},
												{
													"begin": 1212,
													"end": 1225,
													"modifierDepth": 2,
													"name": "DUP3",
													"source": 9
												},
												{
													"begin": 1212,
													"end": 1231,
													"modifierDepth": 2,
													"name": "PUSH",
													"source": 9,
													"value": "FF"
												},
												{
													"begin": 1212,
													"end": 1231,
													"modifierDepth": 2,
													"name": "AND",
													"source": 9
												},
												{
													"begin": 1212,
													"end": 1231,
													"modifierDepth": 2,
													"name": "GT",
													"source": 9
												},
												{
													"begin": 1212,
													"end": 1231,
													"modifierDepth": 2,
													"name": "ISZERO",
													"source": 9
												},
												{
													"begin": 1204,
													"end": 1253,
													"modifierDepth": 2,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "21"
												},
												{
													"begin": 1204,
													"end": 1253,
													"modifierDepth": 2,
													"name": "JUMPI",
													"source": 9
												},
												{
													"begin": 1204,
													"end": 1253,
													"modifierDepth": 2,
													"name": "PUSH",
													"source": 9,
													"value": "40"
												},
												{
													"begin": 1204,
													"end": 1253,
													"name": "MLOAD",
													"source": 9
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "461BCD"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E5"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 1204,
													"end": 1253,
													"name": "DUP2",
													"source": 9
												},
												{
													"begin": 1204,
													"end": 1253,
													"name": "MSTORE",
													"source": 9
												},
												{
													"begin": 4001,
													"end": 4003,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 1204,
													"end": 1253,
													"modifierDepth": 2,
													"name": "PUSH",
													"source": 9,
													"value": "4"
												},
												{
													"begin": 1204,
													"end": 1253,
													"name": "DUP3",
													"source": 9
												},
												{
													"begin": 1204,
													"end": 1253,
													"modifierDepth": 2,
													"name": "ADD",
													"source": 9
												},
												{
													"begin": 3983,
													"end": 4004,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 4040,
													"end": 4042,
													"name": "PUSH",
													"source": 10,
													"value": "11"
												},
												{
													"begin": 4020,
													"end": 4038,
													"name": "PUSH",
													"source": 10,
													"value": "24"
												},
												{
													"begin": 4020,
													"end": 4038,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 4020,
													"end": 4038,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 4013,
													"end": 4043,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "88CAC6D2DAC2D8E640E8DEDE40D0D2CED"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "7B"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 4059,
													"end": 4077,
													"name": "PUSH",
													"source": 10,
													"value": "44"
												},
												{
													"begin": 4059,
													"end": 4077,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 4059,
													"end": 4077,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 4052,
													"end": 4099,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 4116,
													"end": 4134,
													"name": "PUSH",
													"source": 10,
													"value": "64"
												},
												{
													"begin": 4116,
													"end": 4134,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 1204,
													"end": 1253,
													"modifierDepth": 2,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "13"
												},
												{
													"begin": 3799,
													"end": 4140,
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 1204,
													"end": 1253,
													"modifierDepth": 2,
													"name": "tag",
													"source": 9,
													"value": "21"
												},
												{
													"begin": 1204,
													"end": 1253,
													"modifierDepth": 2,
													"name": "JUMPDEST",
													"source": 9
												},
												{
													"begin": 1271,
													"end": 1284,
													"modifierDepth": 2,
													"name": "DUP1",
													"source": 9
												},
												{
													"begin": 1288,
													"end": 1289,
													"modifierDepth": 2,
													"name": "PUSH",
													"source": 9,
													"value": "0"
												},
												{
													"begin": 1271,
													"end": 1289,
													"name": "SUB",
													"source": 9
												},
												{
													"begin": 1263,
													"end": 1325,
													"modifierDepth": 2,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "24"
												},
												{
													"begin": 1263,
													"end": 1325,
													"modifierDepth": 2,
													"name": "JUMPI",
													"source": 9
												},
												{
													"begin": 1263,
													"end": 1325,
													"modifierDepth": 2,
													"name": "PUSH",
													"source": 9,
													"value": "40"
												},
												{
													"begin": 1263,
													"end": 1325,
													"name": "MLOAD",
													"source": 9
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "461BCD"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E5"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 1263,
													"end": 1325,
													"name": "DUP2",
													"source": 9
												},
												{
													"begin": 1263,
													"end": 1325,
													"name": "MSTORE",
													"source": 9
												},
												{
													"begin": 4347,
													"end": 4349,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 1263,
													"end": 1325,
													"modifierDepth": 2,
													"name": "PUSH",
													"source": 9,
													"value": "4"
												},
												{
													"begin": 1263,
													"end": 1325,
													"name": "DUP3",
													"source": 9
												},
												{
													"begin": 1263,
													"end": 1325,
													"modifierDepth": 2,
													"name": "ADD",
													"source": 9
												},
												{
													"begin": 4329,
													"end": 4350,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 4386,
													"end": 4388,
													"name": "PUSH",
													"source": 10,
													"value": "1F"
												},
												{
													"begin": 4366,
													"end": 4384,
													"name": "PUSH",
													"source": 10,
													"value": "24"
												},
												{
													"begin": 4366,
													"end": 4384,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 4366,
													"end": 4384,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 4359,
													"end": 4389,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 4425,
													"end": 4458,
													"name": "PUSH",
													"source": 10,
													"value": "496E697469616C20737570706C79206D75737420626520706F73697469766500"
												},
												{
													"begin": 4405,
													"end": 4423,
													"name": "PUSH",
													"source": 10,
													"value": "44"
												},
												{
													"begin": 4405,
													"end": 4423,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 4405,
													"end": 4423,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 4398,
													"end": 4459,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 4476,
													"end": 4494,
													"name": "PUSH",
													"source": 10,
													"value": "64"
												},
												{
													"begin": 4476,
													"end": 4494,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 1263,
													"end": 1325,
													"modifierDepth": 2,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "13"
												},
												{
													"begin": 4145,
													"end": 4500,
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 1263,
													"end": 1325,
													"modifierDepth": 2,
													"name": "tag",
													"source": 9,
													"value": "24"
												},
												{
													"begin": 1263,
													"end": 1325,
													"modifierDepth": 2,
													"name": "JUMPDEST",
													"source": 9
												},
												{
													"begin": 1381,
													"end": 1400,
													"modifierDepth": 2,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "27"
												},
												{
													"begin": 1387,
													"end": 1400,
													"name": "DUP3",
													"source": 9
												},
												{
													"begin": 1381,
													"end": 1383,
													"modifierDepth": 2,
													"name": "PUSH",
													"source": 9,
													"value": "A"
												},
												{
													"begin": 1381,
													"end": 1400,
													"modifierDepth": 2,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "28"
												},
												{
													"begin": 1381,
													"end": 1400,
													"jumpType": "[in]",
													"modifierDepth": 2,
													"name": "JUMP",
													"source": 9
												},
												{
													"begin": 1381,
													"end": 1400,
													"modifierDepth": 2,
													"name": "tag",
													"source": 9,
													"value": "27"
												},
												{
													"begin": 1381,
													"end": 1400,
													"modifierDepth": 2,
													"name": "JUMPDEST",
													"source": 9
												},
												{
													"begin": 1360,
													"end": 1401,
													"modifierDepth": 2,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "29"
												},
												{
													"begin": 1360,
													"end": 1401,
													"name": "SWAP1",
													"source": 9
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "NOT",
													"source": -1
												},
												{
													"begin": 1360,
													"end": 1401,
													"modifierDepth": 2,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "30"
												},
												{
													"begin": 1360,
													"end": 1401,
													"jumpType": "[in]",
													"modifierDepth": 2,
													"name": "JUMP",
													"source": 9
												},
												{
													"begin": 1360,
													"end": 1401,
													"modifierDepth": 2,
													"name": "tag",
													"source": 9,
													"value": "29"
												},
												{
													"begin": 1360,
													"end": 1401,
													"modifierDepth": 2,
													"name": "JUMPDEST",
													"source": 9
												},
												{
													"begin": 1343,
													"end": 1356,
													"modifierDepth": 2,
													"name": "DUP2",
													"source": 9
												},
												{
													"begin": 1343,
													"end": 1401,
													"modifierDepth": 2,
													"name": "GT",
													"source": 9
												},
												{
													"begin": 1343,
													"end": 1401,
													"modifierDepth": 2,
													"name": "ISZERO",
													"source": 9
												},
												{
													"begin": 1335,
													"end": 1422,
													"modifierDepth": 2,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "31"
												},
												{
													"begin": 1335,
													"end": 1422,
													"modifierDepth": 2,
													"name": "JUMPI",
													"source": 9
												},
												{
													"begin": 1335,
													"end": 1422,
													"modifierDepth": 2,
													"name": "PUSH",
													"source": 9,
													"value": "40"
												},
												{
													"begin": 1335,
													"end": 1422,
													"name": "MLOAD",
													"source": 9
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "461BCD"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E5"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 1335,
													"end": 1422,
													"name": "DUP2",
													"source": 9
												},
												{
													"begin": 1335,
													"end": 1422,
													"name": "MSTORE",
													"source": 9
												},
												{
													"begin": 6444,
													"end": 6446,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 1335,
													"end": 1422,
													"modifierDepth": 2,
													"name": "PUSH",
													"source": 9,
													"value": "4"
												},
												{
													"begin": 1335,
													"end": 1422,
													"name": "DUP3",
													"source": 9
												},
												{
													"begin": 1335,
													"end": 1422,
													"modifierDepth": 2,
													"name": "ADD",
													"source": 9
												},
												{
													"begin": 6426,
													"end": 6447,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 6483,
													"end": 6485,
													"name": "PUSH",
													"source": 10,
													"value": "10"
												},
												{
													"begin": 6463,
													"end": 6481,
													"name": "PUSH",
													"source": 10,
													"value": "24"
												},
												{
													"begin": 6463,
													"end": 6481,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 6463,
													"end": 6481,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 6456,
													"end": 6486,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "537570706C7920746F6F206C61726765"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "80"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 6502,
													"end": 6520,
													"name": "PUSH",
													"source": 10,
													"value": "44"
												},
												{
													"begin": 6502,
													"end": 6520,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 6502,
													"end": 6520,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 6495,
													"end": 6541,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 6558,
													"end": 6576,
													"name": "PUSH",
													"source": 10,
													"value": "64"
												},
												{
													"begin": 6558,
													"end": 6576,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 1335,
													"end": 1422,
													"modifierDepth": 2,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "13"
												},
												{
													"begin": 6242,
													"end": 6582,
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 1335,
													"end": 1422,
													"modifierDepth": 2,
													"name": "tag",
													"source": 9,
													"value": "31"
												},
												{
													"begin": 1335,
													"end": 1422,
													"modifierDepth": 2,
													"name": "JUMPDEST",
													"source": 9
												},
												{
													"begin": 1433,
													"end": 1442,
													"modifierDepth": 2,
													"name": "PUSH",
													"source": 9,
													"value": "5"
												},
												{
													"begin": 1433,
													"end": 1458,
													"name": "DUP1",
													"source": 9
												},
												{
													"begin": 1433,
													"end": 1458,
													"name": "SLOAD",
													"source": 9
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "FF"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A8"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "NOT",
													"source": -1
												},
												{
													"begin": 1433,
													"end": 1458,
													"modifierDepth": 2,
													"name": "AND",
													"source": 9
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A8"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 1433,
													"end": 1458,
													"modifierDepth": 2,
													"name": "PUSH",
													"source": 9,
													"value": "FF"
												},
												{
													"begin": 1433,
													"end": 1458,
													"name": "DUP6",
													"source": 9
												},
												{
													"begin": 1433,
													"end": 1458,
													"modifierDepth": 2,
													"name": "AND",
													"source": 9
												},
												{
													"begin": 1433,
													"end": 1458,
													"modifierDepth": 2,
													"name": "MUL",
													"source": 9
												},
												{
													"begin": 1433,
													"end": 1458,
													"modifierDepth": 2,
													"name": "OR",
													"source": 9
												},
												{
													"begin": 1433,
													"end": 1458,
													"name": "SWAP1",
													"source": 9
												},
												{
													"begin": 1433,
													"end": 1458,
													"name": "SSTORE",
													"source": 9
												},
												{
													"begin": 1527,
													"end": 1585,
													"modifierDepth": 2,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "34"
												},
												{
													"begin": 1533,
													"end": 1545,
													"name": "DUP4",
													"source": 9
												},
												{
													"begin": 1564,
													"end": 1583,
													"modifierDepth": 2,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "35"
												},
												{
													"begin": 1433,
													"end": 1458,
													"name": "DUP5",
													"source": 9
												},
												{
													"begin": 1564,
													"end": 1566,
													"modifierDepth": 2,
													"name": "PUSH",
													"source": 9,
													"value": "A"
												},
												{
													"begin": 1564,
													"end": 1583,
													"modifierDepth": 2,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "28"
												},
												{
													"begin": 1564,
													"end": 1583,
													"jumpType": "[in]",
													"modifierDepth": 2,
													"name": "JUMP",
													"source": 9
												},
												{
													"begin": 1564,
													"end": 1583,
													"modifierDepth": 2,
													"name": "tag",
													"source": 9,
													"value": "35"
												},
												{
													"begin": 1564,
													"end": 1583,
													"modifierDepth": 2,
													"name": "JUMPDEST",
													"source": 9
												},
												{
													"begin": 1547,
													"end": 1584,
													"modifierDepth": 2,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "36"
												},
												{
													"begin": 1547,
													"end": 1584,
													"name": "SWAP1",
													"source": 9
												},
												{
													"begin": 1547,
													"end": 1560,
													"name": "DUP5",
													"source": 9
												},
												{
													"begin": 1547,
													"end": 1584,
													"modifierDepth": 2,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "37"
												},
												{
													"begin": 1547,
													"end": 1584,
													"jumpType": "[in]",
													"modifierDepth": 2,
													"name": "JUMP",
													"source": 9
												},
												{
													"begin": 1547,
													"end": 1584,
													"modifierDepth": 2,
													"name": "tag",
													"source": 9,
													"value": "36"
												},
												{
													"begin": 1547,
													"end": 1584,
													"modifierDepth": 2,
													"name": "JUMPDEST",
													"source": 9
												},
												{
													"begin": 1527,
													"end": 1532,
													"modifierDepth": 2,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "38"
												},
												{
													"begin": 1527,
													"end": 1585,
													"jumpType": "[in]",
													"modifierDepth": 2,
													"name": "JUMP",
													"source": 9
												},
												{
													"begin": 1527,
													"end": 1585,
													"modifierDepth": 2,
													"name": "tag",
													"source": 9,
													"value": "34"
												},
												{
													"begin": 1527,
													"end": 1585,
													"modifierDepth": 2,
													"name": "JUMPDEST",
													"source": 9
												},
												{
													"begin": 950,
													"end": 1592,
													"name": "POP",
													"source": 9
												},
												{
													"begin": 950,
													"end": 1592,
													"name": "POP",
													"source": 9
												},
												{
													"begin": 950,
													"end": 1592,
													"name": "POP",
													"source": 9
												},
												{
													"begin": 459,
													"end": 2753,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "77"
												},
												{
													"begin": 459,
													"end": 2753,
													"name": "JUMP",
													"source": 9
												},
												{
													"begin": 2912,
													"end": 3099,
													"name": "tag",
													"source": 0,
													"value": "16"
												},
												{
													"begin": 2912,
													"end": 3099,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "PUSH",
													"source": 0,
													"value": "5"
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "SLOAD",
													"source": 0
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "DUP4",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "AND",
													"source": 0
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "NOT",
													"source": -1
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "DUP4",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "OR",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "SWAP4",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "SSTORE",
													"source": 0
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "DUP3",
													"source": 0
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "PUSH",
													"source": 0,
													"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 2985,
													"end": 3001,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 2985,
													"end": 3001,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "LOG3",
													"source": 0
												},
												{
													"begin": 2975,
													"end": 3099,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 2912,
													"end": 3099,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 2912,
													"end": 3099,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 7362,
													"end": 7570,
													"name": "tag",
													"source": 2,
													"value": "38"
												},
												{
													"begin": 7362,
													"end": 7570,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 7432,
													"end": 7453,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 7432,
													"end": 7453,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 7428,
													"end": 7519,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "42"
												},
												{
													"begin": 7428,
													"end": 7519,
													"name": "JUMPI",
													"source": 2
												},
												{
													"begin": 7505,
													"end": 7506,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 7476,
													"end": 7508,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 7476,
													"end": 7508,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "EC442F05"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 7476,
													"end": 7508,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 7476,
													"end": 7508,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 7476,
													"end": 7508,
													"name": "PUSH",
													"source": 2,
													"value": "4"
												},
												{
													"begin": 7476,
													"end": 7508,
													"name": "ADD",
													"source": 2
												},
												{
													"begin": 7476,
													"end": 7508,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "13"
												},
												{
													"begin": 7476,
													"end": 7508,
													"name": "SWAP2",
													"source": 2
												},
												{
													"begin": 7476,
													"end": 7508,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 7476,
													"end": 7508,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "14"
												},
												{
													"begin": 7476,
													"end": 7508,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 7428,
													"end": 7519,
													"name": "tag",
													"source": 2,
													"value": "42"
												},
												{
													"begin": 7428,
													"end": 7519,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 7528,
													"end": 7563,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "44"
												},
												{
													"begin": 7544,
													"end": 7545,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 7548,
													"end": 7555,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 7557,
													"end": 7562,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 7528,
													"end": 7535,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "45"
												},
												{
													"begin": 7528,
													"end": 7563,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 7528,
													"end": 7563,
													"name": "tag",
													"source": 2,
													"value": "44"
												},
												{
													"begin": 7528,
													"end": 7563,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 7362,
													"end": 7570,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 7362,
													"end": 7570,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 7362,
													"end": 7570,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 2584,
													"end": 2751,
													"name": "tag",
													"source": 9,
													"value": "45"
												},
												{
													"begin": 2584,
													"end": 2751,
													"name": "JUMPDEST",
													"source": 9
												},
												{
													"begin": 1350,
													"end": 1369,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "47"
												},
												{
													"begin": 1350,
													"end": 1367,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "48"
												},
												{
													"begin": 1350,
													"end": 1369,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 1350,
													"end": 1369,
													"name": "tag",
													"source": 7,
													"value": "47"
												},
												{
													"begin": 1350,
													"end": 1369,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 2714,
													"end": 2744,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "50"
												},
												{
													"begin": 2728,
													"end": 2732,
													"name": "DUP4",
													"source": 9
												},
												{
													"begin": 2734,
													"end": 2736,
													"name": "DUP4",
													"source": 9
												},
												{
													"begin": 2738,
													"end": 2743,
													"name": "DUP4",
													"source": 9
												},
												{
													"begin": 2714,
													"end": 2727,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "51"
												},
												{
													"begin": 2714,
													"end": 2744,
													"jumpType": "[in]",
													"modifierDepth": 1,
													"name": "JUMP",
													"source": 9
												},
												{
													"begin": 2714,
													"end": 2744,
													"modifierDepth": 1,
													"name": "tag",
													"source": 9,
													"value": "50"
												},
												{
													"begin": 2714,
													"end": 2744,
													"modifierDepth": 1,
													"name": "JUMPDEST",
													"source": 9
												},
												{
													"begin": 2584,
													"end": 2751,
													"name": "POP",
													"source": 9
												},
												{
													"begin": 2584,
													"end": 2751,
													"name": "POP",
													"source": 9
												},
												{
													"begin": 2584,
													"end": 2751,
													"name": "POP",
													"source": 9
												},
												{
													"begin": 2584,
													"end": 2751,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 9
												},
												{
													"begin": 1878,
													"end": 2006,
													"name": "tag",
													"source": 7,
													"value": "48"
												},
												{
													"begin": 1878,
													"end": 2006,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 1943,
													"end": 1951,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "53"
												},
												{
													"begin": 1796,
													"end": 1803,
													"name": "PUSH",
													"source": 7,
													"value": "5"
												},
												{
													"begin": 1796,
													"end": 1803,
													"name": "SLOAD",
													"source": 7
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 1796,
													"end": 1803,
													"name": "SWAP1",
													"source": 7
												},
												{
													"begin": 1796,
													"end": 1803,
													"name": "DIV",
													"source": 7
												},
												{
													"begin": 1796,
													"end": 1803,
													"name": "PUSH",
													"source": 7,
													"value": "FF"
												},
												{
													"begin": 1796,
													"end": 1803,
													"name": "AND",
													"source": 7
												},
												{
													"begin": 1796,
													"end": 1803,
													"name": "SWAP1",
													"source": 7
												},
												{
													"begin": 1726,
													"end": 1810,
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 1943,
													"end": 1951,
													"name": "tag",
													"source": 7,
													"value": "53"
												},
												{
													"begin": 1943,
													"end": 1951,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 1939,
													"end": 2000,
													"name": "ISZERO",
													"source": 7
												},
												{
													"begin": 1939,
													"end": 2000,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "55"
												},
												{
													"begin": 1939,
													"end": 2000,
													"name": "JUMPI",
													"source": 7
												},
												{
													"begin": 1974,
													"end": 1989,
													"name": "PUSH",
													"source": 7,
													"value": "40"
												},
												{
													"begin": 1974,
													"end": 1989,
													"name": "MLOAD",
													"source": 7
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "D93C0665"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 1974,
													"end": 1989,
													"name": "DUP2",
													"source": 7
												},
												{
													"begin": 1974,
													"end": 1989,
													"name": "MSTORE",
													"source": 7
												},
												{
													"begin": 1974,
													"end": 1989,
													"name": "PUSH",
													"source": 7,
													"value": "4"
												},
												{
													"begin": 1974,
													"end": 1989,
													"name": "ADD",
													"source": 7
												},
												{
													"begin": 1974,
													"end": 1989,
													"name": "PUSH",
													"source": 7,
													"value": "40"
												},
												{
													"begin": 1974,
													"end": 1989,
													"name": "MLOAD",
													"source": 7
												},
												{
													"begin": 1974,
													"end": 1989,
													"name": "DUP1",
													"source": 7
												},
												{
													"begin": 1974,
													"end": 1989,
													"name": "SWAP2",
													"source": 7
												},
												{
													"begin": 1974,
													"end": 1989,
													"name": "SUB",
													"source": 7
												},
												{
													"begin": 1974,
													"end": 1989,
													"name": "SWAP1",
													"source": 7
												},
												{
													"begin": 1974,
													"end": 1989,
													"name": "REVERT",
													"source": 7
												},
												{
													"begin": 1939,
													"end": 2000,
													"name": "tag",
													"source": 7,
													"value": "55"
												},
												{
													"begin": 1939,
													"end": 2000,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 1878,
													"end": 2006,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 5912,
													"end": 7019,
													"name": "tag",
													"source": 2,
													"value": "51"
												},
												{
													"begin": 5912,
													"end": 7019,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 6001,
													"end": 6019,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 6001,
													"end": 6019,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 5997,
													"end": 6537,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "57"
												},
												{
													"begin": 5997,
													"end": 6537,
													"name": "JUMPI",
													"source": 2
												},
												{
													"begin": 6153,
													"end": 6158,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 6137,
													"end": 6149,
													"name": "PUSH",
													"source": 2,
													"value": "2"
												},
												{
													"begin": 6137,
													"end": 6149,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 6137,
													"end": 6158,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 6137,
													"end": 6158,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 6137,
													"end": 6158,
													"name": "SLOAD",
													"source": 2
												},
												{
													"begin": 6137,
													"end": 6158,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "58"
												},
												{
													"begin": 6137,
													"end": 6158,
													"name": "SWAP2",
													"source": 2
												},
												{
													"begin": 6137,
													"end": 6158,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 6137,
													"end": 6158,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "59"
												},
												{
													"begin": 6137,
													"end": 6158,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 6137,
													"end": 6158,
													"name": "tag",
													"source": 2,
													"value": "58"
												},
												{
													"begin": 6137,
													"end": 6158,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 6137,
													"end": 6158,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 6137,
													"end": 6158,
													"name": "SWAP2",
													"source": 2
												},
												{
													"begin": 6137,
													"end": 6158,
													"name": "SSTORE",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 5997,
													"end": 6537,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "60"
												},
												{
													"begin": 5997,
													"end": 6537,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 5997,
													"end": 6537,
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 5997,
													"end": 6537,
													"name": "tag",
													"source": 2,
													"value": "57"
												},
												{
													"begin": 5997,
													"end": 6537,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 6211,
													"end": 6226,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 6211,
													"end": 6226,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 6189,
													"end": 6208,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 6211,
													"end": 6226,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 6211,
													"end": 6226,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 6211,
													"end": 6226,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 6211,
													"end": 6226,
													"name": "PUSH",
													"source": 2,
													"value": "20"
												},
												{
													"begin": 6211,
													"end": 6226,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 6211,
													"end": 6226,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 6211,
													"end": 6226,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 6211,
													"end": 6226,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 6211,
													"end": 6226,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 6211,
													"end": 6226,
													"name": "KECCAK256",
													"source": 2
												},
												{
													"begin": 6211,
													"end": 6226,
													"name": "SLOAD",
													"source": 2
												},
												{
													"begin": 6244,
													"end": 6263,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 6244,
													"end": 6263,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 6244,
													"end": 6263,
													"name": "LT",
													"source": 2
												},
												{
													"begin": 6240,
													"end": 6355,
													"name": "ISZERO",
													"source": 2
												},
												{
													"begin": 6240,
													"end": 6355,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "61"
												},
												{
													"begin": 6240,
													"end": 6355,
													"name": "JUMPI",
													"source": 2
												},
												{
													"begin": 6290,
													"end": 6340,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 6290,
													"end": 6340,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "391434E3"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E2"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 6290,
													"end": 6340,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 6290,
													"end": 6340,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 7110,
													"end": 7142,
													"name": "DUP6",
													"source": 10
												},
												{
													"begin": 7110,
													"end": 7142,
													"name": "AND",
													"source": 10
												},
												{
													"begin": 6290,
													"end": 6340,
													"name": "PUSH",
													"source": 2,
													"value": "4"
												},
												{
													"begin": 6290,
													"end": 6340,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 6290,
													"end": 6340,
													"name": "ADD",
													"source": 2
												},
												{
													"begin": 7092,
													"end": 7143,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 7159,
													"end": 7177,
													"name": "PUSH",
													"source": 10,
													"value": "24"
												},
												{
													"begin": 7159,
													"end": 7177,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 7159,
													"end": 7177,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 7152,
													"end": 7186,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 7152,
													"end": 7186,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 7152,
													"end": 7186,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 7202,
													"end": 7220,
													"name": "PUSH",
													"source": 10,
													"value": "44"
												},
												{
													"begin": 7202,
													"end": 7220,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 7202,
													"end": 7220,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 7195,
													"end": 7229,
													"name": "DUP4",
													"source": 10
												},
												{
													"begin": 7195,
													"end": 7229,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 7195,
													"end": 7229,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 7065,
													"end": 7083,
													"name": "PUSH",
													"source": 10,
													"value": "64"
												},
												{
													"begin": 7065,
													"end": 7083,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 6290,
													"end": 6340,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "13"
												},
												{
													"begin": 6890,
													"end": 7235,
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 6240,
													"end": 6355,
													"name": "tag",
													"source": 2,
													"value": "61"
												},
												{
													"begin": 6240,
													"end": 6355,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 6475,
													"end": 6490,
													"name": "DUP5",
													"source": 2
												},
												{
													"begin": 6475,
													"end": 6490,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 6475,
													"end": 6484,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 6475,
													"end": 6490,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 6475,
													"end": 6490,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 6475,
													"end": 6490,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 6475,
													"end": 6490,
													"name": "PUSH",
													"source": 2,
													"value": "20"
												},
												{
													"begin": 6475,
													"end": 6490,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 6475,
													"end": 6490,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 6475,
													"end": 6490,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 6475,
													"end": 6490,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 6475,
													"end": 6490,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 6475,
													"end": 6490,
													"name": "KECCAK256",
													"source": 2
												},
												{
													"begin": 6493,
													"end": 6512,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 6493,
													"end": 6512,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 6493,
													"end": 6512,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 6493,
													"end": 6512,
													"name": "SUB",
													"source": 2
												},
												{
													"begin": 6475,
													"end": 6512,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 6475,
													"end": 6512,
													"name": "SSTORE",
													"source": 2
												},
												{
													"begin": 5997,
													"end": 6537,
													"name": "tag",
													"source": 2,
													"value": "60"
												},
												{
													"begin": 5997,
													"end": 6537,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 6551,
													"end": 6567,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 6551,
													"end": 6567,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 6547,
													"end": 6972,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "64"
												},
												{
													"begin": 6547,
													"end": 6972,
													"name": "JUMPI",
													"source": 2
												},
												{
													"begin": 6714,
													"end": 6726,
													"name": "PUSH",
													"source": 2,
													"value": "2"
												},
												{
													"begin": 6714,
													"end": 6735,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 6714,
													"end": 6735,
													"name": "SLOAD",
													"source": 2
												},
												{
													"begin": 6714,
													"end": 6735,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 6714,
													"end": 6735,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 6714,
													"end": 6735,
													"name": "SUB",
													"source": 2
												},
												{
													"begin": 6714,
													"end": 6735,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 6714,
													"end": 6735,
													"name": "SSTORE",
													"source": 2
												},
												{
													"begin": 6547,
													"end": 6972,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "65"
												},
												{
													"begin": 6547,
													"end": 6972,
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 6547,
													"end": 6972,
													"name": "tag",
													"source": 2,
													"value": "64"
												},
												{
													"begin": 6547,
													"end": 6972,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 6925,
													"end": 6938,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 6925,
													"end": 6938,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 6925,
													"end": 6934,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 6925,
													"end": 6938,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 6925,
													"end": 6938,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 6925,
													"end": 6938,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 6925,
													"end": 6938,
													"name": "PUSH",
													"source": 2,
													"value": "20"
												},
												{
													"begin": 6925,
													"end": 6938,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 6925,
													"end": 6938,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 6925,
													"end": 6938,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 6925,
													"end": 6938,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 6925,
													"end": 6938,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 6925,
													"end": 6938,
													"name": "KECCAK256",
													"source": 2
												},
												{
													"begin": 6925,
													"end": 6947,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 6925,
													"end": 6947,
													"name": "SLOAD",
													"source": 2
												},
												{
													"begin": 6925,
													"end": 6947,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 6925,
													"end": 6947,
													"name": "ADD",
													"source": 2
												},
												{
													"begin": 6925,
													"end": 6947,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 6925,
													"end": 6947,
													"name": "SSTORE",
													"source": 2
												},
												{
													"begin": 6547,
													"end": 6972,
													"name": "tag",
													"source": 2,
													"value": "65"
												},
												{
													"begin": 6547,
													"end": 6972,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 7002,
													"end": 7004,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 6987,
													"end": 7012,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 6996,
													"end": 7000,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 6987,
													"end": 7012,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 6987,
													"end": 7012,
													"name": "PUSH",
													"source": 2,
													"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
												},
												{
													"begin": 7006,
													"end": 7011,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 6987,
													"end": 7012,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 6987,
													"end": 7012,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": 6987,
													"end": 7012,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "66"
												},
												{
													"begin": 6987,
													"end": 7012,
													"name": "SWAP2",
													"source": 2
												},
												{
													"begin": 7386,
													"end": 7411,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 7386,
													"end": 7411,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 7374,
													"end": 7376,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 7359,
													"end": 7377,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 7359,
													"end": 7377,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 7240,
													"end": 7417,
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 6987,
													"end": 7012,
													"name": "tag",
													"source": 2,
													"value": "66"
												},
												{
													"begin": 6987,
													"end": 7012,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 6987,
													"end": 7012,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 6987,
													"end": 7012,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": 6987,
													"end": 7012,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 6987,
													"end": 7012,
													"name": "SWAP2",
													"source": 2
												},
												{
													"begin": 6987,
													"end": 7012,
													"name": "SUB",
													"source": 2
												},
												{
													"begin": 6987,
													"end": 7012,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 6987,
													"end": 7012,
													"name": "LOG3",
													"source": 2
												},
												{
													"begin": 5912,
													"end": 7019,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 5912,
													"end": 7019,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 5912,
													"end": 7019,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 5912,
													"end": 7019,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 14,
													"end": 523,
													"name": "tag",
													"source": 10,
													"value": "3"
												},
												{
													"begin": 14,
													"end": 523,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 100,
													"end": 106,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 108,
													"end": 114,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 116,
													"end": 122,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 169,
													"end": 171,
													"name": "PUSH",
													"source": 10,
													"value": "60"
												},
												{
													"begin": 157,
													"end": 166,
													"name": "DUP5",
													"source": 10
												},
												{
													"begin": 148,
													"end": 155,
													"name": "DUP7",
													"source": 10
												},
												{
													"begin": 144,
													"end": 167,
													"name": "SUB",
													"source": 10
												},
												{
													"begin": 140,
													"end": 172,
													"name": "SLT",
													"source": 10
												},
												{
													"begin": 137,
													"end": 189,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 137,
													"end": 189,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "79"
												},
												{
													"begin": 137,
													"end": 189,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 185,
													"end": 186,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 182,
													"end": 183,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 175,
													"end": 187,
													"name": "REVERT",
													"source": 10
												},
												{
													"begin": 137,
													"end": 189,
													"name": "tag",
													"source": 10,
													"value": "79"
												},
												{
													"begin": 137,
													"end": 189,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 211,
													"end": 227,
													"name": "DUP4",
													"source": 10
												},
												{
													"begin": 211,
													"end": 227,
													"name": "MLOAD",
													"source": 10
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 256,
													"end": 287,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 256,
													"end": 287,
													"name": "AND",
													"source": 10
												},
												{
													"begin": 246,
													"end": 288,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 246,
													"end": 288,
													"name": "EQ",
													"source": 10
												},
												{
													"begin": 236,
													"end": 306,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "80"
												},
												{
													"begin": 236,
													"end": 306,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 302,
													"end": 303,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 299,
													"end": 300,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 292,
													"end": 304,
													"name": "REVERT",
													"source": 10
												},
												{
													"begin": 236,
													"end": 306,
													"name": "tag",
													"source": 10,
													"value": "80"
												},
												{
													"begin": 236,
													"end": 306,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 375,
													"end": 377,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 360,
													"end": 378,
													"name": "DUP6",
													"source": 10
												},
												{
													"begin": 360,
													"end": 378,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 354,
													"end": 379,
													"name": "MLOAD",
													"source": 10
												},
												{
													"begin": 325,
													"end": 330,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 325,
													"end": 330,
													"name": "SWAP4",
													"source": 10
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 423,
													"end": 427,
													"name": "PUSH",
													"source": 10,
													"value": "FF"
												},
												{
													"begin": 410,
													"end": 428,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 410,
													"end": 428,
													"name": "AND",
													"source": 10
												},
												{
													"begin": 398,
													"end": 429,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 398,
													"end": 429,
													"name": "EQ",
													"source": 10
												},
												{
													"begin": 388,
													"end": 447,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "81"
												},
												{
													"begin": 388,
													"end": 447,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 443,
													"end": 444,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 440,
													"end": 441,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 433,
													"end": 445,
													"name": "REVERT",
													"source": 10
												},
												{
													"begin": 388,
													"end": 447,
													"name": "tag",
													"source": 10,
													"value": "81"
												},
												{
													"begin": 388,
													"end": 447,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 466,
													"end": 473,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 456,
													"end": 473,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": 456,
													"end": 473,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 456,
													"end": 473,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 513,
													"end": 515,
													"name": "PUSH",
													"source": 10,
													"value": "40"
												},
												{
													"begin": 502,
													"end": 511,
													"name": "DUP5",
													"source": 10
												},
												{
													"begin": 498,
													"end": 516,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 492,
													"end": 517,
													"name": "MLOAD",
													"source": 10
												},
												{
													"begin": 482,
													"end": 517,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 482,
													"end": 517,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 14,
													"end": 523,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": 14,
													"end": 523,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 14,
													"end": 523,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": 14,
													"end": 523,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 14,
													"end": 523,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": 14,
													"end": 523,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 528,
													"end": 655,
													"name": "tag",
													"source": 10,
													"value": "69"
												},
												{
													"begin": 528,
													"end": 655,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 589,
													"end": 599,
													"name": "PUSH",
													"source": 10,
													"value": "4E487B71"
												},
												{
													"begin": 584,
													"end": 587,
													"name": "PUSH",
													"source": 10,
													"value": "E0"
												},
												{
													"begin": 580,
													"end": 600,
													"name": "SHL",
													"source": 10
												},
												{
													"begin": 577,
													"end": 578,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 570,
													"end": 601,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 620,
													"end": 624,
													"name": "PUSH",
													"source": 10,
													"value": "41"
												},
												{
													"begin": 617,
													"end": 618,
													"name": "PUSH",
													"source": 10,
													"value": "4"
												},
												{
													"begin": 610,
													"end": 625,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 644,
													"end": 648,
													"name": "PUSH",
													"source": 10,
													"value": "24"
												},
												{
													"begin": 641,
													"end": 642,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 634,
													"end": 649,
													"name": "REVERT",
													"source": 10
												},
												{
													"begin": 660,
													"end": 1040,
													"name": "tag",
													"source": 10,
													"value": "70"
												},
												{
													"begin": 660,
													"end": 1040,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 739,
													"end": 740,
													"name": "PUSH",
													"source": 10,
													"value": "1"
												},
												{
													"begin": 735,
													"end": 747,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 735,
													"end": 747,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 735,
													"end": 747,
													"name": "SHR",
													"source": 10
												},
												{
													"begin": 735,
													"end": 747,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 782,
													"end": 794,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 782,
													"end": 794,
													"name": "AND",
													"source": 10
												},
												{
													"begin": 782,
													"end": 794,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 803,
													"end": 864,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "84"
												},
												{
													"begin": 803,
													"end": 864,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 857,
													"end": 861,
													"name": "PUSH",
													"source": 10,
													"value": "7F"
												},
												{
													"begin": 849,
													"end": 855,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 845,
													"end": 862,
													"name": "AND",
													"source": 10
												},
												{
													"begin": 835,
													"end": 862,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 835,
													"end": 862,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 803,
													"end": 864,
													"name": "tag",
													"source": 10,
													"value": "84"
												},
												{
													"begin": 803,
													"end": 864,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 910,
													"end": 912,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 902,
													"end": 908,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 899,
													"end": 913,
													"name": "LT",
													"source": 10
												},
												{
													"begin": 879,
													"end": 897,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 876,
													"end": 914,
													"name": "SUB",
													"source": 10
												},
												{
													"begin": 873,
													"end": 1034,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "85"
												},
												{
													"begin": 873,
													"end": 1034,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 956,
													"end": 966,
													"name": "PUSH",
													"source": 10,
													"value": "4E487B71"
												},
												{
													"begin": 951,
													"end": 954,
													"name": "PUSH",
													"source": 10,
													"value": "E0"
												},
												{
													"begin": 947,
													"end": 967,
													"name": "SHL",
													"source": 10
												},
												{
													"begin": 944,
													"end": 945,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 937,
													"end": 968,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 991,
													"end": 995,
													"name": "PUSH",
													"source": 10,
													"value": "22"
												},
												{
													"begin": 988,
													"end": 989,
													"name": "PUSH",
													"source": 10,
													"value": "4"
												},
												{
													"begin": 981,
													"end": 996,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 1019,
													"end": 1023,
													"name": "PUSH",
													"source": 10,
													"value": "24"
												},
												{
													"begin": 1016,
													"end": 1017,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 1009,
													"end": 1024,
													"name": "REVERT",
													"source": 10
												},
												{
													"begin": 873,
													"end": 1034,
													"name": "tag",
													"source": 10,
													"value": "85"
												},
												{
													"begin": 873,
													"end": 1034,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 873,
													"end": 1034,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 660,
													"end": 1040,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 660,
													"end": 1040,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 660,
													"end": 1040,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 660,
													"end": 1040,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 1171,
													"end": 1716,
													"name": "tag",
													"source": 10,
													"value": "72"
												},
												{
													"begin": 1171,
													"end": 1716,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 1273,
													"end": 1275,
													"name": "PUSH",
													"source": 10,
													"value": "1F"
												},
												{
													"begin": 1268,
													"end": 1271,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 1265,
													"end": 1276,
													"name": "GT",
													"source": 10
												},
												{
													"begin": 1262,
													"end": 1710,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 1262,
													"end": 1710,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "50"
												},
												{
													"begin": 1262,
													"end": 1710,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 1309,
													"end": 1310,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 1334,
													"end": 1339,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 1330,
													"end": 1332,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 1323,
													"end": 1340,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 1379,
													"end": 1383,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 1375,
													"end": 1377,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 1365,
													"end": 1384,
													"name": "KECCAK256",
													"source": 10
												},
												{
													"begin": 1449,
													"end": 1451,
													"name": "PUSH",
													"source": 10,
													"value": "1F"
												},
												{
													"begin": 1437,
													"end": 1447,
													"name": "DUP6",
													"source": 10
												},
												{
													"begin": 1433,
													"end": 1452,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 1430,
													"end": 1431,
													"name": "PUSH",
													"source": 10,
													"value": "5"
												},
												{
													"begin": 1426,
													"end": 1453,
													"name": "SHR",
													"source": 10
												},
												{
													"begin": 1420,
													"end": 1424,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 1416,
													"end": 1454,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 1485,
													"end": 1489,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 1473,
													"end": 1483,
													"name": "DUP7",
													"source": 10
												},
												{
													"begin": 1470,
													"end": 1490,
													"name": "LT",
													"source": 10
												},
												{
													"begin": 1467,
													"end": 1514,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 1467,
													"end": 1514,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "89"
												},
												{
													"begin": 1467,
													"end": 1514,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 1508,
													"end": 1512,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 1467,
													"end": 1514,
													"name": "tag",
													"source": 10,
													"value": "89"
												},
												{
													"begin": 1467,
													"end": 1514,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 1563,
													"end": 1565,
													"name": "PUSH",
													"source": 10,
													"value": "1F"
												},
												{
													"begin": 1558,
													"end": 1561,
													"name": "DUP6",
													"source": 10
												},
												{
													"begin": 1554,
													"end": 1566,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 1551,
													"end": 1552,
													"name": "PUSH",
													"source": 10,
													"value": "5"
												},
												{
													"begin": 1547,
													"end": 1567,
													"name": "SHR",
													"source": 10
												},
												{
													"begin": 1541,
													"end": 1545,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 1537,
													"end": 1568,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 1527,
													"end": 1568,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 1527,
													"end": 1568,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 1618,
													"end": 1700,
													"name": "tag",
													"source": 10,
													"value": "90"
												},
												{
													"begin": 1618,
													"end": 1700,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 1636,
													"end": 1638,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 1629,
													"end": 1634,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 1626,
													"end": 1639,
													"name": "LT",
													"source": 10
												},
												{
													"begin": 1618,
													"end": 1700,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 1618,
													"end": 1700,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "92"
												},
												{
													"begin": 1618,
													"end": 1700,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 1681,
													"end": 1698,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 1681,
													"end": 1698,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 1681,
													"end": 1698,
													"name": "SSTORE",
													"source": 10
												},
												{
													"begin": 1662,
													"end": 1663,
													"name": "PUSH",
													"source": 10,
													"value": "1"
												},
												{
													"begin": 1651,
													"end": 1664,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 1618,
													"end": 1700,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "90"
												},
												{
													"begin": 1618,
													"end": 1700,
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 1618,
													"end": 1700,
													"name": "tag",
													"source": 10,
													"value": "92"
												},
												{
													"begin": 1618,
													"end": 1700,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 1622,
													"end": 1625,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 1622,
													"end": 1625,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 1622,
													"end": 1625,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 1171,
													"end": 1716,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 1171,
													"end": 1716,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 1171,
													"end": 1716,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 1171,
													"end": 1716,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 1892,
													"end": 3244,
													"name": "tag",
													"source": 10,
													"value": "9"
												},
												{
													"begin": 1892,
													"end": 3244,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 2012,
													"end": 2022,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 2012,
													"end": 2022,
													"name": "MLOAD",
													"source": 10
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "40"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 2034,
													"end": 2064,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 2034,
													"end": 2064,
													"name": "GT",
													"source": 10
												},
												{
													"begin": 2031,
													"end": 2087,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 2031,
													"end": 2087,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "96"
												},
												{
													"begin": 2031,
													"end": 2087,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 2067,
													"end": 2085,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "96"
												},
												{
													"begin": 2067,
													"end": 2085,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "69"
												},
												{
													"begin": 2067,
													"end": 2085,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 2067,
													"end": 2085,
													"name": "tag",
													"source": 10,
													"value": "96"
												},
												{
													"begin": 2067,
													"end": 2085,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 2096,
													"end": 2193,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "97"
												},
												{
													"begin": 2186,
													"end": 2192,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 2146,
													"end": 2184,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "98"
												},
												{
													"begin": 2178,
													"end": 2182,
													"name": "DUP5",
													"source": 10
												},
												{
													"begin": 2172,
													"end": 2183,
													"name": "SLOAD",
													"source": 10
												},
												{
													"begin": 2146,
													"end": 2184,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "70"
												},
												{
													"begin": 2146,
													"end": 2184,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 2146,
													"end": 2184,
													"name": "tag",
													"source": 10,
													"value": "98"
												},
												{
													"begin": 2146,
													"end": 2184,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 2140,
													"end": 2144,
													"name": "DUP5",
													"source": 10
												},
												{
													"begin": 2096,
													"end": 2193,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "72"
												},
												{
													"begin": 2096,
													"end": 2193,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 2096,
													"end": 2193,
													"name": "tag",
													"source": 10,
													"value": "97"
												},
												{
													"begin": 2096,
													"end": 2193,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 2248,
													"end": 2252,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 2248,
													"end": 2252,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 2312,
													"end": 2314,
													"name": "PUSH",
													"source": 10,
													"value": "1F"
												},
												{
													"begin": 2301,
													"end": 2315,
													"name": "DUP4",
													"source": 10
												},
												{
													"begin": 2301,
													"end": 2315,
													"name": "GT",
													"source": 10
												},
												{
													"begin": 2329,
													"end": 2330,
													"name": "PUSH",
													"source": 10,
													"value": "1"
												},
												{
													"begin": 2324,
													"end": 2987,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 2324,
													"end": 2987,
													"name": "EQ",
													"source": 10
												},
												{
													"begin": 2324,
													"end": 2987,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "100"
												},
												{
													"begin": 2324,
													"end": 2987,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 3031,
													"end": 3032,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 3048,
													"end": 3054,
													"name": "DUP5",
													"source": 10
												},
												{
													"begin": 3045,
													"end": 3134,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 3045,
													"end": 3134,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "101"
												},
												{
													"begin": 3045,
													"end": 3134,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 3100,
													"end": 3119,
													"name": "DUP6",
													"source": 10
												},
												{
													"begin": 3100,
													"end": 3119,
													"name": "DUP4",
													"source": 10
												},
												{
													"begin": 3100,
													"end": 3119,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 3094,
													"end": 3120,
													"name": "MLOAD",
													"source": 10
												},
												{
													"begin": 3045,
													"end": 3134,
													"name": "tag",
													"source": 10,
													"value": "101"
												},
												{
													"begin": 3045,
													"end": 3134,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "NOT",
													"source": -1
												},
												{
													"begin": 1849,
													"end": 1850,
													"name": "PUSH",
													"source": 10,
													"value": "3"
												},
												{
													"begin": 1845,
													"end": 1856,
													"name": "DUP7",
													"source": 10
												},
												{
													"begin": 1845,
													"end": 1856,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 1845,
													"end": 1856,
													"name": "SHL",
													"source": 10
												},
												{
													"begin": 1841,
													"end": 1865,
													"name": "SHR",
													"source": 10
												},
												{
													"begin": 1837,
													"end": 1866,
													"name": "NOT",
													"source": 10
												},
												{
													"begin": 1827,
													"end": 1867,
													"name": "AND",
													"source": 10
												},
												{
													"begin": 1873,
													"end": 1874,
													"name": "PUSH",
													"source": 10,
													"value": "1"
												},
												{
													"begin": 1869,
													"end": 1880,
													"name": "DUP6",
													"source": 10
												},
												{
													"begin": 1869,
													"end": 1880,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 1869,
													"end": 1880,
													"name": "SHL",
													"source": 10
												},
												{
													"begin": 1824,
													"end": 1881,
													"name": "OR",
													"source": 10
												},
												{
													"begin": 3147,
													"end": 3228,
													"name": "DUP6",
													"source": 10
												},
												{
													"begin": 3147,
													"end": 3228,
													"name": "SSTORE",
													"source": 10
												},
												{
													"begin": 2294,
													"end": 3238,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "92"
												},
												{
													"begin": 2294,
													"end": 3238,
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 2324,
													"end": 2987,
													"name": "tag",
													"source": 10,
													"value": "100"
												},
												{
													"begin": 2324,
													"end": 2987,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 1118,
													"end": 1119,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 1111,
													"end": 1125,
													"name": "DUP6",
													"source": 10
												},
												{
													"begin": 1111,
													"end": 1125,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 1111,
													"end": 1125,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 1155,
													"end": 1159,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 1142,
													"end": 1160,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 1142,
													"end": 1160,
													"name": "KECCAK256",
													"source": 10
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1F"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "NOT",
													"source": -1
												},
												{
													"begin": 2360,
													"end": 2380,
													"name": "DUP7",
													"source": 10
												},
												{
													"begin": 2360,
													"end": 2380,
													"name": "AND",
													"source": 10
												},
												{
													"begin": 2360,
													"end": 2380,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 2478,
													"end": 2714,
													"name": "tag",
													"source": 10,
													"value": "104"
												},
												{
													"begin": 2478,
													"end": 2714,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 2492,
													"end": 2499,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 2489,
													"end": 2490,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 2486,
													"end": 2500,
													"name": "LT",
													"source": 10
												},
												{
													"begin": 2478,
													"end": 2714,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 2478,
													"end": 2714,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "106"
												},
												{
													"begin": 2478,
													"end": 2714,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 2581,
													"end": 2600,
													"name": "DUP9",
													"source": 10
												},
												{
													"begin": 2581,
													"end": 2600,
													"name": "DUP7",
													"source": 10
												},
												{
													"begin": 2581,
													"end": 2600,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 2575,
													"end": 2601,
													"name": "MLOAD",
													"source": 10
												},
												{
													"begin": 2560,
													"end": 2602,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 2560,
													"end": 2602,
													"name": "SSTORE",
													"source": 10
												},
												{
													"begin": 2673,
													"end": 2700,
													"name": "SWAP5",
													"source": 10
												},
												{
													"begin": 2673,
													"end": 2700,
													"name": "DUP5",
													"source": 10
												},
												{
													"begin": 2673,
													"end": 2700,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 2673,
													"end": 2700,
													"name": "SWAP5",
													"source": 10
												},
												{
													"begin": 2641,
													"end": 2642,
													"name": "PUSH",
													"source": 10,
													"value": "1"
												},
												{
													"begin": 2629,
													"end": 2643,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 2629,
													"end": 2643,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 2629,
													"end": 2643,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 2629,
													"end": 2643,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 2508,
													"end": 2527,
													"name": "DUP5",
													"source": 10
												},
												{
													"begin": 2508,
													"end": 2527,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 2478,
													"end": 2714,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "104"
												},
												{
													"begin": 2478,
													"end": 2714,
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 2478,
													"end": 2714,
													"name": "tag",
													"source": 10,
													"value": "106"
												},
												{
													"begin": 2478,
													"end": 2714,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 2482,
													"end": 2485,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 2742,
													"end": 2748,
													"name": "DUP6",
													"source": 10
												},
												{
													"begin": 2733,
													"end": 2740,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 2730,
													"end": 2749,
													"name": "LT",
													"source": 10
												},
												{
													"begin": 2727,
													"end": 2928,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 2727,
													"end": 2928,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "107"
												},
												{
													"begin": 2727,
													"end": 2928,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 2803,
													"end": 2822,
													"name": "DUP8",
													"source": 10
												},
												{
													"begin": 2803,
													"end": 2822,
													"name": "DUP6",
													"source": 10
												},
												{
													"begin": 2803,
													"end": 2822,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 2797,
													"end": 2823,
													"name": "MLOAD",
													"source": 10
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "NOT",
													"source": -1
												},
												{
													"begin": 2886,
													"end": 2887,
													"name": "PUSH",
													"source": 10,
													"value": "3"
												},
												{
													"begin": 2882,
													"end": 2896,
													"name": "DUP9",
													"source": 10
												},
												{
													"begin": 2882,
													"end": 2896,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 2882,
													"end": 2896,
													"name": "SHL",
													"source": 10
												},
												{
													"begin": 2898,
													"end": 2901,
													"name": "PUSH",
													"source": 10,
													"value": "F8"
												},
												{
													"begin": 2878,
													"end": 2902,
													"name": "AND",
													"source": 10
												},
												{
													"begin": 2874,
													"end": 2911,
													"name": "SHR",
													"source": 10
												},
												{
													"begin": 2870,
													"end": 2912,
													"name": "NOT",
													"source": 10
												},
												{
													"begin": 2855,
													"end": 2913,
													"name": "AND",
													"source": 10
												},
												{
													"begin": 2840,
													"end": 2914,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 2840,
													"end": 2914,
													"name": "SSTORE",
													"source": 10
												},
												{
													"begin": 2727,
													"end": 2928,
													"name": "tag",
													"source": 10,
													"value": "107"
												},
												{
													"begin": 2727,
													"end": 2928,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 2974,
													"end": 2975,
													"name": "PUSH",
													"source": 10,
													"value": "1"
												},
												{
													"begin": 2958,
													"end": 2972,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 2958,
													"end": 2972,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 2958,
													"end": 2972,
													"name": "SHL",
													"source": 10
												},
												{
													"begin": 2954,
													"end": 2976,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 2941,
													"end": 2977,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 2941,
													"end": 2977,
													"name": "SSTORE",
													"source": 10
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 1892,
													"end": 3244,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 3249,
													"end": 3452,
													"name": "tag",
													"source": 10,
													"value": "14"
												},
												{
													"begin": 3249,
													"end": 3452,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 3413,
													"end": 3445,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 3413,
													"end": 3445,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 3413,
													"end": 3445,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 3413,
													"end": 3445,
													"name": "AND",
													"source": 10
												},
												{
													"begin": 3395,
													"end": 3446,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 3395,
													"end": 3446,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 3383,
													"end": 3385,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 3368,
													"end": 3386,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 3368,
													"end": 3386,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 3249,
													"end": 3452,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 4505,
													"end": 4632,
													"name": "tag",
													"source": 10,
													"value": "74"
												},
												{
													"begin": 4505,
													"end": 4632,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 4566,
													"end": 4576,
													"name": "PUSH",
													"source": 10,
													"value": "4E487B71"
												},
												{
													"begin": 4561,
													"end": 4564,
													"name": "PUSH",
													"source": 10,
													"value": "E0"
												},
												{
													"begin": 4557,
													"end": 4577,
													"name": "SHL",
													"source": 10
												},
												{
													"begin": 4554,
													"end": 4555,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 4547,
													"end": 4578,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 4597,
													"end": 4601,
													"name": "PUSH",
													"source": 10,
													"value": "11"
												},
												{
													"begin": 4594,
													"end": 4595,
													"name": "PUSH",
													"source": 10,
													"value": "4"
												},
												{
													"begin": 4587,
													"end": 4602,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 4621,
													"end": 4625,
													"name": "PUSH",
													"source": 10,
													"value": "24"
												},
												{
													"begin": 4618,
													"end": 4619,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 4611,
													"end": 4626,
													"name": "REVERT",
													"source": 10
												},
												{
													"begin": 4637,
													"end": 5059,
													"name": "tag",
													"source": 10,
													"value": "75"
												},
												{
													"begin": 4637,
													"end": 5059,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 4726,
													"end": 4727,
													"name": "PUSH",
													"source": 10,
													"value": "1"
												},
												{
													"begin": 4769,
													"end": 4774,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 4726,
													"end": 4727,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 4783,
													"end": 5053,
													"name": "tag",
													"source": 10,
													"value": "114"
												},
												{
													"begin": 4783,
													"end": 5053,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 4804,
													"end": 4811,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 4794,
													"end": 4802,
													"name": "DUP6",
													"source": 10
												},
												{
													"begin": 4791,
													"end": 4812,
													"name": "GT",
													"source": 10
												},
												{
													"begin": 4783,
													"end": 5053,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 4783,
													"end": 5053,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "116"
												},
												{
													"begin": 4783,
													"end": 5053,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 4863,
													"end": 4867,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 4859,
													"end": 4860,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 4855,
													"end": 4861,
													"name": "NOT",
													"source": 10
												},
												{
													"begin": 4851,
													"end": 4868,
													"name": "DIV",
													"source": 10
												},
												{
													"begin": 4845,
													"end": 4849,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 4842,
													"end": 4869,
													"name": "GT",
													"source": 10
												},
												{
													"begin": 4839,
													"end": 4892,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 4839,
													"end": 4892,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "118"
												},
												{
													"begin": 4839,
													"end": 4892,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 4872,
													"end": 4890,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "118"
												},
												{
													"begin": 4872,
													"end": 4890,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "74"
												},
												{
													"begin": 4872,
													"end": 4890,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 4872,
													"end": 4890,
													"name": "tag",
													"source": 10,
													"value": "118"
												},
												{
													"begin": 4872,
													"end": 4890,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 4922,
													"end": 4929,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 4912,
													"end": 4920,
													"name": "DUP6",
													"source": 10
												},
												{
													"begin": 4908,
													"end": 4930,
													"name": "AND",
													"source": 10
												},
												{
													"begin": 4905,
													"end": 4960,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 4905,
													"end": 4960,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "119"
												},
												{
													"begin": 4905,
													"end": 4960,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 4942,
													"end": 4958,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 4942,
													"end": 4958,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 4942,
													"end": 4958,
													"name": "MUL",
													"source": 10
												},
												{
													"begin": 4942,
													"end": 4958,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 4905,
													"end": 4960,
													"name": "tag",
													"source": 10,
													"value": "119"
												},
												{
													"begin": 4905,
													"end": 4960,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 5021,
													"end": 5043,
													"name": "SWAP4",
													"source": 10
												},
												{
													"begin": 5021,
													"end": 5043,
													"name": "DUP5",
													"source": 10
												},
												{
													"begin": 5021,
													"end": 5043,
													"name": "SHR",
													"source": 10
												},
												{
													"begin": 5021,
													"end": 5043,
													"name": "SWAP4",
													"source": 10
												},
												{
													"begin": 4981,
													"end": 4996,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 4981,
													"end": 4996,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 4981,
													"end": 4996,
													"name": "MUL",
													"source": 10
												},
												{
													"begin": 4981,
													"end": 4996,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 4783,
													"end": 5053,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "114"
												},
												{
													"begin": 4783,
													"end": 5053,
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 4783,
													"end": 5053,
													"name": "tag",
													"source": 10,
													"value": "116"
												},
												{
													"begin": 4783,
													"end": 5053,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 4787,
													"end": 4790,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 4637,
													"end": 5059,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": 4637,
													"end": 5059,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 4637,
													"end": 5059,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": 4637,
													"end": 5059,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 4637,
													"end": 5059,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 4637,
													"end": 5059,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 5064,
													"end": 5870,
													"name": "tag",
													"source": 10,
													"value": "76"
												},
												{
													"begin": 5064,
													"end": 5870,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 5113,
													"end": 5118,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 5143,
													"end": 5151,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 5133,
													"end": 5213,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "121"
												},
												{
													"begin": 5133,
													"end": 5213,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 5184,
													"end": 5185,
													"name": "PUSH",
													"source": 10,
													"value": "1"
												},
												{
													"begin": 5198,
													"end": 5203,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "120"
												},
												{
													"begin": 5198,
													"end": 5203,
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 5133,
													"end": 5213,
													"name": "tag",
													"source": 10,
													"value": "121"
												},
												{
													"begin": 5133,
													"end": 5213,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 5232,
													"end": 5236,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 5222,
													"end": 5298,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "122"
												},
												{
													"begin": 5222,
													"end": 5298,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 5269,
													"end": 5270,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 5283,
													"end": 5288,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "120"
												},
												{
													"begin": 5283,
													"end": 5288,
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 5222,
													"end": 5298,
													"name": "tag",
													"source": 10,
													"value": "122"
												},
												{
													"begin": 5222,
													"end": 5298,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 5314,
													"end": 5318,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 5332,
													"end": 5333,
													"name": "PUSH",
													"source": 10,
													"value": "1"
												},
												{
													"begin": 5327,
													"end": 5386,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 5327,
													"end": 5386,
													"name": "EQ",
													"source": 10
												},
												{
													"begin": 5327,
													"end": 5386,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "124"
												},
												{
													"begin": 5327,
													"end": 5386,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 5400,
													"end": 5401,
													"name": "PUSH",
													"source": 10,
													"value": "2"
												},
												{
													"begin": 5395,
													"end": 5525,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 5395,
													"end": 5525,
													"name": "EQ",
													"source": 10
												},
												{
													"begin": 5395,
													"end": 5525,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "125"
												},
												{
													"begin": 5395,
													"end": 5525,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 5307,
													"end": 5525,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "123"
												},
												{
													"begin": 5307,
													"end": 5525,
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 5327,
													"end": 5386,
													"name": "tag",
													"source": 10,
													"value": "124"
												},
												{
													"begin": 5327,
													"end": 5386,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 5357,
													"end": 5358,
													"name": "PUSH",
													"source": 10,
													"value": "1"
												},
												{
													"begin": 5348,
													"end": 5358,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 5348,
													"end": 5358,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 5371,
													"end": 5376,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 5371,
													"end": 5376,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "120"
												},
												{
													"begin": 5371,
													"end": 5376,
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 5395,
													"end": 5525,
													"name": "tag",
													"source": 10,
													"value": "125"
												},
												{
													"begin": 5395,
													"end": 5525,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 5432,
													"end": 5435,
													"name": "PUSH",
													"source": 10,
													"value": "FF"
												},
												{
													"begin": 5422,
													"end": 5430,
													"name": "DUP5",
													"source": 10
												},
												{
													"begin": 5419,
													"end": 5436,
													"name": "GT",
													"source": 10
												},
												{
													"begin": 5416,
													"end": 5459,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 5416,
													"end": 5459,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "127"
												},
												{
													"begin": 5416,
													"end": 5459,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 5439,
													"end": 5457,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "127"
												},
												{
													"begin": 5439,
													"end": 5457,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "74"
												},
												{
													"begin": 5439,
													"end": 5457,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 5439,
													"end": 5457,
													"name": "tag",
													"source": 10,
													"value": "127"
												},
												{
													"begin": 5439,
													"end": 5457,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 5495,
													"end": 5496,
													"name": "PUSH",
													"source": 10,
													"value": "1"
												},
												{
													"begin": 5481,
													"end": 5497,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 5481,
													"end": 5497,
													"name": "SHL",
													"source": 10
												},
												{
													"begin": 5510,
													"end": 5515,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "120"
												},
												{
													"begin": 5510,
													"end": 5515,
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 5307,
													"end": 5525,
													"name": "tag",
													"source": 10,
													"value": "123"
												},
												{
													"begin": 5307,
													"end": 5525,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 5307,
													"end": 5525,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 5609,
													"end": 5611,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 5599,
													"end": 5607,
													"name": "DUP4",
													"source": 10
												},
												{
													"begin": 5596,
													"end": 5612,
													"name": "LT",
													"source": 10
												},
												{
													"begin": 5590,
													"end": 5593,
													"name": "PUSH",
													"source": 10,
													"value": "133"
												},
												{
													"begin": 5584,
													"end": 5588,
													"name": "DUP4",
													"source": 10
												},
												{
													"begin": 5581,
													"end": 5594,
													"name": "LT",
													"source": 10
												},
												{
													"begin": 5577,
													"end": 5613,
													"name": "AND",
													"source": 10
												},
												{
													"begin": 5571,
													"end": 5573,
													"name": "PUSH",
													"source": 10,
													"value": "4E"
												},
												{
													"begin": 5561,
													"end": 5569,
													"name": "DUP5",
													"source": 10
												},
												{
													"begin": 5558,
													"end": 5574,
													"name": "LT",
													"source": 10
												},
												{
													"begin": 5553,
													"end": 5555,
													"name": "PUSH",
													"source": 10,
													"value": "B"
												},
												{
													"begin": 5547,
													"end": 5551,
													"name": "DUP5",
													"source": 10
												},
												{
													"begin": 5544,
													"end": 5556,
													"name": "LT",
													"source": 10
												},
												{
													"begin": 5540,
													"end": 5575,
													"name": "AND",
													"source": 10
												},
												{
													"begin": 5537,
													"end": 5614,
													"name": "OR",
													"source": 10
												},
												{
													"begin": 5534,
													"end": 5693,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 5534,
													"end": 5693,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "128"
												},
												{
													"begin": 5534,
													"end": 5693,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 5646,
													"end": 5665,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 5646,
													"end": 5665,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 5646,
													"end": 5665,
													"name": "EXP",
													"source": 10
												},
												{
													"begin": 5678,
													"end": 5683,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "120"
												},
												{
													"begin": 5678,
													"end": 5683,
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 5534,
													"end": 5693,
													"name": "tag",
													"source": 10,
													"value": "128"
												},
												{
													"begin": 5534,
													"end": 5693,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 5725,
													"end": 5759,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "129"
												},
												{
													"begin": 5750,
													"end": 5758,
													"name": "DUP4",
													"source": 10
												},
												{
													"begin": 5744,
													"end": 5748,
													"name": "DUP4",
													"source": 10
												},
												{
													"begin": 5725,
													"end": 5759,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "75"
												},
												{
													"begin": 5725,
													"end": 5759,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 5725,
													"end": 5759,
													"name": "tag",
													"source": 10,
													"value": "129"
												},
												{
													"begin": 5725,
													"end": 5759,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 5795,
													"end": 5801,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 5791,
													"end": 5792,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 5787,
													"end": 5793,
													"name": "NOT",
													"source": 10
												},
												{
													"begin": 5783,
													"end": 5802,
													"name": "DIV",
													"source": 10
												},
												{
													"begin": 5774,
													"end": 5781,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 5771,
													"end": 5803,
													"name": "GT",
													"source": 10
												},
												{
													"begin": 5768,
													"end": 5826,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 5768,
													"end": 5826,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "131"
												},
												{
													"begin": 5768,
													"end": 5826,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 5806,
													"end": 5824,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "131"
												},
												{
													"begin": 5806,
													"end": 5824,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "74"
												},
												{
													"begin": 5806,
													"end": 5824,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 5806,
													"end": 5824,
													"name": "tag",
													"source": 10,
													"value": "131"
												},
												{
													"begin": 5806,
													"end": 5824,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 5844,
													"end": 5864,
													"name": "MUL",
													"source": 10
												},
												{
													"begin": 5844,
													"end": 5864,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 5064,
													"end": 5870,
													"name": "tag",
													"source": 10,
													"value": "120"
												},
												{
													"begin": 5064,
													"end": 5870,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 5064,
													"end": 5870,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": 5064,
													"end": 5870,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 5064,
													"end": 5870,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 5064,
													"end": 5870,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 5064,
													"end": 5870,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 5875,
													"end": 6015,
													"name": "tag",
													"source": 10,
													"value": "28"
												},
												{
													"begin": 5875,
													"end": 6015,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 5933,
													"end": 5938,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 5962,
													"end": 6009,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "133"
												},
												{
													"begin": 6003,
													"end": 6007,
													"name": "PUSH",
													"source": 10,
													"value": "FF"
												},
												{
													"begin": 5993,
													"end": 6001,
													"name": "DUP5",
													"source": 10
												},
												{
													"begin": 5989,
													"end": 6008,
													"name": "AND",
													"source": 10
												},
												{
													"begin": 5983,
													"end": 5987,
													"name": "DUP4",
													"source": 10
												},
												{
													"begin": 5962,
													"end": 6009,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "76"
												},
												{
													"begin": 5962,
													"end": 6009,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 5962,
													"end": 6009,
													"name": "tag",
													"source": 10,
													"value": "133"
												},
												{
													"begin": 5962,
													"end": 6009,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 5953,
													"end": 6009,
													"name": "SWAP4",
													"source": 10
												},
												{
													"begin": 5875,
													"end": 6015,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 5875,
													"end": 6015,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 6020,
													"end": 6237,
													"name": "tag",
													"source": 10,
													"value": "30"
												},
												{
													"begin": 6020,
													"end": 6237,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 6060,
													"end": 6061,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 6086,
													"end": 6087,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 6076,
													"end": 6208,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "135"
												},
												{
													"begin": 6076,
													"end": 6208,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 6130,
													"end": 6140,
													"name": "PUSH",
													"source": 10,
													"value": "4E487B71"
												},
												{
													"begin": 6125,
													"end": 6128,
													"name": "PUSH",
													"source": 10,
													"value": "E0"
												},
												{
													"begin": 6121,
													"end": 6141,
													"name": "SHL",
													"source": 10
												},
												{
													"begin": 6118,
													"end": 6119,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 6111,
													"end": 6142,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 6165,
													"end": 6169,
													"name": "PUSH",
													"source": 10,
													"value": "12"
												},
												{
													"begin": 6162,
													"end": 6163,
													"name": "PUSH",
													"source": 10,
													"value": "4"
												},
												{
													"begin": 6155,
													"end": 6170,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 6193,
													"end": 6197,
													"name": "PUSH",
													"source": 10,
													"value": "24"
												},
												{
													"begin": 6190,
													"end": 6191,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 6183,
													"end": 6198,
													"name": "REVERT",
													"source": 10
												},
												{
													"begin": 6076,
													"end": 6208,
													"name": "tag",
													"source": 10,
													"value": "135"
												},
												{
													"begin": 6076,
													"end": 6208,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 6222,
													"end": 6231,
													"name": "DIV",
													"source": 10
												},
												{
													"begin": 6222,
													"end": 6231,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 6020,
													"end": 6237,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 6587,
													"end": 6755,
													"name": "tag",
													"source": 10,
													"value": "37"
												},
												{
													"begin": 6587,
													"end": 6755,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 6660,
													"end": 6669,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 6660,
													"end": 6669,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 6660,
													"end": 6669,
													"name": "MUL",
													"source": 10
												},
												{
													"begin": 6691,
													"end": 6700,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 6691,
													"end": 6700,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 6708,
													"end": 6723,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 6708,
													"end": 6723,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 6708,
													"end": 6723,
													"name": "DIV",
													"source": 10
												},
												{
													"begin": 6702,
													"end": 6724,
													"name": "DUP5",
													"source": 10
												},
												{
													"begin": 6702,
													"end": 6724,
													"name": "EQ",
													"source": 10
												},
												{
													"begin": 6688,
													"end": 6725,
													"name": "OR",
													"source": 10
												},
												{
													"begin": 6678,
													"end": 6749,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "120"
												},
												{
													"begin": 6678,
													"end": 6749,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 6729,
													"end": 6747,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "120"
												},
												{
													"begin": 6729,
													"end": 6747,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "74"
												},
												{
													"begin": 6729,
													"end": 6747,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 6760,
													"end": 6885,
													"name": "tag",
													"source": 10,
													"value": "59"
												},
												{
													"begin": 6760,
													"end": 6885,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 6825,
													"end": 6834,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 6825,
													"end": 6834,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 6825,
													"end": 6834,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 6846,
													"end": 6856,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 6846,
													"end": 6856,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 6846,
													"end": 6856,
													"name": "GT",
													"source": 10
												},
												{
													"begin": 6843,
													"end": 6879,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 6843,
													"end": 6879,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "120"
												},
												{
													"begin": 6843,
													"end": 6879,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 6859,
													"end": 6877,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "120"
												},
												{
													"begin": 6859,
													"end": 6877,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "74"
												},
												{
													"begin": 6859,
													"end": 6877,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 7240,
													"end": 7417,
													"name": "tag",
													"source": 10,
													"value": "77"
												},
												{
													"begin": 7240,
													"end": 7417,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 459,
													"end": 2753,
													"name": "PUSH #[$]",
													"source": 9,
													"value": "0000000000000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 459,
													"end": 2753,
													"name": "DUP1",
													"source": 9
												},
												{
													"begin": 459,
													"end": 2753,
													"name": "PUSH [$]",
													"source": 9,
													"value": "0000000000000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 459,
													"end": 2753,
													"name": "PUSH",
													"source": 9,
													"value": "0"
												},
												{
													"begin": 459,
													"end": 2753,
													"name": "CODECOPY",
													"source": 9
												},
												{
													"begin": 459,
													"end": 2753,
													"name": "PUSH",
													"source": 9,
													"value": "0"
												},
												{
													"begin": 459,
													"end": 2753,
													"name": "RETURN",
													"source": 9
												}
											],
											".data": {
												"0": {
													".auxdata": "a2646970667358221220f529989a813db1d2559468912ed7ef9fa1bfb27f6bf334d9913188b73ea920de64736f6c63430008140033",
													".code": [
														{
															"begin": 459,
															"end": 2753,
															"name": "PUSH",
															"source": 9,
															"value": "80"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "PUSH",
															"source": 9,
															"value": "40"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "MSTORE",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "CALLVALUE",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "DUP1",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "ISZERO",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "1"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "JUMPI",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "PUSH",
															"source": 9,
															"value": "0"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "DUP1",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "REVERT",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "tag",
															"source": 9,
															"value": "1"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "JUMPDEST",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "POP",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "PUSH",
															"source": 9,
															"value": "4"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "CALLDATASIZE",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "LT",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "2"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "JUMPI",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "PUSH",
															"source": 9,
															"value": "0"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "CALLDATALOAD",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "PUSH",
															"source": 9,
															"value": "E0"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "SHR",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "DUP1",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "PUSH",
															"source": 9,
															"value": "6FDDE03"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "EQ",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "3"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "JUMPI",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "DUP1",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "PUSH",
															"source": 9,
															"value": "95EA7B3"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "EQ",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "4"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "JUMPI",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "DUP1",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "PUSH",
															"source": 9,
															"value": "18160DDD"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "EQ",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "5"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "JUMPI",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "DUP1",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "PUSH",
															"source": 9,
															"value": "23B872DD"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "EQ",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "6"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "JUMPI",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "DUP1",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "PUSH",
															"source": 9,
															"value": "313CE567"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "EQ",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "7"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "JUMPI",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "DUP1",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "PUSH",
															"source": 9,
															"value": "3F4BA83A"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "EQ",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "8"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "JUMPI",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "DUP1",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "PUSH",
															"source": 9,
															"value": "40C10F19"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "EQ",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "9"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "JUMPI",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "DUP1",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "PUSH",
															"source": 9,
															"value": "42966C68"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "EQ",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "10"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "JUMPI",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "DUP1",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "PUSH",
															"source": 9,
															"value": "5C975ABB"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "EQ",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "11"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "JUMPI",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "DUP1",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "PUSH",
															"source": 9,
															"value": "70A08231"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "EQ",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "12"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "JUMPI",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "DUP1",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "PUSH",
															"source": 9,
															"value": "715018A6"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "EQ",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "13"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "JUMPI",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "DUP1",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "PUSH",
															"source": 9,
															"value": "79CC6790"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "EQ",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "14"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "JUMPI",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "DUP1",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "PUSH",
															"source": 9,
															"value": "8456CB59"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "EQ",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "15"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "JUMPI",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "DUP1",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "PUSH",
															"source": 9,
															"value": "8DA5CB5B"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "EQ",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "16"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "JUMPI",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "DUP1",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "PUSH",
															"source": 9,
															"value": "95D89B41"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "EQ",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "17"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "JUMPI",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "DUP1",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "PUSH",
															"source": 9,
															"value": "A9059CBB"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "EQ",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "18"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "JUMPI",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "DUP1",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "PUSH",
															"source": 9,
															"value": "DD62ED3E"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "EQ",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "19"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "JUMPI",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "DUP1",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "PUSH",
															"source": 9,
															"value": "F2FDE38B"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "EQ",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "20"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "JUMPI",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "tag",
															"source": 9,
															"value": "2"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "JUMPDEST",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "PUSH",
															"source": 9,
															"value": "0"
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "DUP1",
															"source": 9
														},
														{
															"begin": 459,
															"end": 2753,
															"name": "REVERT",
															"source": 9
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "tag",
															"source": 2,
															"value": "3"
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "21"
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "22"
														},
														{
															"begin": 1760,
															"end": 1849,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "tag",
															"source": 2,
															"value": "21"
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "PUSH",
															"source": 2,
															"value": "40"
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "MLOAD",
															"source": 2
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "23"
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "SWAP2",
															"source": 2
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "24"
														},
														{
															"begin": 1760,
															"end": 1849,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "tag",
															"source": 2,
															"value": "23"
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "PUSH",
															"source": 2,
															"value": "40"
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "MLOAD",
															"source": 2
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "DUP1",
															"source": 2
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "SWAP2",
															"source": 2
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "SUB",
															"source": 2
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "RETURN",
															"source": 2
														},
														{
															"begin": 3902,
															"end": 4088,
															"name": "tag",
															"source": 2,
															"value": "4"
														},
														{
															"begin": 3902,
															"end": 4088,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": 3902,
															"end": 4088,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "25"
														},
														{
															"begin": 3902,
															"end": 4088,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "26"
														},
														{
															"begin": 3902,
															"end": 4088,
															"name": "CALLDATASIZE",
															"source": 2
														},
														{
															"begin": 3902,
															"end": 4088,
															"name": "PUSH",
															"source": 2,
															"value": "4"
														},
														{
															"begin": 3902,
															"end": 4088,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "27"
														},
														{
															"begin": 3902,
															"end": 4088,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 3902,
															"end": 4088,
															"name": "tag",
															"source": 2,
															"value": "26"
														},
														{
															"begin": 3902,
															"end": 4088,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": 3902,
															"end": 4088,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "28"
														},
														{
															"begin": 3902,
															"end": 4088,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 3902,
															"end": 4088,
															"name": "tag",
															"source": 2,
															"value": "25"
														},
														{
															"begin": 3902,
															"end": 4088,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": 3902,
															"end": 4088,
															"name": "PUSH",
															"source": 2,
															"value": "40"
														},
														{
															"begin": 3902,
															"end": 4088,
															"name": "MLOAD",
															"source": 2
														},
														{
															"begin": 1169,
															"end": 1183,
															"name": "SWAP1",
															"source": 10
														},
														{
															"begin": 1169,
															"end": 1183,
															"name": "ISZERO",
															"source": 10
														},
														{
															"begin": 1162,
															"end": 1184,
															"name": "ISZERO",
															"source": 10
														},
														{
															"begin": 1144,
															"end": 1185,
															"name": "DUP2",
															"source": 10
														},
														{
															"begin": 1144,
															"end": 1185,
															"name": "MSTORE",
															"source": 10
														},
														{
															"begin": 1132,
															"end": 1134,
															"name": "PUSH",
															"source": 10,
															"value": "20"
														},
														{
															"begin": 1117,
															"end": 1135,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 3902,
															"end": 4088,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "23"
														},
														{
															"begin": 1004,
															"end": 1191,
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 2803,
															"end": 2900,
															"name": "tag",
															"source": 2,
															"value": "5"
														},
														{
															"begin": 2803,
															"end": 2900,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": 2881,
															"end": 2893,
															"name": "PUSH",
															"source": 2,
															"value": "2"
														},
														{
															"begin": 2881,
															"end": 2893,
															"name": "SLOAD",
															"source": 2
														},
														{
															"begin": 2803,
															"end": 2900,
															"name": "tag",
															"source": 2,
															"value": "31"
														},
														{
															"begin": 2803,
															"end": 2900,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": 2803,
															"end": 2900,
															"name": "PUSH",
															"source": 2,
															"value": "40"
														},
														{
															"begin": 2803,
															"end": 2900,
															"name": "MLOAD",
															"source": 2
														},
														{
															"begin": 1342,
															"end": 1367,
															"name": "SWAP1",
															"source": 10
														},
														{
															"begin": 1342,
															"end": 1367,
															"name": "DUP2",
															"source": 10
														},
														{
															"begin": 1342,
															"end": 1367,
															"name": "MSTORE",
															"source": 10
														},
														{
															"begin": 1330,
															"end": 1332,
															"name": "PUSH",
															"source": 10,
															"value": "20"
														},
														{
															"begin": 1315,
															"end": 1333,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 2803,
															"end": 2900,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "23"
														},
														{
															"begin": 1196,
															"end": 1373,
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 4680,
															"end": 4924,
															"name": "tag",
															"source": 2,
															"value": "6"
														},
														{
															"begin": 4680,
															"end": 4924,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": 4680,
															"end": 4924,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "25"
														},
														{
															"begin": 4680,
															"end": 4924,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "36"
														},
														{
															"begin": 4680,
															"end": 4924,
															"name": "CALLDATASIZE",
															"source": 2
														},
														{
															"begin": 4680,
															"end": 4924,
															"name": "PUSH",
															"source": 2,
															"value": "4"
														},
														{
															"begin": 4680,
															"end": 4924,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "37"
														},
														{
															"begin": 4680,
															"end": 4924,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 4680,
															"end": 4924,
															"name": "tag",
															"source": 2,
															"value": "36"
														},
														{
															"begin": 4680,
															"end": 4924,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": 4680,
															"end": 4924,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "38"
														},
														{
															"begin": 4680,
															"end": 4924,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 1758,
															"end": 1856,
															"name": "tag",
															"source": 9,
															"value": "7"
														},
														{
															"begin": 1758,
															"end": 1856,
															"name": "JUMPDEST",
															"source": 9
														},
														{
															"begin": 1840,
															"end": 1849,
															"name": "PUSH",
															"source": 9,
															"value": "5"
														},
														{
															"begin": 1840,
															"end": 1849,
															"name": "SLOAD",
															"source": 9
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A8"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": 1840,
															"end": 1849,
															"name": "SWAP1",
															"source": 9
														},
														{
															"begin": 1840,
															"end": 1849,
															"name": "DIV",
															"source": 9
														},
														{
															"begin": 1840,
															"end": 1849,
															"name": "PUSH",
															"source": 9,
															"value": "FF"
														},
														{
															"begin": 1840,
															"end": 1849,
															"name": "AND",
															"source": 9
														},
														{
															"begin": 1758,
															"end": 1856,
															"name": "PUSH",
															"source": 9,
															"value": "40"
														},
														{
															"begin": 1758,
															"end": 1856,
															"name": "MLOAD",
															"source": 9
														},
														{
															"begin": 1883,
															"end": 1887,
															"name": "PUSH",
															"source": 10,
															"value": "FF"
														},
														{
															"begin": 1871,
															"end": 1888,
															"name": "SWAP1",
															"source": 10
														},
														{
															"begin": 1871,
															"end": 1888,
															"name": "SWAP2",
															"source": 10
														},
														{
															"begin": 1871,
															"end": 1888,
															"name": "AND",
															"source": 10
														},
														{
															"begin": 1853,
															"end": 1889,
															"name": "DUP2",
															"source": 10
														},
														{
															"begin": 1853,
															"end": 1889,
															"name": "MSTORE",
															"source": 10
														},
														{
															"begin": 1841,
															"end": 1843,
															"name": "PUSH",
															"source": 10,
															"value": "20"
														},
														{
															"begin": 1826,
															"end": 1844,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 1758,
															"end": 1856,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "23"
														},
														{
															"begin": 1711,
															"end": 1895,
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 2434,
															"end": 2497,
															"name": "tag",
															"source": 9,
															"value": "8"
														},
														{
															"begin": 2434,
															"end": 2497,
															"name": "JUMPDEST",
															"source": 9
														},
														{
															"begin": 2434,
															"end": 2497,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "44"
														},
														{
															"begin": 2434,
															"end": 2497,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "45"
														},
														{
															"begin": 2434,
															"end": 2497,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 9
														},
														{
															"begin": 2434,
															"end": 2497,
															"name": "tag",
															"source": 9,
															"value": "44"
														},
														{
															"begin": 2434,
															"end": 2497,
															"name": "JUMPDEST",
															"source": 9
														},
														{
															"begin": 2434,
															"end": 2497,
															"name": "STOP",
															"source": 9
														},
														{
															"begin": 2008,
															"end": 2179,
															"name": "tag",
															"source": 9,
															"value": "9"
														},
														{
															"begin": 2008,
															"end": 2179,
															"name": "JUMPDEST",
															"source": 9
														},
														{
															"begin": 2008,
															"end": 2179,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "44"
														},
														{
															"begin": 2008,
															"end": 2179,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "47"
														},
														{
															"begin": 2008,
															"end": 2179,
															"name": "CALLDATASIZE",
															"source": 9
														},
														{
															"begin": 2008,
															"end": 2179,
															"name": "PUSH",
															"source": 9,
															"value": "4"
														},
														{
															"begin": 2008,
															"end": 2179,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "27"
														},
														{
															"begin": 2008,
															"end": 2179,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 9
														},
														{
															"begin": 2008,
															"end": 2179,
															"name": "tag",
															"source": 9,
															"value": "47"
														},
														{
															"begin": 2008,
															"end": 2179,
															"name": "JUMPDEST",
															"source": 9
														},
														{
															"begin": 2008,
															"end": 2179,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "48"
														},
														{
															"begin": 2008,
															"end": 2179,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 9
														},
														{
															"begin": 618,
															"end": 705,
															"name": "tag",
															"source": 4,
															"value": "10"
														},
														{
															"begin": 618,
															"end": 705,
															"name": "JUMPDEST",
															"source": 4
														},
														{
															"begin": 618,
															"end": 705,
															"name": "PUSH [tag]",
															"source": 4,
															"value": "44"
														},
														{
															"begin": 618,
															"end": 705,
															"name": "PUSH [tag]",
															"source": 4,
															"value": "50"
														},
														{
															"begin": 618,
															"end": 705,
															"name": "CALLDATASIZE",
															"source": 4
														},
														{
															"begin": 618,
															"end": 705,
															"name": "PUSH",
															"source": 4,
															"value": "4"
														},
														{
															"begin": 618,
															"end": 705,
															"name": "PUSH [tag]",
															"source": 4,
															"value": "51"
														},
														{
															"begin": 618,
															"end": 705,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 4
														},
														{
															"begin": 618,
															"end": 705,
															"name": "tag",
															"source": 4,
															"value": "50"
														},
														{
															"begin": 618,
															"end": 705,
															"name": "JUMPDEST",
															"source": 4
														},
														{
															"begin": 618,
															"end": 705,
															"name": "PUSH [tag]",
															"source": 4,
															"value": "52"
														},
														{
															"begin": 618,
															"end": 705,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 4
														},
														{
															"begin": 1726,
															"end": 1810,
															"name": "tag",
															"source": 7,
															"value": "11"
														},
														{
															"begin": 1726,
															"end": 1810,
															"name": "JUMPDEST",
															"source": 7
														},
														{
															"begin": 1726,
															"end": 1810,
															"name": "PUSH [tag]",
															"source": 7,
															"value": "25"
														},
														{
															"begin": 1726,
															"end": 1810,
															"name": "PUSH [tag]",
															"source": 7,
															"value": "54"
														},
														{
															"begin": 1726,
															"end": 1810,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 7
														},
														{
															"begin": 2933,
															"end": 3049,
															"name": "tag",
															"source": 2,
															"value": "12"
														},
														{
															"begin": 2933,
															"end": 3049,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": 2933,
															"end": 3049,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "31"
														},
														{
															"begin": 2933,
															"end": 3049,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "57"
														},
														{
															"begin": 2933,
															"end": 3049,
															"name": "CALLDATASIZE",
															"source": 2
														},
														{
															"begin": 2933,
															"end": 3049,
															"name": "PUSH",
															"source": 2,
															"value": "4"
														},
														{
															"begin": 2933,
															"end": 3049,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "58"
														},
														{
															"begin": 2933,
															"end": 3049,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 2933,
															"end": 3049,
															"name": "tag",
															"source": 2,
															"value": "57"
														},
														{
															"begin": 2933,
															"end": 3049,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 3024,
															"end": 3042,
															"name": "AND",
															"source": 2
														},
														{
															"begin": 2998,
															"end": 3005,
															"name": "PUSH",
															"source": 2,
															"value": "0"
														},
														{
															"begin": 3024,
															"end": 3042,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 3024,
															"end": 3042,
															"name": "DUP2",
															"source": 2
														},
														{
															"begin": 3024,
															"end": 3042,
															"name": "MSTORE",
															"source": 2
														},
														{
															"begin": 3024,
															"end": 3042,
															"name": "PUSH",
															"source": 2,
															"value": "20"
														},
														{
															"begin": 3024,
															"end": 3042,
															"name": "DUP2",
															"source": 2
														},
														{
															"begin": 3024,
															"end": 3042,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 3024,
															"end": 3042,
															"name": "MSTORE",
															"source": 2
														},
														{
															"begin": 3024,
															"end": 3042,
															"name": "PUSH",
															"source": 2,
															"value": "40"
														},
														{
															"begin": 3024,
															"end": 3042,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 3024,
															"end": 3042,
															"name": "KECCAK256",
															"source": 2
														},
														{
															"begin": 3024,
															"end": 3042,
															"name": "SLOAD",
															"source": 2
														},
														{
															"begin": 3024,
															"end": 3042,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 2933,
															"end": 3049,
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 2293,
															"end": 2394,
															"name": "tag",
															"source": 0,
															"value": "13"
														},
														{
															"begin": 2293,
															"end": 2394,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 2293,
															"end": 2394,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "44"
														},
														{
															"begin": 2293,
															"end": 2394,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "62"
														},
														{
															"begin": 2293,
															"end": 2394,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 1021,
															"end": 1179,
															"name": "tag",
															"source": 4,
															"value": "14"
														},
														{
															"begin": 1021,
															"end": 1179,
															"name": "JUMPDEST",
															"source": 4
														},
														{
															"begin": 1021,
															"end": 1179,
															"name": "PUSH [tag]",
															"source": 4,
															"value": "44"
														},
														{
															"begin": 1021,
															"end": 1179,
															"name": "PUSH [tag]",
															"source": 4,
															"value": "64"
														},
														{
															"begin": 1021,
															"end": 1179,
															"name": "CALLDATASIZE",
															"source": 4
														},
														{
															"begin": 1021,
															"end": 1179,
															"name": "PUSH",
															"source": 4,
															"value": "4"
														},
														{
															"begin": 1021,
															"end": 1179,
															"name": "PUSH [tag]",
															"source": 4,
															"value": "27"
														},
														{
															"begin": 1021,
															"end": 1179,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 4
														},
														{
															"begin": 1021,
															"end": 1179,
															"name": "tag",
															"source": 4,
															"value": "64"
														},
														{
															"begin": 1021,
															"end": 1179,
															"name": "JUMPDEST",
															"source": 4
														},
														{
															"begin": 1021,
															"end": 1179,
															"name": "PUSH [tag]",
															"source": 4,
															"value": "65"
														},
														{
															"begin": 1021,
															"end": 1179,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 4
														},
														{
															"begin": 2280,
															"end": 2339,
															"name": "tag",
															"source": 9,
															"value": "15"
														},
														{
															"begin": 2280,
															"end": 2339,
															"name": "JUMPDEST",
															"source": 9
														},
														{
															"begin": 2280,
															"end": 2339,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "44"
														},
														{
															"begin": 2280,
															"end": 2339,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "67"
														},
														{
															"begin": 2280,
															"end": 2339,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 9
														},
														{
															"begin": 1638,
															"end": 1723,
															"name": "tag",
															"source": 0,
															"value": "16"
														},
														{
															"begin": 1638,
															"end": 1723,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 1638,
															"end": 1723,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "68"
														},
														{
															"begin": 1638,
															"end": 1723,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "69"
														},
														{
															"begin": 1638,
															"end": 1723,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 1638,
															"end": 1723,
															"name": "tag",
															"source": 0,
															"value": "68"
														},
														{
															"begin": 1638,
															"end": 1723,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 1638,
															"end": 1723,
															"name": "PUSH",
															"source": 0,
															"value": "40"
														},
														{
															"begin": 1638,
															"end": 1723,
															"name": "MLOAD",
															"source": 0
														},
														{
															"begin": 1638,
															"end": 1723,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "23"
														},
														{
															"begin": 1638,
															"end": 1723,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 1638,
															"end": 1723,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 1638,
															"end": 1723,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "71"
														},
														{
															"begin": 1638,
															"end": 1723,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 1962,
															"end": 2055,
															"name": "tag",
															"source": 2,
															"value": "17"
														},
														{
															"begin": 1962,
															"end": 2055,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": 1962,
															"end": 2055,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "21"
														},
														{
															"begin": 1962,
															"end": 2055,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "73"
														},
														{
															"begin": 1962,
															"end": 2055,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 3244,
															"end": 3422,
															"name": "tag",
															"source": 2,
															"value": "18"
														},
														{
															"begin": 3244,
															"end": 3422,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": 3244,
															"end": 3422,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "25"
														},
														{
															"begin": 3244,
															"end": 3422,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "76"
														},
														{
															"begin": 3244,
															"end": 3422,
															"name": "CALLDATASIZE",
															"source": 2
														},
														{
															"begin": 3244,
															"end": 3422,
															"name": "PUSH",
															"source": 2,
															"value": "4"
														},
														{
															"begin": 3244,
															"end": 3422,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "27"
														},
														{
															"begin": 3244,
															"end": 3422,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 3244,
															"end": 3422,
															"name": "tag",
															"source": 2,
															"value": "76"
														},
														{
															"begin": 3244,
															"end": 3422,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": 3244,
															"end": 3422,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "77"
														},
														{
															"begin": 3244,
															"end": 3422,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 3455,
															"end": 3595,
															"name": "tag",
															"source": 2,
															"value": "19"
														},
														{
															"begin": 3455,
															"end": 3595,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": 3455,
															"end": 3595,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "31"
														},
														{
															"begin": 3455,
															"end": 3595,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "80"
														},
														{
															"begin": 3455,
															"end": 3595,
															"name": "CALLDATASIZE",
															"source": 2
														},
														{
															"begin": 3455,
															"end": 3595,
															"name": "PUSH",
															"source": 2,
															"value": "4"
														},
														{
															"begin": 3455,
															"end": 3595,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "81"
														},
														{
															"begin": 3455,
															"end": 3595,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 3455,
															"end": 3595,
															"name": "tag",
															"source": 2,
															"value": "80"
														},
														{
															"begin": 3455,
															"end": 3595,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": 3455,
															"end": 3595,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "82"
														},
														{
															"begin": 3455,
															"end": 3595,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 2543,
															"end": 2758,
															"name": "tag",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 2543,
															"end": 2758,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 2543,
															"end": 2758,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "44"
														},
														{
															"begin": 2543,
															"end": 2758,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "85"
														},
														{
															"begin": 2543,
															"end": 2758,
															"name": "CALLDATASIZE",
															"source": 0
														},
														{
															"begin": 2543,
															"end": 2758,
															"name": "PUSH",
															"source": 0,
															"value": "4"
														},
														{
															"begin": 2543,
															"end": 2758,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "58"
														},
														{
															"begin": 2543,
															"end": 2758,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 2543,
															"end": 2758,
															"name": "tag",
															"source": 0,
															"value": "85"
														},
														{
															"begin": 2543,
															"end": 2758,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 2543,
															"end": 2758,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "86"
														},
														{
															"begin": 2543,
															"end": 2758,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "tag",
															"source": 2,
															"value": "22"
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": 1805,
															"end": 1818,
															"name": "PUSH",
															"source": 2,
															"value": "60"
														},
														{
															"begin": 1837,
															"end": 1842,
															"name": "PUSH",
															"source": 2,
															"value": "3"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "DUP1",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "SLOAD",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "88"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "89"
														},
														{
															"begin": 1830,
															"end": 1842,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "tag",
															"source": 2,
															"value": "88"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "DUP1",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "PUSH",
															"source": 2,
															"value": "1F"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "ADD",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "PUSH",
															"source": 2,
															"value": "20"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "DUP1",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "SWAP2",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "DIV",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "MUL",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "PUSH",
															"source": 2,
															"value": "20"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "ADD",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "PUSH",
															"source": 2,
															"value": "40"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "MLOAD",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "DUP2",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "ADD",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "PUSH",
															"source": 2,
															"value": "40"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "MSTORE",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "DUP1",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "SWAP3",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "SWAP2",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "DUP2",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "DUP2",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "MSTORE",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "PUSH",
															"source": 2,
															"value": "20"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "ADD",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "DUP3",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "DUP1",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "SLOAD",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "90"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "89"
														},
														{
															"begin": 1830,
															"end": 1842,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "tag",
															"source": 2,
															"value": "90"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "DUP1",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "ISZERO",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "91"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "JUMPI",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "DUP1",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "PUSH",
															"source": 2,
															"value": "1F"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "LT",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "92"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "JUMPI",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "PUSH",
															"source": 2,
															"value": "100"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "DUP1",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "DUP4",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "SLOAD",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "DIV",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "MUL",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "DUP4",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "MSTORE",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "SWAP2",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "PUSH",
															"source": 2,
															"value": "20"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "ADD",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "SWAP2",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "91"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "tag",
															"source": 2,
															"value": "92"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "DUP3",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "ADD",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "SWAP2",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "PUSH",
															"source": 2,
															"value": "0"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "MSTORE",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "PUSH",
															"source": 2,
															"value": "20"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "PUSH",
															"source": 2,
															"value": "0"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "KECCAK256",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "tag",
															"source": 2,
															"value": "93"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "DUP2",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "SLOAD",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "DUP2",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "MSTORE",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "PUSH",
															"source": 2,
															"value": "1"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "ADD",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "PUSH",
															"source": 2,
															"value": "20"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "ADD",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "DUP1",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "DUP4",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "GT",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "93"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "JUMPI",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "DUP3",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "SUB",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "PUSH",
															"source": 2,
															"value": "1F"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "AND",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "DUP3",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "ADD",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "SWAP2",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "tag",
															"source": 2,
															"value": "91"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "POP",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "POP",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "POP",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "POP",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "POP",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "POP",
															"source": 2
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 1760,
															"end": 1849,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 3902,
															"end": 4088,
															"name": "tag",
															"source": 2,
															"value": "28"
														},
														{
															"begin": 3902,
															"end": 4088,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": 3975,
															"end": 3979,
															"name": "PUSH",
															"source": 2,
															"value": "0"
														},
														{
															"begin": 735,
															"end": 745,
															"name": "CALLER",
															"source": 6
														},
														{
															"begin": 4029,
															"end": 4060,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "97"
														},
														{
															"begin": 735,
															"end": 745,
															"name": "DUP2",
															"source": 6
														},
														{
															"begin": 4045,
															"end": 4052,
															"name": "DUP6",
															"source": 2
														},
														{
															"begin": 4054,
															"end": 4059,
															"name": "DUP6",
															"source": 2
														},
														{
															"begin": 4029,
															"end": 4037,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "98"
														},
														{
															"begin": 4029,
															"end": 4060,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 4029,
															"end": 4060,
															"name": "tag",
															"source": 2,
															"value": "97"
														},
														{
															"begin": 4029,
															"end": 4060,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": 4077,
															"end": 4081,
															"name": "PUSH",
															"source": 2,
															"value": "1"
														},
														{
															"begin": 4070,
															"end": 4081,
															"name": "SWAP2",
															"source": 2
														},
														{
															"begin": 4070,
															"end": 4081,
															"name": "POP",
															"source": 2
														},
														{
															"begin": 4070,
															"end": 4081,
															"name": "POP",
															"source": 2
														},
														{
															"begin": 3902,
															"end": 4088,
															"name": "tag",
															"source": 2,
															"value": "94"
														},
														{
															"begin": 3902,
															"end": 4088,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": 3902,
															"end": 4088,
															"name": "SWAP3",
															"source": 2
														},
														{
															"begin": 3902,
															"end": 4088,
															"name": "SWAP2",
															"source": 2
														},
														{
															"begin": 3902,
															"end": 4088,
															"name": "POP",
															"source": 2
														},
														{
															"begin": 3902,
															"end": 4088,
															"name": "POP",
															"source": 2
														},
														{
															"begin": 3902,
															"end": 4088,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 4680,
															"end": 4924,
															"name": "tag",
															"source": 2,
															"value": "38"
														},
														{
															"begin": 4680,
															"end": 4924,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": 4767,
															"end": 4771,
															"name": "PUSH",
															"source": 2,
															"value": "0"
														},
														{
															"begin": 735,
															"end": 745,
															"name": "CALLER",
															"source": 6
														},
														{
															"begin": 4823,
															"end": 4860,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "102"
														},
														{
															"begin": 4839,
															"end": 4843,
															"name": "DUP6",
															"source": 2
														},
														{
															"begin": 735,
															"end": 745,
															"name": "DUP3",
															"source": 6
														},
														{
															"begin": 4854,
															"end": 4859,
															"name": "DUP6",
															"source": 2
														},
														{
															"begin": 4823,
															"end": 4838,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "103"
														},
														{
															"begin": 4823,
															"end": 4860,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 4823,
															"end": 4860,
															"name": "tag",
															"source": 2,
															"value": "102"
														},
														{
															"begin": 4823,
															"end": 4860,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": 4870,
															"end": 4896,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "104"
														},
														{
															"begin": 4880,
															"end": 4884,
															"name": "DUP6",
															"source": 2
														},
														{
															"begin": 4886,
															"end": 4888,
															"name": "DUP6",
															"source": 2
														},
														{
															"begin": 4890,
															"end": 4895,
															"name": "DUP6",
															"source": 2
														},
														{
															"begin": 4870,
															"end": 4879,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "105"
														},
														{
															"begin": 4870,
															"end": 4896,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 4870,
															"end": 4896,
															"name": "tag",
															"source": 2,
															"value": "104"
														},
														{
															"begin": 4870,
															"end": 4896,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP",
															"source": -1
														},
														{
															"begin": 4913,
															"end": 4917,
															"name": "PUSH",
															"source": 2,
															"value": "1"
														},
														{
															"begin": 4913,
															"end": 4917,
															"name": "SWAP5",
															"source": 2
														},
														{
															"begin": 4680,
															"end": 4924,
															"name": "SWAP4",
															"source": 2
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP",
															"source": -1
														},
														{
															"begin": 4680,
															"end": 4924,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 2434,
															"end": 2497,
															"name": "tag",
															"source": 9,
															"value": "45"
														},
														{
															"begin": 2434,
															"end": 2497,
															"name": "JUMPDEST",
															"source": 9
														},
														{
															"begin": 1531,
															"end": 1544,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "108"
														},
														{
															"begin": 1531,
															"end": 1542,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "109"
														},
														{
															"begin": 1531,
															"end": 1544,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 1531,
															"end": 1544,
															"name": "tag",
															"source": 0,
															"value": "108"
														},
														{
															"begin": 1531,
															"end": 1544,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 2480,
															"end": 2490,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "111"
														},
														{
															"begin": 2480,
															"end": 2488,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "112"
														},
														{
															"begin": 2480,
															"end": 2490,
															"jumpType": "[in]",
															"modifierDepth": 1,
															"name": "JUMP",
															"source": 9
														},
														{
															"begin": 2480,
															"end": 2490,
															"modifierDepth": 1,
															"name": "tag",
															"source": 9,
															"value": "111"
														},
														{
															"begin": 2480,
															"end": 2490,
															"modifierDepth": 1,
															"name": "JUMPDEST",
															"source": 9
														},
														{
															"begin": 2434,
															"end": 2497,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 9
														},
														{
															"begin": 2008,
															"end": 2179,
															"name": "tag",
															"source": 9,
															"value": "48"
														},
														{
															"begin": 2008,
															"end": 2179,
															"name": "JUMPDEST",
															"source": 9
														},
														{
															"begin": 1531,
															"end": 1544,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "114"
														},
														{
															"begin": 1531,
															"end": 1542,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "109"
														},
														{
															"begin": 1531,
															"end": 1544,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 1531,
															"end": 1544,
															"name": "tag",
															"source": 0,
															"value": "114"
														},
														{
															"begin": 1531,
															"end": 1544,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 667,
															"end": 684,
															"modifierDepth": 1,
															"name": "PUSH",
															"source": 9,
															"value": "84595161401484A000000"
														},
														{
															"begin": 2101,
															"end": 2107,
															"modifierDepth": 1,
															"name": "DUP2",
															"source": 9
														},
														{
															"begin": 2085,
															"end": 2098,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "116"
														},
														{
															"begin": 2881,
															"end": 2893,
															"name": "PUSH",
															"source": 2,
															"value": "2"
														},
														{
															"begin": 2881,
															"end": 2893,
															"name": "SLOAD",
															"source": 2
														},
														{
															"begin": 2881,
															"end": 2893,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 2803,
															"end": 2900,
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 2085,
															"end": 2098,
															"modifierDepth": 1,
															"name": "tag",
															"source": 9,
															"value": "116"
														},
														{
															"begin": 2085,
															"end": 2098,
															"modifierDepth": 1,
															"name": "JUMPDEST",
															"source": 9
														},
														{
															"begin": 2085,
															"end": 2107,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "117"
														},
														{
															"begin": 2085,
															"end": 2107,
															"modifierDepth": 1,
															"name": "SWAP2",
															"source": 9
														},
														{
															"begin": 2085,
															"end": 2107,
															"modifierDepth": 1,
															"name": "SWAP1",
															"source": 9
														},
														{
															"begin": 2085,
															"end": 2107,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "118"
														},
														{
															"begin": 2085,
															"end": 2107,
															"jumpType": "[in]",
															"modifierDepth": 1,
															"name": "JUMP",
															"source": 9
														},
														{
															"begin": 2085,
															"end": 2107,
															"modifierDepth": 1,
															"name": "tag",
															"source": 9,
															"value": "117"
														},
														{
															"begin": 2085,
															"end": 2107,
															"modifierDepth": 1,
															"name": "JUMPDEST",
															"source": 9
														},
														{
															"begin": 2085,
															"end": 2121,
															"modifierDepth": 1,
															"name": "GT",
															"source": 9
														},
														{
															"begin": 2085,
															"end": 2121,
															"modifierDepth": 1,
															"name": "ISZERO",
															"source": 9
														},
														{
															"begin": 2077,
															"end": 2145,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "119"
														},
														{
															"begin": 2077,
															"end": 2145,
															"modifierDepth": 1,
															"name": "JUMPI",
															"source": 9
														},
														{
															"begin": 2077,
															"end": 2145,
															"modifierDepth": 1,
															"name": "PUSH",
															"source": 9,
															"value": "40"
														},
														{
															"begin": 2077,
															"end": 2145,
															"name": "MLOAD",
															"source": 9
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "461BCD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "E5"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": 2077,
															"end": 2145,
															"name": "DUP2",
															"source": 9
														},
														{
															"begin": 2077,
															"end": 2145,
															"name": "MSTORE",
															"source": 9
														},
														{
															"begin": 3563,
															"end": 3565,
															"name": "PUSH",
															"source": 10,
															"value": "20"
														},
														{
															"begin": 2077,
															"end": 2145,
															"modifierDepth": 1,
															"name": "PUSH",
															"source": 9,
															"value": "4"
														},
														{
															"begin": 2077,
															"end": 2145,
															"name": "DUP3",
															"source": 9
														},
														{
															"begin": 2077,
															"end": 2145,
															"modifierDepth": 1,
															"name": "ADD",
															"source": 9
														},
														{
															"begin": 3545,
															"end": 3566,
															"name": "MSTORE",
															"source": 10
														},
														{
															"begin": 3602,
															"end": 3604,
															"name": "PUSH",
															"source": 10,
															"value": "13"
														},
														{
															"begin": 3582,
															"end": 3600,
															"name": "PUSH",
															"source": 10,
															"value": "24"
														},
														{
															"begin": 3582,
															"end": 3600,
															"name": "DUP3",
															"source": 10
														},
														{
															"begin": 3582,
															"end": 3600,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 3575,
															"end": 3605,
															"name": "MSTORE",
															"source": 10
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "13585E081CDD5C1C1B1E48195E18D959591959"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "6A"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": 3621,
															"end": 3639,
															"name": "PUSH",
															"source": 10,
															"value": "44"
														},
														{
															"begin": 3621,
															"end": 3639,
															"name": "DUP3",
															"source": 10
														},
														{
															"begin": 3621,
															"end": 3639,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 3614,
															"end": 3663,
															"name": "MSTORE",
															"source": 10
														},
														{
															"begin": 3680,
															"end": 3698,
															"name": "PUSH",
															"source": 10,
															"value": "64"
														},
														{
															"begin": 3680,
															"end": 3698,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 2077,
															"end": 2145,
															"modifierDepth": 1,
															"name": "tag",
															"source": 9,
															"value": "120"
														},
														{
															"begin": 2077,
															"end": 2145,
															"modifierDepth": 1,
															"name": "JUMPDEST",
															"source": 9
														},
														{
															"begin": 2077,
															"end": 2145,
															"modifierDepth": 1,
															"name": "PUSH",
															"source": 9,
															"value": "40"
														},
														{
															"begin": 2077,
															"end": 2145,
															"modifierDepth": 1,
															"name": "MLOAD",
															"source": 9
														},
														{
															"begin": 2077,
															"end": 2145,
															"modifierDepth": 1,
															"name": "DUP1",
															"source": 9
														},
														{
															"begin": 2077,
															"end": 2145,
															"modifierDepth": 1,
															"name": "SWAP2",
															"source": 9
														},
														{
															"begin": 2077,
															"end": 2145,
															"modifierDepth": 1,
															"name": "SUB",
															"source": 9
														},
														{
															"begin": 2077,
															"end": 2145,
															"modifierDepth": 1,
															"name": "SWAP1",
															"source": 9
														},
														{
															"begin": 2077,
															"end": 2145,
															"modifierDepth": 1,
															"name": "REVERT",
															"source": 9
														},
														{
															"begin": 2077,
															"end": 2145,
															"modifierDepth": 1,
															"name": "tag",
															"source": 9,
															"value": "119"
														},
														{
															"begin": 2077,
															"end": 2145,
															"modifierDepth": 1,
															"name": "JUMPDEST",
															"source": 9
														},
														{
															"begin": 2155,
															"end": 2172,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "122"
														},
														{
															"begin": 2161,
															"end": 2163,
															"modifierDepth": 1,
															"name": "DUP3",
															"source": 9
														},
														{
															"begin": 2165,
															"end": 2171,
															"modifierDepth": 1,
															"name": "DUP3",
															"source": 9
														},
														{
															"begin": 2155,
															"end": 2160,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "123"
														},
														{
															"begin": 2155,
															"end": 2172,
															"jumpType": "[in]",
															"modifierDepth": 1,
															"name": "JUMP",
															"source": 9
														},
														{
															"begin": 2155,
															"end": 2172,
															"modifierDepth": 1,
															"name": "tag",
															"source": 9,
															"value": "122"
														},
														{
															"begin": 2155,
															"end": 2172,
															"modifierDepth": 1,
															"name": "JUMPDEST",
															"source": 9
														},
														{
															"begin": 2008,
															"end": 2179,
															"name": "POP",
															"source": 9
														},
														{
															"begin": 2008,
															"end": 2179,
															"name": "POP",
															"source": 9
														},
														{
															"begin": 2008,
															"end": 2179,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 9
														},
														{
															"begin": 618,
															"end": 705,
															"name": "tag",
															"source": 4,
															"value": "52"
														},
														{
															"begin": 618,
															"end": 705,
															"name": "JUMPDEST",
															"source": 4
														},
														{
															"begin": 672,
															"end": 698,
															"name": "PUSH [tag]",
															"source": 4,
															"value": "125"
														},
														{
															"begin": 735,
															"end": 745,
															"name": "CALLER",
															"source": 6
														},
														{
															"begin": 692,
															"end": 697,
															"name": "DUP3",
															"source": 4
														},
														{
															"begin": 672,
															"end": 677,
															"name": "PUSH [tag]",
															"source": 4,
															"value": "127"
														},
														{
															"begin": 672,
															"end": 698,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 4
														},
														{
															"begin": 672,
															"end": 698,
															"name": "tag",
															"source": 4,
															"value": "125"
														},
														{
															"begin": 672,
															"end": 698,
															"name": "JUMPDEST",
															"source": 4
														},
														{
															"begin": 618,
															"end": 705,
															"name": "POP",
															"source": 4
														},
														{
															"begin": 618,
															"end": 705,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 4
														},
														{
															"begin": 1726,
															"end": 1810,
															"name": "tag",
															"source": 7,
															"value": "54"
														},
														{
															"begin": 1726,
															"end": 1810,
															"name": "JUMPDEST",
															"source": 7
														},
														{
															"begin": 1796,
															"end": 1803,
															"name": "PUSH",
															"source": 7,
															"value": "5"
														},
														{
															"begin": 1796,
															"end": 1803,
															"name": "SLOAD",
															"source": 7
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": 1796,
															"end": 1803,
															"name": "SWAP1",
															"source": 7
														},
														{
															"begin": 1796,
															"end": 1803,
															"name": "DIV",
															"source": 7
														},
														{
															"begin": 1796,
															"end": 1803,
															"name": "PUSH",
															"source": 7,
															"value": "FF"
														},
														{
															"begin": 1796,
															"end": 1803,
															"name": "AND",
															"source": 7
														},
														{
															"begin": 1796,
															"end": 1803,
															"name": "SWAP1",
															"source": 7
														},
														{
															"begin": 1726,
															"end": 1810,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 7
														},
														{
															"begin": 2293,
															"end": 2394,
															"name": "tag",
															"source": 0,
															"value": "62"
														},
														{
															"begin": 2293,
															"end": 2394,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 1531,
															"end": 1544,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "131"
														},
														{
															"begin": 1531,
															"end": 1542,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "109"
														},
														{
															"begin": 1531,
															"end": 1544,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 1531,
															"end": 1544,
															"name": "tag",
															"source": 0,
															"value": "131"
														},
														{
															"begin": 1531,
															"end": 1544,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 2357,
															"end": 2387,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "111"
														},
														{
															"begin": 2384,
															"end": 2385,
															"modifierDepth": 1,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 2357,
															"end": 2375,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "134"
														},
														{
															"begin": 2357,
															"end": 2387,
															"jumpType": "[in]",
															"modifierDepth": 1,
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 1021,
															"end": 1179,
															"name": "tag",
															"source": 4,
															"value": "65"
														},
														{
															"begin": 1021,
															"end": 1179,
															"name": "JUMPDEST",
															"source": 4
														},
														{
															"begin": 1096,
															"end": 1141,
															"name": "PUSH [tag]",
															"source": 4,
															"value": "136"
														},
														{
															"begin": 1112,
															"end": 1119,
															"name": "DUP3",
															"source": 4
														},
														{
															"begin": 735,
															"end": 745,
															"name": "CALLER",
															"source": 6
														},
														{
															"begin": 1135,
															"end": 1140,
															"name": "DUP4",
															"source": 4
														},
														{
															"begin": 1096,
															"end": 1111,
															"name": "PUSH [tag]",
															"source": 4,
															"value": "103"
														},
														{
															"begin": 1096,
															"end": 1141,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 4
														},
														{
															"begin": 1096,
															"end": 1141,
															"name": "tag",
															"source": 4,
															"value": "136"
														},
														{
															"begin": 1096,
															"end": 1141,
															"name": "JUMPDEST",
															"source": 4
														},
														{
															"begin": 1151,
															"end": 1172,
															"name": "PUSH [tag]",
															"source": 4,
															"value": "122"
														},
														{
															"begin": 1157,
															"end": 1164,
															"name": "DUP3",
															"source": 4
														},
														{
															"begin": 1166,
															"end": 1171,
															"name": "DUP3",
															"source": 4
														},
														{
															"begin": 1151,
															"end": 1156,
															"name": "PUSH [tag]",
															"source": 4,
															"value": "127"
														},
														{
															"begin": 1151,
															"end": 1172,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 4
														},
														{
															"begin": 2280,
															"end": 2339,
															"name": "tag",
															"source": 9,
															"value": "67"
														},
														{
															"begin": 2280,
															"end": 2339,
															"name": "JUMPDEST",
															"source": 9
														},
														{
															"begin": 1531,
															"end": 1544,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "140"
														},
														{
															"begin": 1531,
															"end": 1542,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "109"
														},
														{
															"begin": 1531,
															"end": 1544,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 1531,
															"end": 1544,
															"name": "tag",
															"source": 0,
															"value": "140"
														},
														{
															"begin": 1531,
															"end": 1544,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 2324,
															"end": 2332,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "111"
														},
														{
															"begin": 2324,
															"end": 2330,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "143"
														},
														{
															"begin": 2324,
															"end": 2332,
															"jumpType": "[in]",
															"modifierDepth": 1,
															"name": "JUMP",
															"source": 9
														},
														{
															"begin": 1638,
															"end": 1723,
															"name": "tag",
															"source": 0,
															"value": "69"
														},
														{
															"begin": 1638,
															"end": 1723,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 1710,
															"end": 1716,
															"name": "PUSH",
															"source": 0,
															"value": "5"
														},
														{
															"begin": 1710,
															"end": 1716,
															"name": "SLOAD",
															"source": 0
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 1710,
															"end": 1716,
															"name": "AND",
															"source": 0
														},
														{
															"begin": 1710,
															"end": 1716,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 1638,
															"end": 1723,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 1962,
															"end": 2055,
															"name": "tag",
															"source": 2,
															"value": "73"
														},
														{
															"begin": 1962,
															"end": 2055,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": 2009,
															"end": 2022,
															"name": "PUSH",
															"source": 2,
															"value": "60"
														},
														{
															"begin": 2041,
															"end": 2048,
															"name": "PUSH",
															"source": 2,
															"value": "4"
														},
														{
															"begin": 2034,
															"end": 2048,
															"name": "DUP1",
															"source": 2
														},
														{
															"begin": 2034,
															"end": 2048,
															"name": "SLOAD",
															"source": 2
														},
														{
															"begin": 2034,
															"end": 2048,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "88"
														},
														{
															"begin": 2034,
															"end": 2048,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 2034,
															"end": 2048,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "89"
														},
														{
															"begin": 2034,
															"end": 2048,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 3244,
															"end": 3422,
															"name": "tag",
															"source": 2,
															"value": "77"
														},
														{
															"begin": 3244,
															"end": 3422,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": 3313,
															"end": 3317,
															"name": "PUSH",
															"source": 2,
															"value": "0"
														},
														{
															"begin": 735,
															"end": 745,
															"name": "CALLER",
															"source": 6
														},
														{
															"begin": 3367,
															"end": 3394,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "97"
														},
														{
															"begin": 735,
															"end": 745,
															"name": "DUP2",
															"source": 6
														},
														{
															"begin": 3384,
															"end": 3386,
															"name": "DUP6",
															"source": 2
														},
														{
															"begin": 3388,
															"end": 3393,
															"name": "DUP6",
															"source": 2
														},
														{
															"begin": 3367,
															"end": 3376,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "105"
														},
														{
															"begin": 3367,
															"end": 3394,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 3455,
															"end": 3595,
															"name": "tag",
															"source": 2,
															"value": "82"
														},
														{
															"begin": 3455,
															"end": 3595,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 3561,
															"end": 3579,
															"name": "SWAP2",
															"source": 2
														},
														{
															"begin": 3561,
															"end": 3579,
															"name": "DUP3",
															"source": 2
														},
														{
															"begin": 3561,
															"end": 3579,
															"name": "AND",
															"source": 2
														},
														{
															"begin": 3535,
															"end": 3542,
															"name": "PUSH",
															"source": 2,
															"value": "0"
														},
														{
															"begin": 3561,
															"end": 3579,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 3561,
															"end": 3579,
															"name": "DUP2",
															"source": 2
														},
														{
															"begin": 3561,
															"end": 3579,
															"name": "MSTORE",
															"source": 2
														},
														{
															"begin": 3561,
															"end": 3572,
															"name": "PUSH",
															"source": 2,
															"value": "1"
														},
														{
															"begin": 3561,
															"end": 3579,
															"name": "PUSH",
															"source": 2,
															"value": "20"
														},
														{
															"begin": 3561,
															"end": 3579,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 3561,
															"end": 3579,
															"name": "DUP2",
															"source": 2
														},
														{
															"begin": 3561,
															"end": 3579,
															"name": "MSTORE",
															"source": 2
														},
														{
															"begin": 3561,
															"end": 3579,
															"name": "PUSH",
															"source": 2,
															"value": "40"
														},
														{
															"begin": 3561,
															"end": 3579,
															"name": "DUP1",
															"source": 2
														},
														{
															"begin": 3561,
															"end": 3579,
															"name": "DUP4",
															"source": 2
														},
														{
															"begin": 3561,
															"end": 3579,
															"name": "KECCAK256",
															"source": 2
														},
														{
															"begin": 3561,
															"end": 3588,
															"name": "SWAP4",
															"source": 2
														},
														{
															"begin": 3561,
															"end": 3588,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 3561,
															"end": 3588,
															"name": "SWAP5",
															"source": 2
														},
														{
															"begin": 3561,
															"end": 3588,
															"name": "AND",
															"source": 2
														},
														{
															"begin": 3561,
															"end": 3588,
															"name": "DUP3",
															"source": 2
														},
														{
															"begin": 3561,
															"end": 3588,
															"name": "MSTORE",
															"source": 2
														},
														{
															"begin": 3561,
															"end": 3588,
															"name": "SWAP2",
															"source": 2
														},
														{
															"begin": 3561,
															"end": 3588,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 3561,
															"end": 3588,
															"name": "SWAP2",
															"source": 2
														},
														{
															"begin": 3561,
															"end": 3588,
															"name": "MSTORE",
															"source": 2
														},
														{
															"begin": 3561,
															"end": 3588,
															"name": "KECCAK256",
															"source": 2
														},
														{
															"begin": 3561,
															"end": 3588,
															"name": "SLOAD",
															"source": 2
														},
														{
															"begin": 3561,
															"end": 3588,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 3455,
															"end": 3595,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 2543,
															"end": 2758,
															"name": "tag",
															"source": 0,
															"value": "86"
														},
														{
															"begin": 2543,
															"end": 2758,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 1531,
															"end": 1544,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "156"
														},
														{
															"begin": 1531,
															"end": 1542,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "109"
														},
														{
															"begin": 1531,
															"end": 1544,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 1531,
															"end": 1544,
															"name": "tag",
															"source": 0,
															"value": "156"
														},
														{
															"begin": 1531,
															"end": 1544,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 2627,
															"end": 2649,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 2627,
															"end": 2649,
															"modifierDepth": 1,
															"name": "AND",
															"source": 0
														},
														{
															"begin": 2623,
															"end": 2714,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "158"
														},
														{
															"begin": 2623,
															"end": 2714,
															"modifierDepth": 1,
															"name": "JUMPI",
															"source": 0
														},
														{
															"begin": 2700,
															"end": 2701,
															"modifierDepth": 1,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 2672,
															"end": 2703,
															"modifierDepth": 1,
															"name": "PUSH",
															"source": 0,
															"value": "40"
														},
														{
															"begin": 2672,
															"end": 2703,
															"modifierDepth": 1,
															"name": "MLOAD",
															"source": 0
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1E4FBDF7"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "E0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": 2672,
															"end": 2703,
															"modifierDepth": 1,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 2672,
															"end": 2703,
															"modifierDepth": 1,
															"name": "MSTORE",
															"source": 0
														},
														{
															"begin": 2672,
															"end": 2703,
															"modifierDepth": 1,
															"name": "PUSH",
															"source": 0,
															"value": "4"
														},
														{
															"begin": 2672,
															"end": 2703,
															"modifierDepth": 1,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 2672,
															"end": 2703,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "120"
														},
														{
															"begin": 2672,
															"end": 2703,
															"modifierDepth": 1,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 2672,
															"end": 2703,
															"modifierDepth": 1,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 2672,
															"end": 2703,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "71"
														},
														{
															"begin": 2672,
															"end": 2703,
															"jumpType": "[in]",
															"modifierDepth": 1,
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 2623,
															"end": 2714,
															"modifierDepth": 1,
															"name": "tag",
															"source": 0,
															"value": "158"
														},
														{
															"begin": 2623,
															"end": 2714,
															"modifierDepth": 1,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 2723,
															"end": 2751,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "125"
														},
														{
															"begin": 2742,
															"end": 2750,
															"modifierDepth": 1,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 2723,
															"end": 2741,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "134"
														},
														{
															"begin": 2723,
															"end": 2751,
															"jumpType": "[in]",
															"modifierDepth": 1,
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 8630,
															"end": 8758,
															"name": "tag",
															"source": 2,
															"value": "98"
														},
														{
															"begin": 8630,
															"end": 8758,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": 8714,
															"end": 8751,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "163"
														},
														{
															"begin": 8723,
															"end": 8728,
															"name": "DUP4",
															"source": 2
														},
														{
															"begin": 8730,
															"end": 8737,
															"name": "DUP4",
															"source": 2
														},
														{
															"begin": 8739,
															"end": 8744,
															"name": "DUP4",
															"source": 2
														},
														{
															"begin": 8746,
															"end": 8750,
															"name": "PUSH",
															"source": 2,
															"value": "1"
														},
														{
															"begin": 8714,
															"end": 8722,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "164"
														},
														{
															"begin": 8714,
															"end": 8751,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 8714,
															"end": 8751,
															"name": "tag",
															"source": 2,
															"value": "163"
														},
														{
															"begin": 8714,
															"end": 8751,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": 8630,
															"end": 8758,
															"name": "POP",
															"source": 2
														},
														{
															"begin": 8630,
															"end": 8758,
															"name": "POP",
															"source": 2
														},
														{
															"begin": 8630,
															"end": 8758,
															"name": "POP",
															"source": 2
														},
														{
															"begin": 8630,
															"end": 8758,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 10319,
															"end": 10795,
															"name": "tag",
															"source": 2,
															"value": "103"
														},
														{
															"begin": 10319,
															"end": 10795,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": 10418,
															"end": 10442,
															"name": "PUSH",
															"source": 2,
															"value": "0"
														},
														{
															"begin": 10445,
															"end": 10470,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "166"
														},
														{
															"begin": 10455,
															"end": 10460,
															"name": "DUP5",
															"source": 2
														},
														{
															"begin": 10462,
															"end": 10469,
															"name": "DUP5",
															"source": 2
														},
														{
															"begin": 10445,
															"end": 10454,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "82"
														},
														{
															"begin": 10445,
															"end": 10470,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 10445,
															"end": 10470,
															"name": "tag",
															"source": 2,
															"value": "166"
														},
														{
															"begin": 10445,
															"end": 10470,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": 10418,
															"end": 10470,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 10418,
															"end": 10470,
															"name": "POP",
															"source": 2
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "NOT",
															"source": -1
														},
														{
															"begin": 10484,
															"end": 10500,
															"name": "DUP2",
															"source": 2
														},
														{
															"begin": 10484,
															"end": 10520,
															"name": "LT",
															"source": 2
														},
														{
															"begin": 10480,
															"end": 10789,
															"name": "ISZERO",
															"source": 2
														},
														{
															"begin": 10480,
															"end": 10789,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "171"
														},
														{
															"begin": 10480,
															"end": 10789,
															"name": "JUMPI",
															"source": 2
														},
														{
															"begin": 10559,
															"end": 10564,
															"name": "DUP2",
															"source": 2
														},
														{
															"begin": 10540,
															"end": 10556,
															"name": "DUP2",
															"source": 2
														},
														{
															"begin": 10540,
															"end": 10564,
															"name": "LT",
															"source": 2
														},
														{
															"begin": 10536,
															"end": 10666,
															"name": "ISZERO",
															"source": 2
														},
														{
															"begin": 10536,
															"end": 10666,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "168"
														},
														{
															"begin": 10536,
															"end": 10666,
															"name": "JUMPI",
															"source": 2
														},
														{
															"begin": 10618,
															"end": 10625,
															"name": "DUP3",
															"source": 2
														},
														{
															"begin": 10627,
															"end": 10643,
															"name": "DUP2",
															"source": 2
														},
														{
															"begin": 10645,
															"end": 10650,
															"name": "DUP4",
															"source": 2
														},
														{
															"begin": 10591,
															"end": 10651,
															"name": "PUSH",
															"source": 2,
															"value": "40"
														},
														{
															"begin": 10591,
															"end": 10651,
															"name": "MLOAD",
															"source": 2
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "7DC7A0D9"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "E1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": 10591,
															"end": 10651,
															"name": "DUP2",
															"source": 2
														},
														{
															"begin": 10591,
															"end": 10651,
															"name": "MSTORE",
															"source": 2
														},
														{
															"begin": 10591,
															"end": 10651,
															"name": "PUSH",
															"source": 2,
															"value": "4"
														},
														{
															"begin": 10591,
															"end": 10651,
															"name": "ADD",
															"source": 2
														},
														{
															"begin": 10591,
															"end": 10651,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "120"
														},
														{
															"begin": 10591,
															"end": 10651,
															"name": "SWAP4",
															"source": 2
														},
														{
															"begin": 10591,
															"end": 10651,
															"name": "SWAP3",
															"source": 2
														},
														{
															"begin": 10591,
															"end": 10651,
															"name": "SWAP2",
															"source": 2
														},
														{
															"begin": 10591,
															"end": 10651,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 10591,
															"end": 10651,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "170"
														},
														{
															"begin": 10591,
															"end": 10651,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 10536,
															"end": 10666,
															"name": "tag",
															"source": 2,
															"value": "168"
														},
														{
															"begin": 10536,
															"end": 10666,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": 10707,
															"end": 10764,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "171"
														},
														{
															"begin": 10716,
															"end": 10721,
															"name": "DUP5",
															"source": 2
														},
														{
															"begin": 10723,
															"end": 10730,
															"name": "DUP5",
															"source": 2
														},
														{
															"begin": 10751,
															"end": 10756,
															"name": "DUP5",
															"source": 2
														},
														{
															"begin": 10732,
															"end": 10748,
															"name": "DUP5",
															"source": 2
														},
														{
															"begin": 10732,
															"end": 10756,
															"name": "SUB",
															"source": 2
														},
														{
															"begin": 10758,
															"end": 10763,
															"name": "PUSH",
															"source": 2,
															"value": "0"
														},
														{
															"begin": 10707,
															"end": 10715,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "164"
														},
														{
															"begin": 10707,
															"end": 10764,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 10707,
															"end": 10764,
															"name": "tag",
															"source": 2,
															"value": "171"
														},
														{
															"begin": 10707,
															"end": 10764,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": 10408,
															"end": 10795,
															"name": "POP",
															"source": 2
														},
														{
															"begin": 10319,
															"end": 10795,
															"name": "POP",
															"source": 2
														},
														{
															"begin": 10319,
															"end": 10795,
															"name": "POP",
															"source": 2
														},
														{
															"begin": 10319,
															"end": 10795,
															"name": "POP",
															"source": 2
														},
														{
															"begin": 10319,
															"end": 10795,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 5297,
															"end": 5597,
															"name": "tag",
															"source": 2,
															"value": "105"
														},
														{
															"begin": 5297,
															"end": 5597,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 5380,
															"end": 5398,
															"name": "DUP4",
															"source": 2
														},
														{
															"begin": 5380,
															"end": 5398,
															"name": "AND",
															"source": 2
														},
														{
															"begin": 5376,
															"end": 5462,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "173"
														},
														{
															"begin": 5376,
															"end": 5462,
															"name": "JUMPI",
															"source": 2
														},
														{
															"begin": 5448,
															"end": 5449,
															"name": "PUSH",
															"source": 2,
															"value": "0"
														},
														{
															"begin": 5421,
															"end": 5451,
															"name": "PUSH",
															"source": 2,
															"value": "40"
														},
														{
															"begin": 5421,
															"end": 5451,
															"name": "MLOAD",
															"source": 2
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "4B637E8F"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "E1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": 5421,
															"end": 5451,
															"name": "DUP2",
															"source": 2
														},
														{
															"begin": 5421,
															"end": 5451,
															"name": "MSTORE",
															"source": 2
														},
														{
															"begin": 5421,
															"end": 5451,
															"name": "PUSH",
															"source": 2,
															"value": "4"
														},
														{
															"begin": 5421,
															"end": 5451,
															"name": "ADD",
															"source": 2
														},
														{
															"begin": 5421,
															"end": 5451,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "120"
														},
														{
															"begin": 5421,
															"end": 5451,
															"name": "SWAP2",
															"source": 2
														},
														{
															"begin": 5421,
															"end": 5451,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 5421,
															"end": 5451,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "71"
														},
														{
															"begin": 5421,
															"end": 5451,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 5376,
															"end": 5462,
															"name": "tag",
															"source": 2,
															"value": "173"
														},
														{
															"begin": 5376,
															"end": 5462,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 5475,
															"end": 5491,
															"name": "DUP3",
															"source": 2
														},
														{
															"begin": 5475,
															"end": 5491,
															"name": "AND",
															"source": 2
														},
														{
															"begin": 5471,
															"end": 5557,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "175"
														},
														{
															"begin": 5471,
															"end": 5557,
															"name": "JUMPI",
															"source": 2
														},
														{
															"begin": 5543,
															"end": 5544,
															"name": "PUSH",
															"source": 2,
															"value": "0"
														},
														{
															"begin": 5514,
															"end": 5546,
															"name": "PUSH",
															"source": 2,
															"value": "40"
														},
														{
															"begin": 5514,
															"end": 5546,
															"name": "MLOAD",
															"source": 2
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "EC442F05"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "E0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": 5514,
															"end": 5546,
															"name": "DUP2",
															"source": 2
														},
														{
															"begin": 5514,
															"end": 5546,
															"name": "MSTORE",
															"source": 2
														},
														{
															"begin": 5514,
															"end": 5546,
															"name": "PUSH",
															"source": 2,
															"value": "4"
														},
														{
															"begin": 5514,
															"end": 5546,
															"name": "ADD",
															"source": 2
														},
														{
															"begin": 5514,
															"end": 5546,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "120"
														},
														{
															"begin": 5514,
															"end": 5546,
															"name": "SWAP2",
															"source": 2
														},
														{
															"begin": 5514,
															"end": 5546,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 5514,
															"end": 5546,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "71"
														},
														{
															"begin": 5514,
															"end": 5546,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 5471,
															"end": 5557,
															"name": "tag",
															"source": 2,
															"value": "175"
														},
														{
															"begin": 5471,
															"end": 5557,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": 5566,
															"end": 5590,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "163"
														},
														{
															"begin": 5574,
															"end": 5578,
															"name": "DUP4",
															"source": 2
														},
														{
															"begin": 5580,
															"end": 5582,
															"name": "DUP4",
															"source": 2
														},
														{
															"begin": 5584,
															"end": 5589,
															"name": "DUP4",
															"source": 2
														},
														{
															"begin": 5566,
															"end": 5573,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "178"
														},
														{
															"begin": 5566,
															"end": 5590,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 1796,
															"end": 1958,
															"name": "tag",
															"source": 0,
															"value": "109"
														},
														{
															"begin": 1796,
															"end": 1958,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 735,
															"end": 745,
															"name": "CALLER",
															"source": 6
														},
														{
															"begin": 1855,
															"end": 1862,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "181"
														},
														{
															"begin": 1855,
															"end": 1860,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "69"
														},
														{
															"begin": 1855,
															"end": 1862,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 1855,
															"end": 1862,
															"name": "tag",
															"source": 0,
															"value": "181"
														},
														{
															"begin": 1855,
															"end": 1862,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 1855,
															"end": 1878,
															"name": "AND",
															"source": 0
														},
														{
															"begin": 1855,
															"end": 1878,
															"name": "EQ",
															"source": 0
														},
														{
															"begin": 1851,
															"end": 1952,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "111"
														},
														{
															"begin": 1851,
															"end": 1952,
															"name": "JUMPI",
															"source": 0
														},
														{
															"begin": 735,
															"end": 745,
															"name": "CALLER",
															"source": 6
														},
														{
															"begin": 1901,
															"end": 1941,
															"name": "PUSH",
															"source": 0,
															"value": "40"
														},
														{
															"begin": 1901,
															"end": 1941,
															"name": "MLOAD",
															"source": 0
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "118CDAA7"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "E0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": 1901,
															"end": 1941,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 1901,
															"end": 1941,
															"name": "MSTORE",
															"source": 0
														},
														{
															"begin": 1901,
															"end": 1941,
															"name": "PUSH",
															"source": 0,
															"value": "4"
														},
														{
															"begin": 1901,
															"end": 1941,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 1901,
															"end": 1941,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "120"
														},
														{
															"begin": 1901,
															"end": 1941,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 1901,
															"end": 1941,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 1901,
															"end": 1941,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "71"
														},
														{
															"begin": 1901,
															"end": 1941,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 2586,
															"end": 2703,
															"name": "tag",
															"source": 7,
															"value": "112"
														},
														{
															"begin": 2586,
															"end": 2703,
															"name": "JUMPDEST",
															"source": 7
														},
														{
															"begin": 1597,
															"end": 1613,
															"name": "PUSH [tag]",
															"source": 7,
															"value": "186"
														},
														{
															"begin": 1597,
															"end": 1611,
															"name": "PUSH [tag]",
															"source": 7,
															"value": "187"
														},
														{
															"begin": 1597,
															"end": 1613,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 7
														},
														{
															"begin": 1597,
															"end": 1613,
															"name": "tag",
															"source": 7,
															"value": "186"
														},
														{
															"begin": 1597,
															"end": 1613,
															"name": "JUMPDEST",
															"source": 7
														},
														{
															"begin": 2644,
															"end": 2651,
															"modifierDepth": 1,
															"name": "PUSH",
															"source": 7,
															"value": "5"
														},
														{
															"begin": 2644,
															"end": 2659,
															"name": "DUP1",
															"source": 7
														},
														{
															"begin": 2644,
															"end": 2659,
															"name": "SLOAD",
															"source": 7
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "FF"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "NOT",
															"source": -1
														},
														{
															"begin": 2644,
															"end": 2659,
															"modifierDepth": 1,
															"name": "AND",
															"source": 7
														},
														{
															"begin": 2644,
															"end": 2659,
															"name": "SWAP1",
															"source": 7
														},
														{
															"begin": 2644,
															"end": 2659,
															"name": "SSTORE",
															"source": 7
														},
														{
															"begin": 2674,
															"end": 2696,
															"modifierDepth": 1,
															"name": "PUSH",
															"source": 7,
															"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
														},
														{
															"begin": 735,
															"end": 745,
															"name": "CALLER",
															"source": 6
														},
														{
															"begin": 2683,
															"end": 2695,
															"modifierDepth": 1,
															"name": "tag",
															"source": 7,
															"value": "189"
														},
														{
															"begin": 2683,
															"end": 2695,
															"modifierDepth": 1,
															"name": "JUMPDEST",
															"source": 7
														},
														{
															"begin": 2674,
															"end": 2696,
															"modifierDepth": 1,
															"name": "PUSH",
															"source": 7,
															"value": "40"
														},
														{
															"begin": 2674,
															"end": 2696,
															"modifierDepth": 1,
															"name": "MLOAD",
															"source": 7
														},
														{
															"begin": 2674,
															"end": 2696,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 7,
															"value": "190"
														},
														{
															"begin": 2674,
															"end": 2696,
															"modifierDepth": 1,
															"name": "SWAP2",
															"source": 7
														},
														{
															"begin": 2674,
															"end": 2696,
															"modifierDepth": 1,
															"name": "SWAP1",
															"source": 7
														},
														{
															"begin": 2674,
															"end": 2696,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 7,
															"value": "71"
														},
														{
															"begin": 2674,
															"end": 2696,
															"jumpType": "[in]",
															"modifierDepth": 1,
															"name": "JUMP",
															"source": 7
														},
														{
															"begin": 2674,
															"end": 2696,
															"modifierDepth": 1,
															"name": "tag",
															"source": 7,
															"value": "190"
														},
														{
															"begin": 2674,
															"end": 2696,
															"modifierDepth": 1,
															"name": "JUMPDEST",
															"source": 7
														},
														{
															"begin": 2674,
															"end": 2696,
															"modifierDepth": 1,
															"name": "PUSH",
															"source": 7,
															"value": "40"
														},
														{
															"begin": 2674,
															"end": 2696,
															"modifierDepth": 1,
															"name": "MLOAD",
															"source": 7
														},
														{
															"begin": 2674,
															"end": 2696,
															"modifierDepth": 1,
															"name": "DUP1",
															"source": 7
														},
														{
															"begin": 2674,
															"end": 2696,
															"modifierDepth": 1,
															"name": "SWAP2",
															"source": 7
														},
														{
															"begin": 2674,
															"end": 2696,
															"modifierDepth": 1,
															"name": "SUB",
															"source": 7
														},
														{
															"begin": 2674,
															"end": 2696,
															"modifierDepth": 1,
															"name": "SWAP1",
															"source": 7
														},
														{
															"begin": 2674,
															"end": 2696,
															"modifierDepth": 1,
															"name": "LOG1",
															"source": 7
														},
														{
															"begin": 2586,
															"end": 2703,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 7
														},
														{
															"begin": 7362,
															"end": 7570,
															"name": "tag",
															"source": 2,
															"value": "123"
														},
														{
															"begin": 7362,
															"end": 7570,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 7432,
															"end": 7453,
															"name": "DUP3",
															"source": 2
														},
														{
															"begin": 7432,
															"end": 7453,
															"name": "AND",
															"source": 2
														},
														{
															"begin": 7428,
															"end": 7519,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "192"
														},
														{
															"begin": 7428,
															"end": 7519,
															"name": "JUMPI",
															"source": 2
														},
														{
															"begin": 7505,
															"end": 7506,
															"name": "PUSH",
															"source": 2,
															"value": "0"
														},
														{
															"begin": 7476,
															"end": 7508,
															"name": "PUSH",
															"source": 2,
															"value": "40"
														},
														{
															"begin": 7476,
															"end": 7508,
															"name": "MLOAD",
															"source": 2
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "EC442F05"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "E0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": 7476,
															"end": 7508,
															"name": "DUP2",
															"source": 2
														},
														{
															"begin": 7476,
															"end": 7508,
															"name": "MSTORE",
															"source": 2
														},
														{
															"begin": 7476,
															"end": 7508,
															"name": "PUSH",
															"source": 2,
															"value": "4"
														},
														{
															"begin": 7476,
															"end": 7508,
															"name": "ADD",
															"source": 2
														},
														{
															"begin": 7476,
															"end": 7508,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "120"
														},
														{
															"begin": 7476,
															"end": 7508,
															"name": "SWAP2",
															"source": 2
														},
														{
															"begin": 7476,
															"end": 7508,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 7476,
															"end": 7508,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "71"
														},
														{
															"begin": 7476,
															"end": 7508,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 7428,
															"end": 7519,
															"name": "tag",
															"source": 2,
															"value": "192"
														},
														{
															"begin": 7428,
															"end": 7519,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": 7528,
															"end": 7563,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "122"
														},
														{
															"begin": 7544,
															"end": 7545,
															"name": "PUSH",
															"source": 2,
															"value": "0"
														},
														{
															"begin": 7548,
															"end": 7555,
															"name": "DUP4",
															"source": 2
														},
														{
															"begin": 7557,
															"end": 7562,
															"name": "DUP4",
															"source": 2
														},
														{
															"begin": 7528,
															"end": 7535,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "178"
														},
														{
															"begin": 7528,
															"end": 7563,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 7888,
															"end": 8094,
															"name": "tag",
															"source": 2,
															"value": "127"
														},
														{
															"begin": 7888,
															"end": 8094,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 7958,
															"end": 7979,
															"name": "DUP3",
															"source": 2
														},
														{
															"begin": 7958,
															"end": 7979,
															"name": "AND",
															"source": 2
														},
														{
															"begin": 7954,
															"end": 8043,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "196"
														},
														{
															"begin": 7954,
															"end": 8043,
															"name": "JUMPI",
															"source": 2
														},
														{
															"begin": 8029,
															"end": 8030,
															"name": "PUSH",
															"source": 2,
															"value": "0"
														},
														{
															"begin": 8002,
															"end": 8032,
															"name": "PUSH",
															"source": 2,
															"value": "40"
														},
														{
															"begin": 8002,
															"end": 8032,
															"name": "MLOAD",
															"source": 2
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "4B637E8F"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "E1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": 8002,
															"end": 8032,
															"name": "DUP2",
															"source": 2
														},
														{
															"begin": 8002,
															"end": 8032,
															"name": "MSTORE",
															"source": 2
														},
														{
															"begin": 8002,
															"end": 8032,
															"name": "PUSH",
															"source": 2,
															"value": "4"
														},
														{
															"begin": 8002,
															"end": 8032,
															"name": "ADD",
															"source": 2
														},
														{
															"begin": 8002,
															"end": 8032,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "120"
														},
														{
															"begin": 8002,
															"end": 8032,
															"name": "SWAP2",
															"source": 2
														},
														{
															"begin": 8002,
															"end": 8032,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 8002,
															"end": 8032,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "71"
														},
														{
															"begin": 8002,
															"end": 8032,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 7954,
															"end": 8043,
															"name": "tag",
															"source": 2,
															"value": "196"
														},
														{
															"begin": 7954,
															"end": 8043,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": 8052,
															"end": 8087,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "122"
														},
														{
															"begin": 8060,
															"end": 8067,
															"name": "DUP3",
															"source": 2
														},
														{
															"begin": 8077,
															"end": 8078,
															"name": "PUSH",
															"source": 2,
															"value": "0"
														},
														{
															"begin": 8081,
															"end": 8086,
															"name": "DUP4",
															"source": 2
														},
														{
															"begin": 8052,
															"end": 8059,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "178"
														},
														{
															"begin": 8052,
															"end": 8087,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 2912,
															"end": 3099,
															"name": "tag",
															"source": 0,
															"value": "134"
														},
														{
															"begin": 2912,
															"end": 3099,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 3004,
															"end": 3010,
															"name": "PUSH",
															"source": 0,
															"value": "5"
														},
														{
															"begin": 3004,
															"end": 3010,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 3004,
															"end": 3010,
															"name": "SLOAD",
															"source": 0
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 3020,
															"end": 3037,
															"name": "DUP4",
															"source": 0
														},
														{
															"begin": 3020,
															"end": 3037,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 3020,
															"end": 3037,
															"name": "AND",
															"source": 0
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "NOT",
															"source": -1
														},
														{
															"begin": 3020,
															"end": 3037,
															"name": "DUP4",
															"source": 0
														},
														{
															"begin": 3020,
															"end": 3037,
															"name": "AND",
															"source": 0
														},
														{
															"begin": 3020,
															"end": 3037,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 3020,
															"end": 3037,
															"name": "OR",
															"source": 0
														},
														{
															"begin": 3020,
															"end": 3037,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 3020,
															"end": 3037,
															"name": "SWAP4",
															"source": 0
														},
														{
															"begin": 3020,
															"end": 3037,
															"name": "SSTORE",
															"source": 0
														},
														{
															"begin": 3052,
															"end": 3092,
															"name": "PUSH",
															"source": 0,
															"value": "40"
														},
														{
															"begin": 3052,
															"end": 3092,
															"name": "MLOAD",
															"source": 0
														},
														{
															"begin": 3004,
															"end": 3010,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 3004,
															"end": 3010,
															"name": "AND",
															"source": 0
														},
														{
															"begin": 3004,
															"end": 3010,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 3020,
															"end": 3037,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 3004,
															"end": 3010,
															"name": "DUP3",
															"source": 0
														},
														{
															"begin": 3004,
															"end": 3010,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 3052,
															"end": 3092,
															"name": "PUSH",
															"source": 0,
															"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
														},
														{
															"begin": 3052,
															"end": 3092,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 2985,
															"end": 3001,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 2985,
															"end": 3001,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 3052,
															"end": 3092,
															"name": "LOG3",
															"source": 0
														},
														{
															"begin": 2975,
															"end": 3099,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 2912,
															"end": 3099,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 2912,
															"end": 3099,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 2339,
															"end": 2454,
															"name": "tag",
															"source": 7,
															"value": "143"
														},
														{
															"begin": 2339,
															"end": 2454,
															"name": "JUMPDEST",
															"source": 7
														},
														{
															"begin": 1350,
															"end": 1369,
															"name": "PUSH [tag]",
															"source": 7,
															"value": "201"
														},
														{
															"begin": 1350,
															"end": 1367,
															"name": "PUSH [tag]",
															"source": 7,
															"value": "202"
														},
														{
															"begin": 1350,
															"end": 1369,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 7
														},
														{
															"begin": 1350,
															"end": 1369,
															"name": "tag",
															"source": 7,
															"value": "201"
														},
														{
															"begin": 1350,
															"end": 1369,
															"name": "JUMPDEST",
															"source": 7
														},
														{
															"begin": 2398,
															"end": 2405,
															"modifierDepth": 1,
															"name": "PUSH",
															"source": 7,
															"value": "5"
														},
														{
															"begin": 2398,
															"end": 2412,
															"name": "DUP1",
															"source": 7
														},
														{
															"begin": 2398,
															"end": 2412,
															"name": "SLOAD",
															"source": 7
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "FF"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "NOT",
															"source": -1
														},
														{
															"begin": 2398,
															"end": 2412,
															"modifierDepth": 1,
															"name": "AND",
															"source": 7
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": 2398,
															"end": 2412,
															"modifierDepth": 1,
															"name": "OR",
															"source": 7
														},
														{
															"begin": 2398,
															"end": 2412,
															"name": "SWAP1",
															"source": 7
														},
														{
															"begin": 2398,
															"end": 2412,
															"name": "SSTORE",
															"source": 7
														},
														{
															"begin": 2427,
															"end": 2447,
															"modifierDepth": 1,
															"name": "PUSH",
															"source": 7,
															"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
														},
														{
															"begin": 2434,
															"end": 2446,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 7,
															"value": "189"
														},
														{
															"begin": 735,
															"end": 745,
															"name": "CALLER",
															"source": 6
														},
														{
															"begin": 735,
															"end": 745,
															"name": "SWAP1",
															"source": 6
														},
														{
															"begin": 656,
															"end": 752,
															"name": "JUMP",
															"source": 6
														},
														{
															"begin": 9605,
															"end": 10037,
															"name": "tag",
															"source": 2,
															"value": "164"
														},
														{
															"begin": 9605,
															"end": 10037,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 9717,
															"end": 9736,
															"name": "DUP5",
															"source": 2
														},
														{
															"begin": 9717,
															"end": 9736,
															"name": "AND",
															"source": 2
														},
														{
															"begin": 9713,
															"end": 9802,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "207"
														},
														{
															"begin": 9713,
															"end": 9802,
															"name": "JUMPI",
															"source": 2
														},
														{
															"begin": 9788,
															"end": 9789,
															"name": "PUSH",
															"source": 2,
															"value": "0"
														},
														{
															"begin": 9759,
															"end": 9791,
															"name": "PUSH",
															"source": 2,
															"value": "40"
														},
														{
															"begin": 9759,
															"end": 9791,
															"name": "MLOAD",
															"source": 2
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "E602DF05"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "E0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": 9759,
															"end": 9791,
															"name": "DUP2",
															"source": 2
														},
														{
															"begin": 9759,
															"end": 9791,
															"name": "MSTORE",
															"source": 2
														},
														{
															"begin": 9759,
															"end": 9791,
															"name": "PUSH",
															"source": 2,
															"value": "4"
														},
														{
															"begin": 9759,
															"end": 9791,
															"name": "ADD",
															"source": 2
														},
														{
															"begin": 9759,
															"end": 9791,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "120"
														},
														{
															"begin": 9759,
															"end": 9791,
															"name": "SWAP2",
															"source": 2
														},
														{
															"begin": 9759,
															"end": 9791,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 9759,
															"end": 9791,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "71"
														},
														{
															"begin": 9759,
															"end": 9791,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 9713,
															"end": 9802,
															"name": "tag",
															"source": 2,
															"value": "207"
														},
														{
															"begin": 9713,
															"end": 9802,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 9815,
															"end": 9836,
															"name": "DUP4",
															"source": 2
														},
														{
															"begin": 9815,
															"end": 9836,
															"name": "AND",
															"source": 2
														},
														{
															"begin": 9811,
															"end": 9901,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "209"
														},
														{
															"begin": 9811,
															"end": 9901,
															"name": "JUMPI",
															"source": 2
														},
														{
															"begin": 9887,
															"end": 9888,
															"name": "PUSH",
															"source": 2,
															"value": "0"
														},
														{
															"begin": 9859,
															"end": 9890,
															"name": "PUSH",
															"source": 2,
															"value": "40"
														},
														{
															"begin": 9859,
															"end": 9890,
															"name": "MLOAD",
															"source": 2
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "4A1406B1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "E1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": 9859,
															"end": 9890,
															"name": "DUP2",
															"source": 2
														},
														{
															"begin": 9859,
															"end": 9890,
															"name": "MSTORE",
															"source": 2
														},
														{
															"begin": 9859,
															"end": 9890,
															"name": "PUSH",
															"source": 2,
															"value": "4"
														},
														{
															"begin": 9859,
															"end": 9890,
															"name": "ADD",
															"source": 2
														},
														{
															"begin": 9859,
															"end": 9890,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "120"
														},
														{
															"begin": 9859,
															"end": 9890,
															"name": "SWAP2",
															"source": 2
														},
														{
															"begin": 9859,
															"end": 9890,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 9859,
															"end": 9890,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "71"
														},
														{
															"begin": 9859,
															"end": 9890,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 9811,
															"end": 9901,
															"name": "tag",
															"source": 2,
															"value": "209"
														},
														{
															"begin": 9811,
															"end": 9901,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 9910,
															"end": 9928,
															"name": "DUP1",
															"source": 2
														},
														{
															"begin": 9910,
															"end": 9928,
															"name": "DUP6",
															"source": 2
														},
														{
															"begin": 9910,
															"end": 9928,
															"name": "AND",
															"source": 2
														},
														{
															"begin": 9910,
															"end": 9928,
															"name": "PUSH",
															"source": 2,
															"value": "0"
														},
														{
															"begin": 9910,
															"end": 9928,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 9910,
															"end": 9928,
															"name": "DUP2",
															"source": 2
														},
														{
															"begin": 9910,
															"end": 9928,
															"name": "MSTORE",
															"source": 2
														},
														{
															"begin": 9910,
															"end": 9921,
															"name": "PUSH",
															"source": 2,
															"value": "1"
														},
														{
															"begin": 9910,
															"end": 9928,
															"name": "PUSH",
															"source": 2,
															"value": "20"
														},
														{
															"begin": 9910,
															"end": 9928,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 9910,
															"end": 9928,
															"name": "DUP2",
															"source": 2
														},
														{
															"begin": 9910,
															"end": 9928,
															"name": "MSTORE",
															"source": 2
														},
														{
															"begin": 9910,
															"end": 9928,
															"name": "PUSH",
															"source": 2,
															"value": "40"
														},
														{
															"begin": 9910,
															"end": 9928,
															"name": "DUP1",
															"source": 2
														},
														{
															"begin": 9910,
															"end": 9928,
															"name": "DUP4",
															"source": 2
														},
														{
															"begin": 9910,
															"end": 9928,
															"name": "KECCAK256",
															"source": 2
														},
														{
															"begin": 9910,
															"end": 9937,
															"name": "SWAP4",
															"source": 2
														},
														{
															"begin": 9910,
															"end": 9937,
															"name": "DUP8",
															"source": 2
														},
														{
															"begin": 9910,
															"end": 9937,
															"name": "AND",
															"source": 2
														},
														{
															"begin": 9910,
															"end": 9937,
															"name": "DUP4",
															"source": 2
														},
														{
															"begin": 9910,
															"end": 9937,
															"name": "MSTORE",
															"source": 2
														},
														{
															"begin": 9910,
															"end": 9937,
															"name": "SWAP3",
															"source": 2
														},
														{
															"begin": 9910,
															"end": 9937,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 9910,
															"end": 9937,
															"name": "MSTORE",
															"source": 2
														},
														{
															"begin": 9910,
															"end": 9937,
															"name": "KECCAK256",
															"source": 2
														},
														{
															"begin": 9910,
															"end": 9945,
															"name": "DUP3",
															"source": 2
														},
														{
															"begin": 9910,
															"end": 9945,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 9910,
															"end": 9945,
															"name": "SSTORE",
															"source": 2
														},
														{
															"begin": 9955,
															"end": 10031,
															"name": "DUP1",
															"source": 2
														},
														{
															"begin": 9955,
															"end": 10031,
															"name": "ISZERO",
															"source": 2
														},
														{
															"begin": 9955,
															"end": 10031,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "171"
														},
														{
															"begin": 9955,
															"end": 10031,
															"name": "JUMPI",
															"source": 2
														},
														{
															"begin": 10005,
															"end": 10012,
															"name": "DUP3",
															"source": 2
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 9989,
															"end": 10020,
															"name": "AND",
															"source": 2
														},
														{
															"begin": 9998,
															"end": 10003,
															"name": "DUP5",
															"source": 2
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 9989,
															"end": 10020,
															"name": "AND",
															"source": 2
														},
														{
															"begin": 9989,
															"end": 10020,
															"name": "PUSH",
															"source": 2,
															"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
														},
														{
															"begin": 10014,
															"end": 10019,
															"name": "DUP5",
															"source": 2
														},
														{
															"begin": 9989,
															"end": 10020,
															"name": "PUSH",
															"source": 2,
															"value": "40"
														},
														{
															"begin": 9989,
															"end": 10020,
															"name": "MLOAD",
															"source": 2
														},
														{
															"begin": 9989,
															"end": 10020,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "212"
														},
														{
															"begin": 9989,
															"end": 10020,
															"name": "SWAP2",
															"source": 2
														},
														{
															"begin": 1342,
															"end": 1367,
															"name": "DUP2",
															"source": 10
														},
														{
															"begin": 1342,
															"end": 1367,
															"name": "MSTORE",
															"source": 10
														},
														{
															"begin": 1330,
															"end": 1332,
															"name": "PUSH",
															"source": 10,
															"value": "20"
														},
														{
															"begin": 1315,
															"end": 1333,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 1315,
															"end": 1333,
															"name": "SWAP1",
															"source": 10
														},
														{
															"begin": 1196,
															"end": 1373,
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 9989,
															"end": 10020,
															"name": "tag",
															"source": 2,
															"value": "212"
														},
														{
															"begin": 9989,
															"end": 10020,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": 9989,
															"end": 10020,
															"name": "PUSH",
															"source": 2,
															"value": "40"
														},
														{
															"begin": 9989,
															"end": 10020,
															"name": "MLOAD",
															"source": 2
														},
														{
															"begin": 9989,
															"end": 10020,
															"name": "DUP1",
															"source": 2
														},
														{
															"begin": 9989,
															"end": 10020,
															"name": "SWAP2",
															"source": 2
														},
														{
															"begin": 9989,
															"end": 10020,
															"name": "SUB",
															"source": 2
														},
														{
															"begin": 9989,
															"end": 10020,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 9989,
															"end": 10020,
															"name": "LOG3",
															"source": 2
														},
														{
															"begin": 9605,
															"end": 10037,
															"name": "POP",
															"source": 2
														},
														{
															"begin": 9605,
															"end": 10037,
															"name": "POP",
															"source": 2
														},
														{
															"begin": 9605,
															"end": 10037,
															"name": "POP",
															"source": 2
														},
														{
															"begin": 9605,
															"end": 10037,
															"name": "POP",
															"source": 2
														},
														{
															"begin": 9605,
															"end": 10037,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 2584,
															"end": 2751,
															"name": "tag",
															"source": 9,
															"value": "178"
														},
														{
															"begin": 2584,
															"end": 2751,
															"name": "JUMPDEST",
															"source": 9
														},
														{
															"begin": 1350,
															"end": 1369,
															"name": "PUSH [tag]",
															"source": 7,
															"value": "214"
														},
														{
															"begin": 1350,
															"end": 1367,
															"name": "PUSH [tag]",
															"source": 7,
															"value": "202"
														},
														{
															"begin": 1350,
															"end": 1369,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 7
														},
														{
															"begin": 1350,
															"end": 1369,
															"name": "tag",
															"source": 7,
															"value": "214"
														},
														{
															"begin": 1350,
															"end": 1369,
															"name": "JUMPDEST",
															"source": 7
														},
														{
															"begin": 2714,
															"end": 2744,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "163"
														},
														{
															"begin": 2728,
															"end": 2732,
															"modifierDepth": 1,
															"name": "DUP4",
															"source": 9
														},
														{
															"begin": 2734,
															"end": 2736,
															"modifierDepth": 1,
															"name": "DUP4",
															"source": 9
														},
														{
															"begin": 2738,
															"end": 2743,
															"modifierDepth": 1,
															"name": "DUP4",
															"source": 9
														},
														{
															"begin": 2714,
															"end": 2727,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "217"
														},
														{
															"begin": 2714,
															"end": 2744,
															"jumpType": "[in]",
															"modifierDepth": 1,
															"name": "JUMP",
															"source": 9
														},
														{
															"begin": 2078,
															"end": 2204,
															"name": "tag",
															"source": 7,
															"value": "187"
														},
														{
															"begin": 2078,
															"end": 2204,
															"name": "JUMPDEST",
															"source": 7
														},
														{
															"begin": 2141,
															"end": 2149,
															"name": "PUSH [tag]",
															"source": 7,
															"value": "219"
														},
														{
															"begin": 2141,
															"end": 2147,
															"name": "PUSH [tag]",
															"source": 7,
															"value": "54"
														},
														{
															"begin": 2141,
															"end": 2149,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 7
														},
														{
															"begin": 2141,
															"end": 2149,
															"name": "tag",
															"source": 7,
															"value": "219"
														},
														{
															"begin": 2141,
															"end": 2149,
															"name": "JUMPDEST",
															"source": 7
														},
														{
															"begin": 2136,
															"end": 2198,
															"name": "PUSH [tag]",
															"source": 7,
															"value": "111"
														},
														{
															"begin": 2136,
															"end": 2198,
															"name": "JUMPI",
															"source": 7
														},
														{
															"begin": 2172,
															"end": 2187,
															"name": "PUSH",
															"source": 7,
															"value": "40"
														},
														{
															"begin": 2172,
															"end": 2187,
															"name": "MLOAD",
															"source": 7
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "8DFC202B"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "E0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": 2172,
															"end": 2187,
															"name": "DUP2",
															"source": 7
														},
														{
															"begin": 2172,
															"end": 2187,
															"name": "MSTORE",
															"source": 7
														},
														{
															"begin": 2172,
															"end": 2187,
															"name": "PUSH",
															"source": 7,
															"value": "4"
														},
														{
															"begin": 2172,
															"end": 2187,
															"name": "ADD",
															"source": 7
														},
														{
															"begin": 2172,
															"end": 2187,
															"name": "PUSH",
															"source": 7,
															"value": "40"
														},
														{
															"begin": 2172,
															"end": 2187,
															"name": "MLOAD",
															"source": 7
														},
														{
															"begin": 2172,
															"end": 2187,
															"name": "DUP1",
															"source": 7
														},
														{
															"begin": 2172,
															"end": 2187,
															"name": "SWAP2",
															"source": 7
														},
														{
															"begin": 2172,
															"end": 2187,
															"name": "SUB",
															"source": 7
														},
														{
															"begin": 2172,
															"end": 2187,
															"name": "SWAP1",
															"source": 7
														},
														{
															"begin": 2172,
															"end": 2187,
															"name": "REVERT",
															"source": 7
														},
														{
															"begin": 1878,
															"end": 2006,
															"name": "tag",
															"source": 7,
															"value": "202"
														},
														{
															"begin": 1878,
															"end": 2006,
															"name": "JUMPDEST",
															"source": 7
														},
														{
															"begin": 1943,
															"end": 1951,
															"name": "PUSH [tag]",
															"source": 7,
															"value": "222"
														},
														{
															"begin": 1943,
															"end": 1949,
															"name": "PUSH [tag]",
															"source": 7,
															"value": "54"
														},
														{
															"begin": 1943,
															"end": 1951,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 7
														},
														{
															"begin": 1943,
															"end": 1951,
															"name": "tag",
															"source": 7,
															"value": "222"
														},
														{
															"begin": 1943,
															"end": 1951,
															"name": "JUMPDEST",
															"source": 7
														},
														{
															"begin": 1939,
															"end": 2000,
															"name": "ISZERO",
															"source": 7
														},
														{
															"begin": 1939,
															"end": 2000,
															"name": "PUSH [tag]",
															"source": 7,
															"value": "111"
														},
														{
															"begin": 1939,
															"end": 2000,
															"name": "JUMPI",
															"source": 7
														},
														{
															"begin": 1974,
															"end": 1989,
															"name": "PUSH",
															"source": 7,
															"value": "40"
														},
														{
															"begin": 1974,
															"end": 1989,
															"name": "MLOAD",
															"source": 7
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "D93C0665"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "E0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": 1974,
															"end": 1989,
															"name": "DUP2",
															"source": 7
														},
														{
															"begin": 1974,
															"end": 1989,
															"name": "MSTORE",
															"source": 7
														},
														{
															"begin": 1974,
															"end": 1989,
															"name": "PUSH",
															"source": 7,
															"value": "4"
														},
														{
															"begin": 1974,
															"end": 1989,
															"name": "ADD",
															"source": 7
														},
														{
															"begin": 1974,
															"end": 1989,
															"name": "PUSH",
															"source": 7,
															"value": "40"
														},
														{
															"begin": 1974,
															"end": 1989,
															"name": "MLOAD",
															"source": 7
														},
														{
															"begin": 1974,
															"end": 1989,
															"name": "DUP1",
															"source": 7
														},
														{
															"begin": 1974,
															"end": 1989,
															"name": "SWAP2",
															"source": 7
														},
														{
															"begin": 1974,
															"end": 1989,
															"name": "SUB",
															"source": 7
														},
														{
															"begin": 1974,
															"end": 1989,
															"name": "SWAP1",
															"source": 7
														},
														{
															"begin": 1974,
															"end": 1989,
															"name": "REVERT",
															"source": 7
														},
														{
															"begin": 5912,
															"end": 7019,
															"name": "tag",
															"source": 2,
															"value": "217"
														},
														{
															"begin": 5912,
															"end": 7019,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 6001,
															"end": 6019,
															"name": "DUP4",
															"source": 2
														},
														{
															"begin": 6001,
															"end": 6019,
															"name": "AND",
															"source": 2
														},
														{
															"begin": 5997,
															"end": 6537,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "225"
														},
														{
															"begin": 5997,
															"end": 6537,
															"name": "JUMPI",
															"source": 2
														},
														{
															"begin": 6153,
															"end": 6158,
															"name": "DUP1",
															"source": 2
														},
														{
															"begin": 6137,
															"end": 6149,
															"name": "PUSH",
															"source": 2,
															"value": "2"
														},
														{
															"begin": 6137,
															"end": 6149,
															"name": "PUSH",
															"source": 2,
															"value": "0"
														},
														{
															"begin": 6137,
															"end": 6158,
															"name": "DUP3",
															"source": 2
														},
														{
															"begin": 6137,
															"end": 6158,
															"name": "DUP3",
															"source": 2
														},
														{
															"begin": 6137,
															"end": 6158,
															"name": "SLOAD",
															"source": 2
														},
														{
															"begin": 6137,
															"end": 6158,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "226"
														},
														{
															"begin": 6137,
															"end": 6158,
															"name": "SWAP2",
															"source": 2
														},
														{
															"begin": 6137,
															"end": 6158,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 6137,
															"end": 6158,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "118"
														},
														{
															"begin": 6137,
															"end": 6158,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 6137,
															"end": 6158,
															"name": "tag",
															"source": 2,
															"value": "226"
														},
														{
															"begin": 6137,
															"end": 6158,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": 6137,
															"end": 6158,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 6137,
															"end": 6158,
															"name": "SWAP2",
															"source": 2
														},
														{
															"begin": 6137,
															"end": 6158,
															"name": "SSTORE",
															"source": 2
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP",
															"source": -1
														},
														{
															"begin": 5997,
															"end": 6537,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "227"
														},
														{
															"begin": 5997,
															"end": 6537,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP",
															"source": -1
														},
														{
															"begin": 5997,
															"end": 6537,
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 5997,
															"end": 6537,
															"name": "tag",
															"source": 2,
															"value": "225"
														},
														{
															"begin": 5997,
															"end": 6537,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 6211,
															"end": 6226,
															"name": "DUP4",
															"source": 2
														},
														{
															"begin": 6211,
															"end": 6226,
															"name": "AND",
															"source": 2
														},
														{
															"begin": 6189,
															"end": 6208,
															"name": "PUSH",
															"source": 2,
															"value": "0"
														},
														{
															"begin": 6211,
															"end": 6226,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 6211,
															"end": 6226,
															"name": "DUP2",
															"source": 2
														},
														{
															"begin": 6211,
															"end": 6226,
															"name": "MSTORE",
															"source": 2
														},
														{
															"begin": 6211,
															"end": 6226,
															"name": "PUSH",
															"source": 2,
															"value": "20"
														},
														{
															"begin": 6211,
															"end": 6226,
															"name": "DUP2",
															"source": 2
														},
														{
															"begin": 6211,
															"end": 6226,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 6211,
															"end": 6226,
															"name": "MSTORE",
															"source": 2
														},
														{
															"begin": 6211,
															"end": 6226,
															"name": "PUSH",
															"source": 2,
															"value": "40"
														},
														{
															"begin": 6211,
															"end": 6226,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 6211,
															"end": 6226,
															"name": "KECCAK256",
															"source": 2
														},
														{
															"begin": 6211,
															"end": 6226,
															"name": "SLOAD",
															"source": 2
														},
														{
															"begin": 6244,
															"end": 6263,
															"name": "DUP2",
															"source": 2
														},
														{
															"begin": 6244,
															"end": 6263,
															"name": "DUP2",
															"source": 2
														},
														{
															"begin": 6244,
															"end": 6263,
															"name": "LT",
															"source": 2
														},
														{
															"begin": 6240,
															"end": 6355,
															"name": "ISZERO",
															"source": 2
														},
														{
															"begin": 6240,
															"end": 6355,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "228"
														},
														{
															"begin": 6240,
															"end": 6355,
															"name": "JUMPI",
															"source": 2
														},
														{
															"begin": 6315,
															"end": 6319,
															"name": "DUP4",
															"source": 2
														},
														{
															"begin": 6321,
															"end": 6332,
															"name": "DUP2",
															"source": 2
														},
														{
															"begin": 6334,
															"end": 6339,
															"name": "DUP4",
															"source": 2
														},
														{
															"begin": 6290,
															"end": 6340,
															"name": "PUSH",
															"source": 2,
															"value": "40"
														},
														{
															"begin": 6290,
															"end": 6340,
															"name": "MLOAD",
															"source": 2
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "391434E3"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "E2"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": 6290,
															"end": 6340,
															"name": "DUP2",
															"source": 2
														},
														{
															"begin": 6290,
															"end": 6340,
															"name": "MSTORE",
															"source": 2
														},
														{
															"begin": 6290,
															"end": 6340,
															"name": "PUSH",
															"source": 2,
															"value": "4"
														},
														{
															"begin": 6290,
															"end": 6340,
															"name": "ADD",
															"source": 2
														},
														{
															"begin": 6290,
															"end": 6340,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "120"
														},
														{
															"begin": 6290,
															"end": 6340,
															"name": "SWAP4",
															"source": 2
														},
														{
															"begin": 6290,
															"end": 6340,
															"name": "SWAP3",
															"source": 2
														},
														{
															"begin": 6290,
															"end": 6340,
															"name": "SWAP2",
															"source": 2
														},
														{
															"begin": 6290,
															"end": 6340,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 6290,
															"end": 6340,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "170"
														},
														{
															"begin": 6290,
															"end": 6340,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 6240,
															"end": 6355,
															"name": "tag",
															"source": 2,
															"value": "228"
														},
														{
															"begin": 6240,
															"end": 6355,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 6475,
															"end": 6490,
															"name": "DUP5",
															"source": 2
														},
														{
															"begin": 6475,
															"end": 6490,
															"name": "AND",
															"source": 2
														},
														{
															"begin": 6475,
															"end": 6484,
															"name": "PUSH",
															"source": 2,
															"value": "0"
														},
														{
															"begin": 6475,
															"end": 6490,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 6475,
															"end": 6490,
															"name": "DUP2",
															"source": 2
														},
														{
															"begin": 6475,
															"end": 6490,
															"name": "MSTORE",
															"source": 2
														},
														{
															"begin": 6475,
															"end": 6490,
															"name": "PUSH",
															"source": 2,
															"value": "20"
														},
														{
															"begin": 6475,
															"end": 6490,
															"name": "DUP2",
															"source": 2
														},
														{
															"begin": 6475,
															"end": 6490,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 6475,
															"end": 6490,
															"name": "MSTORE",
															"source": 2
														},
														{
															"begin": 6475,
															"end": 6490,
															"name": "PUSH",
															"source": 2,
															"value": "40"
														},
														{
															"begin": 6475,
															"end": 6490,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 6475,
															"end": 6490,
															"name": "KECCAK256",
															"source": 2
														},
														{
															"begin": 6493,
															"end": 6512,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 6493,
															"end": 6512,
															"name": "DUP3",
															"source": 2
														},
														{
															"begin": 6493,
															"end": 6512,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 6493,
															"end": 6512,
															"name": "SUB",
															"source": 2
														},
														{
															"begin": 6475,
															"end": 6512,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 6475,
															"end": 6512,
															"name": "SSTORE",
															"source": 2
														},
														{
															"begin": 5997,
															"end": 6537,
															"name": "tag",
															"source": 2,
															"value": "227"
														},
														{
															"begin": 5997,
															"end": 6537,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 6551,
															"end": 6567,
															"name": "DUP3",
															"source": 2
														},
														{
															"begin": 6551,
															"end": 6567,
															"name": "AND",
															"source": 2
														},
														{
															"begin": 6547,
															"end": 6972,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "230"
														},
														{
															"begin": 6547,
															"end": 6972,
															"name": "JUMPI",
															"source": 2
														},
														{
															"begin": 6714,
															"end": 6726,
															"name": "PUSH",
															"source": 2,
															"value": "2"
														},
														{
															"begin": 6714,
															"end": 6735,
															"name": "DUP1",
															"source": 2
														},
														{
															"begin": 6714,
															"end": 6735,
															"name": "SLOAD",
															"source": 2
														},
														{
															"begin": 6714,
															"end": 6735,
															"name": "DUP3",
															"source": 2
														},
														{
															"begin": 6714,
															"end": 6735,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 6714,
															"end": 6735,
															"name": "SUB",
															"source": 2
														},
														{
															"begin": 6714,
															"end": 6735,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 6714,
															"end": 6735,
															"name": "SSTORE",
															"source": 2
														},
														{
															"begin": 6547,
															"end": 6972,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "231"
														},
														{
															"begin": 6547,
															"end": 6972,
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 6547,
															"end": 6972,
															"name": "tag",
															"source": 2,
															"value": "230"
														},
														{
															"begin": 6547,
															"end": 6972,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 6925,
															"end": 6938,
															"name": "DUP3",
															"source": 2
														},
														{
															"begin": 6925,
															"end": 6938,
															"name": "AND",
															"source": 2
														},
														{
															"begin": 6925,
															"end": 6934,
															"name": "PUSH",
															"source": 2,
															"value": "0"
														},
														{
															"begin": 6925,
															"end": 6938,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 6925,
															"end": 6938,
															"name": "DUP2",
															"source": 2
														},
														{
															"begin": 6925,
															"end": 6938,
															"name": "MSTORE",
															"source": 2
														},
														{
															"begin": 6925,
															"end": 6938,
															"name": "PUSH",
															"source": 2,
															"value": "20"
														},
														{
															"begin": 6925,
															"end": 6938,
															"name": "DUP2",
															"source": 2
														},
														{
															"begin": 6925,
															"end": 6938,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 6925,
															"end": 6938,
															"name": "MSTORE",
															"source": 2
														},
														{
															"begin": 6925,
															"end": 6938,
															"name": "PUSH",
															"source": 2,
															"value": "40"
														},
														{
															"begin": 6925,
															"end": 6938,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 6925,
															"end": 6938,
															"name": "KECCAK256",
															"source": 2
														},
														{
															"begin": 6925,
															"end": 6947,
															"name": "DUP1",
															"source": 2
														},
														{
															"begin": 6925,
															"end": 6947,
															"name": "SLOAD",
															"source": 2
														},
														{
															"begin": 6925,
															"end": 6947,
															"name": "DUP3",
															"source": 2
														},
														{
															"begin": 6925,
															"end": 6947,
															"name": "ADD",
															"source": 2
														},
														{
															"begin": 6925,
															"end": 6947,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 6925,
															"end": 6947,
															"name": "SSTORE",
															"source": 2
														},
														{
															"begin": 6547,
															"end": 6972,
															"name": "tag",
															"source": 2,
															"value": "231"
														},
														{
															"begin": 6547,
															"end": 6972,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": 7002,
															"end": 7004,
															"name": "DUP2",
															"source": 2
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 6987,
															"end": 7012,
															"name": "AND",
															"source": 2
														},
														{
															"begin": 6996,
															"end": 7000,
															"name": "DUP4",
															"source": 2
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 6987,
															"end": 7012,
															"name": "AND",
															"source": 2
														},
														{
															"begin": 6987,
															"end": 7012,
															"name": "PUSH",
															"source": 2,
															"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
														},
														{
															"begin": 7006,
															"end": 7011,
															"name": "DUP4",
															"source": 2
														},
														{
															"begin": 6987,
															"end": 7012,
															"name": "PUSH",
															"source": 2,
															"value": "40"
														},
														{
															"begin": 6987,
															"end": 7012,
															"name": "MLOAD",
															"source": 2
														},
														{
															"begin": 6987,
															"end": 7012,
															"name": "PUSH [tag]",
															"source": 2,
															"value": "232"
														},
														{
															"begin": 6987,
															"end": 7012,
															"name": "SWAP2",
															"source": 2
														},
														{
															"begin": 1342,
															"end": 1367,
															"name": "DUP2",
															"source": 10
														},
														{
															"begin": 1342,
															"end": 1367,
															"name": "MSTORE",
															"source": 10
														},
														{
															"begin": 1330,
															"end": 1332,
															"name": "PUSH",
															"source": 10,
															"value": "20"
														},
														{
															"begin": 1315,
															"end": 1333,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 1315,
															"end": 1333,
															"name": "SWAP1",
															"source": 10
														},
														{
															"begin": 1196,
															"end": 1373,
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 6987,
															"end": 7012,
															"name": "tag",
															"source": 2,
															"value": "232"
														},
														{
															"begin": 6987,
															"end": 7012,
															"name": "JUMPDEST",
															"source": 2
														},
														{
															"begin": 6987,
															"end": 7012,
															"name": "PUSH",
															"source": 2,
															"value": "40"
														},
														{
															"begin": 6987,
															"end": 7012,
															"name": "MLOAD",
															"source": 2
														},
														{
															"begin": 6987,
															"end": 7012,
															"name": "DUP1",
															"source": 2
														},
														{
															"begin": 6987,
															"end": 7012,
															"name": "SWAP2",
															"source": 2
														},
														{
															"begin": 6987,
															"end": 7012,
															"name": "SUB",
															"source": 2
														},
														{
															"begin": 6987,
															"end": 7012,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 6987,
															"end": 7012,
															"name": "LOG3",
															"source": 2
														},
														{
															"begin": 5912,
															"end": 7019,
															"name": "POP",
															"source": 2
														},
														{
															"begin": 5912,
															"end": 7019,
															"name": "POP",
															"source": 2
														},
														{
															"begin": 5912,
															"end": 7019,
															"name": "POP",
															"source": 2
														},
														{
															"begin": 5912,
															"end": 7019,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 14,
															"end": 562,
															"name": "tag",
															"source": 10,
															"value": "24"
														},
														{
															"begin": 14,
															"end": 562,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 126,
															"end": 130,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 155,
															"end": 157,
															"name": "PUSH",
															"source": 10,
															"value": "20"
														},
														{
															"begin": 184,
															"end": 186,
															"name": "DUP1",
															"source": 10
														},
														{
															"begin": 173,
															"end": 182,
															"name": "DUP4",
															"source": 10
														},
														{
															"begin": 166,
															"end": 187,
															"name": "MSTORE",
															"source": 10
														},
														{
															"begin": 216,
															"end": 222,
															"name": "DUP4",
															"source": 10
														},
														{
															"begin": 210,
															"end": 223,
															"name": "MLOAD",
															"source": 10
														},
														{
															"begin": 259,
															"end": 265,
															"name": "DUP1",
															"source": 10
														},
														{
															"begin": 254,
															"end": 256,
															"name": "DUP3",
															"source": 10
														},
														{
															"begin": 243,
															"end": 252,
															"name": "DUP6",
															"source": 10
														},
														{
															"begin": 239,
															"end": 257,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 232,
															"end": 266,
															"name": "MSTORE",
															"source": 10
														},
														{
															"begin": 284,
															"end": 285,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 294,
															"end": 434,
															"name": "tag",
															"source": 10,
															"value": "236"
														},
														{
															"begin": 294,
															"end": 434,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 308,
															"end": 314,
															"name": "DUP2",
															"source": 10
														},
														{
															"begin": 305,
															"end": 306,
															"name": "DUP2",
															"source": 10
														},
														{
															"begin": 302,
															"end": 315,
															"name": "LT",
															"source": 10
														},
														{
															"begin": 294,
															"end": 434,
															"name": "ISZERO",
															"source": 10
														},
														{
															"begin": 294,
															"end": 434,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "238"
														},
														{
															"begin": 294,
															"end": 434,
															"name": "JUMPI",
															"source": 10
														},
														{
															"begin": 403,
															"end": 417,
															"name": "DUP6",
															"source": 10
														},
														{
															"begin": 403,
															"end": 417,
															"name": "DUP2",
															"source": 10
														},
														{
															"begin": 403,
															"end": 417,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 399,
															"end": 422,
															"name": "DUP4",
															"source": 10
														},
														{
															"begin": 399,
															"end": 422,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 393,
															"end": 423,
															"name": "MLOAD",
															"source": 10
														},
														{
															"begin": 369,
															"end": 386,
															"name": "DUP6",
															"source": 10
														},
														{
															"begin": 369,
															"end": 386,
															"name": "DUP3",
															"source": 10
														},
														{
															"begin": 369,
															"end": 386,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 388,
															"end": 390,
															"name": "PUSH",
															"source": 10,
															"value": "40"
														},
														{
															"begin": 365,
															"end": 391,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 358,
															"end": 424,
															"name": "MSTORE",
															"source": 10
														},
														{
															"begin": 323,
															"end": 333,
															"name": "DUP3",
															"source": 10
														},
														{
															"begin": 323,
															"end": 333,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 294,
															"end": 434,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "236"
														},
														{
															"begin": 294,
															"end": 434,
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 294,
															"end": 434,
															"name": "tag",
															"source": 10,
															"value": "238"
														},
														{
															"begin": 294,
															"end": 434,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 298,
															"end": 301,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 483,
															"end": 484,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 478,
															"end": 480,
															"name": "PUSH",
															"source": 10,
															"value": "40"
														},
														{
															"begin": 469,
															"end": 475,
															"name": "DUP3",
															"source": 10
														},
														{
															"begin": 458,
															"end": 467,
															"name": "DUP7",
															"source": 10
														},
														{
															"begin": 454,
															"end": 476,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 450,
															"end": 481,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 443,
															"end": 485,
															"name": "MSTORE",
															"source": 10
														},
														{
															"begin": 553,
															"end": 555,
															"name": "PUSH",
															"source": 10,
															"value": "40"
														},
														{
															"begin": 546,
															"end": 548,
															"name": "PUSH",
															"source": 10,
															"value": "1F"
														},
														{
															"begin": 542,
															"end": 549,
															"name": "NOT",
															"source": 10
														},
														{
															"begin": 537,
															"end": 539,
															"name": "PUSH",
															"source": 10,
															"value": "1F"
														},
														{
															"begin": 529,
															"end": 535,
															"name": "DUP4",
															"source": 10
														},
														{
															"begin": 525,
															"end": 540,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 521,
															"end": 550,
															"name": "AND",
															"source": 10
														},
														{
															"begin": 510,
															"end": 519,
															"name": "DUP6",
															"source": 10
														},
														{
															"begin": 506,
															"end": 551,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 502,
															"end": 556,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 494,
															"end": 556,
															"name": "SWAP3",
															"source": 10
														},
														{
															"begin": 494,
															"end": 556,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 494,
															"end": 556,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 494,
															"end": 556,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 14,
															"end": 562,
															"name": "SWAP3",
															"source": 10
														},
														{
															"begin": 14,
															"end": 562,
															"name": "SWAP2",
															"source": 10
														},
														{
															"begin": 14,
															"end": 562,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 14,
															"end": 562,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 14,
															"end": 562,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 567,
															"end": 740,
															"name": "tag",
															"source": 10,
															"value": "233"
														},
														{
															"begin": 567,
															"end": 740,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 635,
															"end": 655,
															"name": "DUP1",
															"source": 10
														},
														{
															"begin": 635,
															"end": 655,
															"name": "CALLDATALOAD",
															"source": 10
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 684,
															"end": 715,
															"name": "DUP2",
															"source": 10
														},
														{
															"begin": 684,
															"end": 715,
															"name": "AND",
															"source": 10
														},
														{
															"begin": 674,
															"end": 716,
															"name": "DUP2",
															"source": 10
														},
														{
															"begin": 674,
															"end": 716,
															"name": "EQ",
															"source": 10
														},
														{
															"begin": 664,
															"end": 734,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "240"
														},
														{
															"begin": 664,
															"end": 734,
															"name": "JUMPI",
															"source": 10
														},
														{
															"begin": 730,
															"end": 731,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 727,
															"end": 728,
															"name": "DUP1",
															"source": 10
														},
														{
															"begin": 720,
															"end": 732,
															"name": "REVERT",
															"source": 10
														},
														{
															"begin": 664,
															"end": 734,
															"name": "tag",
															"source": 10,
															"value": "240"
														},
														{
															"begin": 664,
															"end": 734,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 567,
															"end": 740,
															"name": "SWAP2",
															"source": 10
														},
														{
															"begin": 567,
															"end": 740,
															"name": "SWAP1",
															"source": 10
														},
														{
															"begin": 567,
															"end": 740,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 567,
															"end": 740,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 745,
															"end": 999,
															"name": "tag",
															"source": 10,
															"value": "27"
														},
														{
															"begin": 745,
															"end": 999,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 813,
															"end": 819,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 821,
															"end": 827,
															"name": "DUP1",
															"source": 10
														},
														{
															"begin": 874,
															"end": 876,
															"name": "PUSH",
															"source": 10,
															"value": "40"
														},
														{
															"begin": 862,
															"end": 871,
															"name": "DUP4",
															"source": 10
														},
														{
															"begin": 853,
															"end": 860,
															"name": "DUP6",
															"source": 10
														},
														{
															"begin": 849,
															"end": 872,
															"name": "SUB",
															"source": 10
														},
														{
															"begin": 845,
															"end": 877,
															"name": "SLT",
															"source": 10
														},
														{
															"begin": 842,
															"end": 894,
															"name": "ISZERO",
															"source": 10
														},
														{
															"begin": 842,
															"end": 894,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "242"
														},
														{
															"begin": 842,
															"end": 894,
															"name": "JUMPI",
															"source": 10
														},
														{
															"begin": 890,
															"end": 891,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 887,
															"end": 888,
															"name": "DUP1",
															"source": 10
														},
														{
															"begin": 880,
															"end": 892,
															"name": "REVERT",
															"source": 10
														},
														{
															"begin": 842,
															"end": 894,
															"name": "tag",
															"source": 10,
															"value": "242"
														},
														{
															"begin": 842,
															"end": 894,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 913,
															"end": 942,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "243"
														},
														{
															"begin": 932,
															"end": 941,
															"name": "DUP4",
															"source": 10
														},
														{
															"begin": 913,
															"end": 942,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "233"
														},
														{
															"begin": 913,
															"end": 942,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 913,
															"end": 942,
															"name": "tag",
															"source": 10,
															"value": "243"
														},
														{
															"begin": 913,
															"end": 942,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 903,
															"end": 942,
															"name": "SWAP5",
															"source": 10
														},
														{
															"begin": 989,
															"end": 991,
															"name": "PUSH",
															"source": 10,
															"value": "20"
														},
														{
															"begin": 974,
															"end": 992,
															"name": "SWAP4",
															"source": 10
														},
														{
															"begin": 974,
															"end": 992,
															"name": "SWAP1",
															"source": 10
														},
														{
															"begin": 974,
															"end": 992,
															"name": "SWAP4",
															"source": 10
														},
														{
															"begin": 974,
															"end": 992,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 961,
															"end": 993,
															"name": "CALLDATALOAD",
															"source": 10
														},
														{
															"begin": 961,
															"end": 993,
															"name": "SWAP4",
															"source": 10
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP",
															"source": -1
														},
														{
															"begin": 745,
															"end": 999,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 1378,
															"end": 1706,
															"name": "tag",
															"source": 10,
															"value": "37"
														},
														{
															"begin": 1378,
															"end": 1706,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 1455,
															"end": 1461,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 1463,
															"end": 1469,
															"name": "DUP1",
															"source": 10
														},
														{
															"begin": 1471,
															"end": 1477,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 1524,
															"end": 1526,
															"name": "PUSH",
															"source": 10,
															"value": "60"
														},
														{
															"begin": 1512,
															"end": 1521,
															"name": "DUP5",
															"source": 10
														},
														{
															"begin": 1503,
															"end": 1510,
															"name": "DUP7",
															"source": 10
														},
														{
															"begin": 1499,
															"end": 1522,
															"name": "SUB",
															"source": 10
														},
														{
															"begin": 1495,
															"end": 1527,
															"name": "SLT",
															"source": 10
														},
														{
															"begin": 1492,
															"end": 1544,
															"name": "ISZERO",
															"source": 10
														},
														{
															"begin": 1492,
															"end": 1544,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "247"
														},
														{
															"begin": 1492,
															"end": 1544,
															"name": "JUMPI",
															"source": 10
														},
														{
															"begin": 1540,
															"end": 1541,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 1537,
															"end": 1538,
															"name": "DUP1",
															"source": 10
														},
														{
															"begin": 1530,
															"end": 1542,
															"name": "REVERT",
															"source": 10
														},
														{
															"begin": 1492,
															"end": 1544,
															"name": "tag",
															"source": 10,
															"value": "247"
														},
														{
															"begin": 1492,
															"end": 1544,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 1563,
															"end": 1592,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "248"
														},
														{
															"begin": 1582,
															"end": 1591,
															"name": "DUP5",
															"source": 10
														},
														{
															"begin": 1563,
															"end": 1592,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "233"
														},
														{
															"begin": 1563,
															"end": 1592,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 1563,
															"end": 1592,
															"name": "tag",
															"source": 10,
															"value": "248"
														},
														{
															"begin": 1563,
															"end": 1592,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 1553,
															"end": 1592,
															"name": "SWAP3",
															"source": 10
														},
														{
															"begin": 1553,
															"end": 1592,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 1611,
															"end": 1649,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "249"
														},
														{
															"begin": 1645,
															"end": 1647,
															"name": "PUSH",
															"source": 10,
															"value": "20"
														},
														{
															"begin": 1634,
															"end": 1643,
															"name": "DUP6",
															"source": 10
														},
														{
															"begin": 1630,
															"end": 1648,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 1611,
															"end": 1649,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "233"
														},
														{
															"begin": 1611,
															"end": 1649,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 1611,
															"end": 1649,
															"name": "tag",
															"source": 10,
															"value": "249"
														},
														{
															"begin": 1611,
															"end": 1649,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 1601,
															"end": 1649,
															"name": "SWAP2",
															"source": 10
														},
														{
															"begin": 1601,
															"end": 1649,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 1696,
															"end": 1698,
															"name": "PUSH",
															"source": 10,
															"value": "40"
														},
														{
															"begin": 1685,
															"end": 1694,
															"name": "DUP5",
															"source": 10
														},
														{
															"begin": 1681,
															"end": 1699,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 1668,
															"end": 1700,
															"name": "CALLDATALOAD",
															"source": 10
														},
														{
															"begin": 1658,
															"end": 1700,
															"name": "SWAP1",
															"source": 10
														},
														{
															"begin": 1658,
															"end": 1700,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 1378,
															"end": 1706,
															"name": "SWAP3",
															"source": 10
														},
														{
															"begin": 1378,
															"end": 1706,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 1378,
															"end": 1706,
															"name": "SWAP3",
															"source": 10
														},
														{
															"begin": 1378,
															"end": 1706,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 1378,
															"end": 1706,
															"name": "SWAP3",
															"source": 10
														},
														{
															"begin": 1378,
															"end": 1706,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 1900,
															"end": 2080,
															"name": "tag",
															"source": 10,
															"value": "51"
														},
														{
															"begin": 1900,
															"end": 2080,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 1959,
															"end": 1965,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 2012,
															"end": 2014,
															"name": "PUSH",
															"source": 10,
															"value": "20"
														},
														{
															"begin": 2000,
															"end": 2009,
															"name": "DUP3",
															"source": 10
														},
														{
															"begin": 1991,
															"end": 1998,
															"name": "DUP5",
															"source": 10
														},
														{
															"begin": 1987,
															"end": 2010,
															"name": "SUB",
															"source": 10
														},
														{
															"begin": 1983,
															"end": 2015,
															"name": "SLT",
															"source": 10
														},
														{
															"begin": 1980,
															"end": 2032,
															"name": "ISZERO",
															"source": 10
														},
														{
															"begin": 1980,
															"end": 2032,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "252"
														},
														{
															"begin": 1980,
															"end": 2032,
															"name": "JUMPI",
															"source": 10
														},
														{
															"begin": 2028,
															"end": 2029,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 2025,
															"end": 2026,
															"name": "DUP1",
															"source": 10
														},
														{
															"begin": 2018,
															"end": 2030,
															"name": "REVERT",
															"source": 10
														},
														{
															"begin": 1980,
															"end": 2032,
															"name": "tag",
															"source": 10,
															"value": "252"
														},
														{
															"begin": 1980,
															"end": 2032,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP",
															"source": -1
														},
														{
															"begin": 2051,
															"end": 2074,
															"name": "CALLDATALOAD",
															"source": 10
														},
														{
															"begin": 2051,
															"end": 2074,
															"name": "SWAP2",
															"source": 10
														},
														{
															"begin": 1900,
															"end": 2080,
															"name": "SWAP1",
															"source": 10
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP",
															"source": -1
														},
														{
															"begin": 1900,
															"end": 2080,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 2085,
															"end": 2271,
															"name": "tag",
															"source": 10,
															"value": "58"
														},
														{
															"begin": 2085,
															"end": 2271,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 2144,
															"end": 2150,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 2197,
															"end": 2199,
															"name": "PUSH",
															"source": 10,
															"value": "20"
														},
														{
															"begin": 2185,
															"end": 2194,
															"name": "DUP3",
															"source": 10
														},
														{
															"begin": 2176,
															"end": 2183,
															"name": "DUP5",
															"source": 10
														},
														{
															"begin": 2172,
															"end": 2195,
															"name": "SUB",
															"source": 10
														},
														{
															"begin": 2168,
															"end": 2200,
															"name": "SLT",
															"source": 10
														},
														{
															"begin": 2165,
															"end": 2217,
															"name": "ISZERO",
															"source": 10
														},
														{
															"begin": 2165,
															"end": 2217,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "254"
														},
														{
															"begin": 2165,
															"end": 2217,
															"name": "JUMPI",
															"source": 10
														},
														{
															"begin": 2213,
															"end": 2214,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 2210,
															"end": 2211,
															"name": "DUP1",
															"source": 10
														},
														{
															"begin": 2203,
															"end": 2215,
															"name": "REVERT",
															"source": 10
														},
														{
															"begin": 2165,
															"end": 2217,
															"name": "tag",
															"source": 10,
															"value": "254"
														},
														{
															"begin": 2165,
															"end": 2217,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 2236,
															"end": 2265,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "255"
														},
														{
															"begin": 2255,
															"end": 2264,
															"name": "DUP3",
															"source": 10
														},
														{
															"begin": 2236,
															"end": 2265,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "233"
														},
														{
															"begin": 2236,
															"end": 2265,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 2236,
															"end": 2265,
															"name": "tag",
															"source": 10,
															"value": "255"
														},
														{
															"begin": 2236,
															"end": 2265,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 2226,
															"end": 2265,
															"name": "SWAP4",
															"source": 10
														},
														{
															"begin": 2085,
															"end": 2271,
															"name": "SWAP3",
															"source": 10
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP",
															"source": -1
														},
														{
															"begin": 2085,
															"end": 2271,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 2276,
															"end": 2479,
															"name": "tag",
															"source": 10,
															"value": "71"
														},
														{
															"begin": 2276,
															"end": 2479,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 2440,
															"end": 2472,
															"name": "SWAP2",
															"source": 10
														},
														{
															"begin": 2440,
															"end": 2472,
															"name": "SWAP1",
															"source": 10
														},
														{
															"begin": 2440,
															"end": 2472,
															"name": "SWAP2",
															"source": 10
														},
														{
															"begin": 2440,
															"end": 2472,
															"name": "AND",
															"source": 10
														},
														{
															"begin": 2422,
															"end": 2473,
															"name": "DUP2",
															"source": 10
														},
														{
															"begin": 2422,
															"end": 2473,
															"name": "MSTORE",
															"source": 10
														},
														{
															"begin": 2410,
															"end": 2412,
															"name": "PUSH",
															"source": 10,
															"value": "20"
														},
														{
															"begin": 2395,
															"end": 2413,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 2395,
															"end": 2413,
															"name": "SWAP1",
															"source": 10
														},
														{
															"begin": 2276,
															"end": 2479,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 2484,
															"end": 2744,
															"name": "tag",
															"source": 10,
															"value": "81"
														},
														{
															"begin": 2484,
															"end": 2744,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 2552,
															"end": 2558,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 2560,
															"end": 2566,
															"name": "DUP1",
															"source": 10
														},
														{
															"begin": 2613,
															"end": 2615,
															"name": "PUSH",
															"source": 10,
															"value": "40"
														},
														{
															"begin": 2601,
															"end": 2610,
															"name": "DUP4",
															"source": 10
														},
														{
															"begin": 2592,
															"end": 2599,
															"name": "DUP6",
															"source": 10
														},
														{
															"begin": 2588,
															"end": 2611,
															"name": "SUB",
															"source": 10
														},
														{
															"begin": 2584,
															"end": 2616,
															"name": "SLT",
															"source": 10
														},
														{
															"begin": 2581,
															"end": 2633,
															"name": "ISZERO",
															"source": 10
														},
														{
															"begin": 2581,
															"end": 2633,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "258"
														},
														{
															"begin": 2581,
															"end": 2633,
															"name": "JUMPI",
															"source": 10
														},
														{
															"begin": 2629,
															"end": 2630,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 2626,
															"end": 2627,
															"name": "DUP1",
															"source": 10
														},
														{
															"begin": 2619,
															"end": 2631,
															"name": "REVERT",
															"source": 10
														},
														{
															"begin": 2581,
															"end": 2633,
															"name": "tag",
															"source": 10,
															"value": "258"
														},
														{
															"begin": 2581,
															"end": 2633,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 2652,
															"end": 2681,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "259"
														},
														{
															"begin": 2671,
															"end": 2680,
															"name": "DUP4",
															"source": 10
														},
														{
															"begin": 2652,
															"end": 2681,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "233"
														},
														{
															"begin": 2652,
															"end": 2681,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 2652,
															"end": 2681,
															"name": "tag",
															"source": 10,
															"value": "259"
														},
														{
															"begin": 2652,
															"end": 2681,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 2642,
															"end": 2681,
															"name": "SWAP2",
															"source": 10
														},
														{
															"begin": 2642,
															"end": 2681,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 2700,
															"end": 2738,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "260"
														},
														{
															"begin": 2734,
															"end": 2736,
															"name": "PUSH",
															"source": 10,
															"value": "20"
														},
														{
															"begin": 2723,
															"end": 2732,
															"name": "DUP5",
															"source": 10
														},
														{
															"begin": 2719,
															"end": 2737,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 2700,
															"end": 2738,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "233"
														},
														{
															"begin": 2700,
															"end": 2738,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 2700,
															"end": 2738,
															"name": "tag",
															"source": 10,
															"value": "260"
														},
														{
															"begin": 2700,
															"end": 2738,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 2690,
															"end": 2738,
															"name": "SWAP1",
															"source": 10
														},
														{
															"begin": 2690,
															"end": 2738,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 2484,
															"end": 2744,
															"name": "SWAP3",
															"source": 10
														},
														{
															"begin": 2484,
															"end": 2744,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 2484,
															"end": 2744,
															"name": "SWAP3",
															"source": 10
														},
														{
															"begin": 2484,
															"end": 2744,
															"name": "SWAP1",
															"source": 10
														},
														{
															"begin": 2484,
															"end": 2744,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 2484,
															"end": 2744,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 2749,
															"end": 3129,
															"name": "tag",
															"source": 10,
															"value": "89"
														},
														{
															"begin": 2749,
															"end": 3129,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 2828,
															"end": 2829,
															"name": "PUSH",
															"source": 10,
															"value": "1"
														},
														{
															"begin": 2824,
															"end": 2836,
															"name": "DUP2",
															"source": 10
														},
														{
															"begin": 2824,
															"end": 2836,
															"name": "DUP2",
															"source": 10
														},
														{
															"begin": 2824,
															"end": 2836,
															"name": "SHR",
															"source": 10
														},
														{
															"begin": 2824,
															"end": 2836,
															"name": "SWAP1",
															"source": 10
														},
														{
															"begin": 2871,
															"end": 2883,
															"name": "DUP3",
															"source": 10
														},
														{
															"begin": 2871,
															"end": 2883,
															"name": "AND",
															"source": 10
														},
														{
															"begin": 2871,
															"end": 2883,
															"name": "DUP1",
															"source": 10
														},
														{
															"begin": 2892,
															"end": 2953,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "262"
														},
														{
															"begin": 2892,
															"end": 2953,
															"name": "JUMPI",
															"source": 10
														},
														{
															"begin": 2946,
															"end": 2950,
															"name": "PUSH",
															"source": 10,
															"value": "7F"
														},
														{
															"begin": 2938,
															"end": 2944,
															"name": "DUP3",
															"source": 10
														},
														{
															"begin": 2934,
															"end": 2951,
															"name": "AND",
															"source": 10
														},
														{
															"begin": 2924,
															"end": 2951,
															"name": "SWAP2",
															"source": 10
														},
														{
															"begin": 2924,
															"end": 2951,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 2892,
															"end": 2953,
															"name": "tag",
															"source": 10,
															"value": "262"
														},
														{
															"begin": 2892,
															"end": 2953,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 2999,
															"end": 3001,
															"name": "PUSH",
															"source": 10,
															"value": "20"
														},
														{
															"begin": 2991,
															"end": 2997,
															"name": "DUP3",
															"source": 10
														},
														{
															"begin": 2988,
															"end": 3002,
															"name": "LT",
															"source": 10
														},
														{
															"begin": 2968,
															"end": 2986,
															"name": "DUP2",
															"source": 10
														},
														{
															"begin": 2965,
															"end": 3003,
															"name": "SUB",
															"source": 10
														},
														{
															"begin": 2962,
															"end": 3123,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "263"
														},
														{
															"begin": 2962,
															"end": 3123,
															"name": "JUMPI",
															"source": 10
														},
														{
															"begin": 3045,
															"end": 3055,
															"name": "PUSH",
															"source": 10,
															"value": "4E487B71"
														},
														{
															"begin": 3040,
															"end": 3043,
															"name": "PUSH",
															"source": 10,
															"value": "E0"
														},
														{
															"begin": 3036,
															"end": 3056,
															"name": "SHL",
															"source": 10
														},
														{
															"begin": 3033,
															"end": 3034,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 3026,
															"end": 3057,
															"name": "MSTORE",
															"source": 10
														},
														{
															"begin": 3080,
															"end": 3084,
															"name": "PUSH",
															"source": 10,
															"value": "22"
														},
														{
															"begin": 3077,
															"end": 3078,
															"name": "PUSH",
															"source": 10,
															"value": "4"
														},
														{
															"begin": 3070,
															"end": 3085,
															"name": "MSTORE",
															"source": 10
														},
														{
															"begin": 3108,
															"end": 3112,
															"name": "PUSH",
															"source": 10,
															"value": "24"
														},
														{
															"begin": 3105,
															"end": 3106,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 3098,
															"end": 3113,
															"name": "REVERT",
															"source": 10
														},
														{
															"begin": 2962,
															"end": 3123,
															"name": "tag",
															"source": 10,
															"value": "263"
														},
														{
															"begin": 2962,
															"end": 3123,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 2962,
															"end": 3123,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 2749,
															"end": 3129,
															"name": "SWAP2",
															"source": 10
														},
														{
															"begin": 2749,
															"end": 3129,
															"name": "SWAP1",
															"source": 10
														},
														{
															"begin": 2749,
															"end": 3129,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 2749,
															"end": 3129,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 3134,
															"end": 3356,
															"name": "tag",
															"source": 10,
															"value": "118"
														},
														{
															"begin": 3134,
															"end": 3356,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 3199,
															"end": 3208,
															"name": "DUP1",
															"source": 10
														},
														{
															"begin": 3199,
															"end": 3208,
															"name": "DUP3",
															"source": 10
														},
														{
															"begin": 3199,
															"end": 3208,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 3220,
															"end": 3230,
															"name": "DUP1",
															"source": 10
														},
														{
															"begin": 3220,
															"end": 3230,
															"name": "DUP3",
															"source": 10
														},
														{
															"begin": 3220,
															"end": 3230,
															"name": "GT",
															"source": 10
														},
														{
															"begin": 3217,
															"end": 3350,
															"name": "ISZERO",
															"source": 10
														},
														{
															"begin": 3217,
															"end": 3350,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "94"
														},
														{
															"begin": 3217,
															"end": 3350,
															"name": "JUMPI",
															"source": 10
														},
														{
															"begin": 3272,
															"end": 3282,
															"name": "PUSH",
															"source": 10,
															"value": "4E487B71"
														},
														{
															"begin": 3267,
															"end": 3270,
															"name": "PUSH",
															"source": 10,
															"value": "E0"
														},
														{
															"begin": 3263,
															"end": 3283,
															"name": "SHL",
															"source": 10
														},
														{
															"begin": 3260,
															"end": 3261,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 3253,
															"end": 3284,
															"name": "MSTORE",
															"source": 10
														},
														{
															"begin": 3307,
															"end": 3311,
															"name": "PUSH",
															"source": 10,
															"value": "11"
														},
														{
															"begin": 3304,
															"end": 3305,
															"name": "PUSH",
															"source": 10,
															"value": "4"
														},
														{
															"begin": 3297,
															"end": 3312,
															"name": "MSTORE",
															"source": 10
														},
														{
															"begin": 3335,
															"end": 3339,
															"name": "PUSH",
															"source": 10,
															"value": "24"
														},
														{
															"begin": 3332,
															"end": 3333,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 3325,
															"end": 3340,
															"name": "REVERT",
															"source": 10
														},
														{
															"begin": 3709,
															"end": 4054,
															"name": "tag",
															"source": 10,
															"value": "170"
														},
														{
															"begin": 3709,
															"end": 4054,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 3929,
															"end": 3961,
															"name": "SWAP4",
															"source": 10
														},
														{
															"begin": 3929,
															"end": 3961,
															"name": "SWAP1",
															"source": 10
														},
														{
															"begin": 3929,
															"end": 3961,
															"name": "SWAP4",
															"source": 10
														},
														{
															"begin": 3929,
															"end": 3961,
															"name": "AND",
															"source": 10
														},
														{
															"begin": 3911,
															"end": 3962,
															"name": "DUP4",
															"source": 10
														},
														{
															"begin": 3911,
															"end": 3962,
															"name": "MSTORE",
															"source": 10
														},
														{
															"begin": 3993,
															"end": 3995,
															"name": "PUSH",
															"source": 10,
															"value": "20"
														},
														{
															"begin": 3978,
															"end": 3996,
															"name": "DUP4",
															"source": 10
														},
														{
															"begin": 3978,
															"end": 3996,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 3971,
															"end": 4005,
															"name": "SWAP2",
															"source": 10
														},
														{
															"begin": 3971,
															"end": 4005,
															"name": "SWAP1",
															"source": 10
														},
														{
															"begin": 3971,
															"end": 4005,
															"name": "SWAP2",
															"source": 10
														},
														{
															"begin": 3971,
															"end": 4005,
															"name": "MSTORE",
															"source": 10
														},
														{
															"begin": 4036,
															"end": 4038,
															"name": "PUSH",
															"source": 10,
															"value": "40"
														},
														{
															"begin": 4021,
															"end": 4039,
															"name": "DUP3",
															"source": 10
														},
														{
															"begin": 4021,
															"end": 4039,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 4014,
															"end": 4048,
															"name": "MSTORE",
															"source": 10
														},
														{
															"begin": 3899,
															"end": 3901,
															"name": "PUSH",
															"source": 10,
															"value": "60"
														},
														{
															"begin": 3884,
															"end": 3902,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 3884,
															"end": 3902,
															"name": "SWAP1",
															"source": 10
														},
														{
															"begin": 3709,
															"end": 4054,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 10
														}
													]
												}
											}
										}
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"contracts/Factory.sol",
								"contracts/token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"deployWBGZToken(address,uint8,uint256,bytes32)": "3dcee3ac",
							"getWBGZTokenAddress(address,uint8,uint256,bytes32)": "18423c06"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"decimalsValue\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"WBGZTokenDeployed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimalsValue\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"deployWBGZToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimalsValue\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"getWBGZTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Factory contract for deploying WBGZToken using CREATE2\",\"kind\":\"dev\",\"methods\":{\"deployWBGZToken(address,uint8,uint256,bytes32)\":{\"params\":{\"decimalsValue\":\"The number of decimals for the token\",\"initialOwner\":\"The initial owner of the token\",\"initialSupply\":\"The initial supply of the token\",\"salt\":\"A unique salt for CREATE2 deployment\"},\"returns\":{\"tokenAddress\":\"The address of the deployed token\"}},\"getWBGZTokenAddress(address,uint8,uint256,bytes32)\":{\"params\":{\"decimalsValue\":\"The number of decimals for the token\",\"initialOwner\":\"The initial owner of the token\",\"initialSupply\":\"The initial supply of the token\",\"salt\":\"A unique salt for CREATE2 deployment\"},\"returns\":{\"_0\":\"The computed address\"}}},\"title\":\"Factory\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deployWBGZToken(address,uint8,uint256,bytes32)\":{\"notice\":\"Deploys a new WBGZToken contract using CREATE2\"},\"getWBGZTokenAddress(address,uint8,uint256,bytes32)\":{\"notice\":\"Computes the address of a WBGZToken contract that would be deployed with the given parameters\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Factory.sol\":\"WBGZFactory\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":0},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"contracts/Factory.sol\":{\"keccak256\":\"0x2c6eb48d9e8cab6145091f0a0ba07499025739a011d3f34cb11b1459e2a8069f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96a635448e003198456227daca0d082661c2e55a33f2c03f109febf5c0350205\",\"dweb:/ipfs/Qmdir8oiBfy7rPuXCoP3WiPX1DKxueahpWMveKScQE4JtZ\"]},\"contracts/token.sol\":{\"keccak256\":\"0xa27bb5118e0b371270a17d5cb550143a1cafaa104dd9756fade76e3aa8b66893\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a7539cfd14c3bca4fab8c959ed571eb1edc2ec8c2602781b336058654df93f1\",\"dweb:/ipfs/Qme5rkRybkJzmCtGpr1LzGB7PMd5w3Kff9pPphX6enyV1a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"deployWBGZToken(address,uint8,uint256,bytes32)": {
								"notice": "Deploys a new WBGZToken contract using CREATE2"
							},
							"getWBGZTokenAddress(address,uint8,uint256,bytes32)": {
								"notice": "Computes the address of a WBGZToken contract that would be deployed with the given parameters"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/token.sol": {
				"WBGZToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "decimalsValue",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An ERC-20 token contract based on OpenZeppelin Includes minting, burning, and pausing functionality, controlled by the owner",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"constructor": {
								"details": "Constructor",
								"params": {
									"decimalsValue": "Number of decimals for the token",
									"initialOwner": "Initial owner address",
									"initialSupply": "Initial token supply"
								}
							},
							"decimals()": {
								"details": "Returns the number of decimals used for token"
							},
							"mint(address,uint256)": {
								"details": "Mint new tokens",
								"params": {
									"amount": "Amount to mint",
									"to": "Recipient address"
								}
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"pause()": {
								"details": "Pause all token transfers"
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"unpause()": {
								"details": "Resume token transfers"
							}
						},
						"title": "WBGZToken",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/token.sol\":459:2753  contract WBGZToken is ERC20, ERC20Burnable, Ownable, Pausable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/token.sol\":950:1592  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  dup3\n  mstore\n  0x0c\n  dup1\n  dup3\n  mstore\n  shl(0xa0, 0xe5b881e5ae89e4bb99e5a5b3)\n  0x20\n  dup1\n  dup5\n  add\n  dup3\n  swap1\n  mstore\n  dup5\n  mload\n  dup1\n  dup7\n  add\n  swap1\n  swap6\n  mstore\n  swap2\n  dup5\n  mstore\n  swap1\n  dup4\n  add\n  mstore\n    /* \"contracts/token.sol\":1118:1130  initialOwner */\n  dup5\n  swap2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  tag_8\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  tag_10\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_16\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_15:\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/token.sol\":1150:1176  initialOwner != address(0) */\n  dup4\n  and\n    /* \"contracts/token.sol\":1142:1194  require(initialOwner != address(0), \"Invalid owner\") */\n  tag_18\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":3659:3661   */\n  0x20\n    /* \"contracts/token.sol\":1142:1194  require(initialOwner != address(0), \"Invalid owner\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3641:3662   */\n  mstore\n    /* \"#utility.yul\":3698:3700   */\n  0x0d\n    /* \"#utility.yul\":3678:3696   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":3671:3701   */\n  mstore\n  shl(0x99, 0x24b73b30b634b21037bbb732b9)\n    /* \"#utility.yul\":3717:3735   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":3710:3753   */\n  mstore\n    /* \"#utility.yul\":3770:3788   */\n  0x64\n  add\n    /* \"contracts/token.sol\":1142:1194  require(initialOwner != address(0), \"Invalid owner\") */\n  tag_13\n    /* \"#utility.yul\":3457:3794   */\n  jump\n    /* \"contracts/token.sol\":1142:1194  require(initialOwner != address(0), \"Invalid owner\") */\ntag_18:\n    /* \"contracts/token.sol\":1229:1231  18 */\n  0x12\n    /* \"contracts/token.sol\":1212:1225  decimalsValue */\n  dup3\n    /* \"contracts/token.sol\":1212:1231  decimalsValue <= 18 */\n  0xff\n  and\n  gt\n  iszero\n    /* \"contracts/token.sol\":1204:1253  require(decimalsValue <= 18, \"Decimals too high\") */\n  tag_21\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":4001:4003   */\n  0x20\n    /* \"contracts/token.sol\":1204:1253  require(decimalsValue <= 18, \"Decimals too high\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3983:4004   */\n  mstore\n    /* \"#utility.yul\":4040:4042   */\n  0x11\n    /* \"#utility.yul\":4020:4038   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":4013:4043   */\n  mstore\n  shl(0x7b, 0x088cac6d2dac2d8e640e8dede40d0d2ced)\n    /* \"#utility.yul\":4059:4077   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":4052:4099   */\n  mstore\n    /* \"#utility.yul\":4116:4134   */\n  0x64\n  add\n    /* \"contracts/token.sol\":1204:1253  require(decimalsValue <= 18, \"Decimals too high\") */\n  tag_13\n    /* \"#utility.yul\":3799:4140   */\n  jump\n    /* \"contracts/token.sol\":1204:1253  require(decimalsValue <= 18, \"Decimals too high\") */\ntag_21:\n    /* \"contracts/token.sol\":1271:1284  initialSupply */\n  dup1\n    /* \"contracts/token.sol\":1288:1289  0 */\n  0x00\n    /* \"contracts/token.sol\":1271:1289  initialSupply != 0 */\n  sub\n    /* \"contracts/token.sol\":1263:1325  require(initialSupply != 0, \"Initial supply must be positive\") */\n  tag_24\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":4347:4349   */\n  0x20\n    /* \"contracts/token.sol\":1263:1325  require(initialSupply != 0, \"Initial supply must be positive\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4329:4350   */\n  mstore\n    /* \"#utility.yul\":4386:4388   */\n  0x1f\n    /* \"#utility.yul\":4366:4384   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":4359:4389   */\n  mstore\n    /* \"#utility.yul\":4425:4458   */\n  0x496e697469616c20737570706c79206d75737420626520706f73697469766500\n    /* \"#utility.yul\":4405:4423   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":4398:4459   */\n  mstore\n    /* \"#utility.yul\":4476:4494   */\n  0x64\n  add\n    /* \"contracts/token.sol\":1263:1325  require(initialSupply != 0, \"Initial supply must be positive\") */\n  tag_13\n    /* \"#utility.yul\":4145:4500   */\n  jump\n    /* \"contracts/token.sol\":1263:1325  require(initialSupply != 0, \"Initial supply must be positive\") */\ntag_24:\n    /* \"contracts/token.sol\":1381:1400  10 ** decimalsValue */\n  tag_27\n    /* \"contracts/token.sol\":1387:1400  decimalsValue */\n  dup3\n    /* \"contracts/token.sol\":1381:1383  10 */\n  0x0a\n    /* \"contracts/token.sol\":1381:1400  10 ** decimalsValue */\n  tag_28\n  jump\t// in\ntag_27:\n    /* \"contracts/token.sol\":1360:1401  type(uint256).max / (10 ** decimalsValue) */\n  tag_29\n  swap1\n  not(0x00)\n  tag_30\n  jump\t// in\ntag_29:\n    /* \"contracts/token.sol\":1343:1356  initialSupply */\n  dup2\n    /* \"contracts/token.sol\":1343:1401  initialSupply <= type(uint256).max / (10 ** decimalsValue) */\n  gt\n  iszero\n    /* \"contracts/token.sol\":1335:1422  require(initialSupply <= type(uint256).max / (10 ** decimalsValue), \"Supply too large\") */\n  tag_31\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":6444:6446   */\n  0x20\n    /* \"contracts/token.sol\":1335:1422  require(initialSupply <= type(uint256).max / (10 ** decimalsValue), \"Supply too large\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":6426:6447   */\n  mstore\n    /* \"#utility.yul\":6483:6485   */\n  0x10\n    /* \"#utility.yul\":6463:6481   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":6456:6486   */\n  mstore\n  shl(0x80, 0x537570706c7920746f6f206c61726765)\n    /* \"#utility.yul\":6502:6520   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":6495:6541   */\n  mstore\n    /* \"#utility.yul\":6558:6576   */\n  0x64\n  add\n    /* \"contracts/token.sol\":1335:1422  require(initialSupply <= type(uint256).max / (10 ** decimalsValue), \"Supply too large\") */\n  tag_13\n    /* \"#utility.yul\":6242:6582   */\n  jump\n    /* \"contracts/token.sol\":1335:1422  require(initialSupply <= type(uint256).max / (10 ** decimalsValue), \"Supply too large\") */\ntag_31:\n    /* \"contracts/token.sol\":1433:1442  _decimals */\n  0x05\n    /* \"contracts/token.sol\":1433:1458  _decimals = decimalsValue */\n  dup1\n  sload\n  not(shl(0xa8, 0xff))\n  and\n  shl(0xa8, 0x01)\n  0xff\n  dup6\n  and\n  mul\n  or\n  swap1\n  sstore\n    /* \"contracts/token.sol\":1527:1585  _mint(initialOwner, initialSupply * (10 ** decimalsValue)) */\n  tag_34\n    /* \"contracts/token.sol\":1533:1545  initialOwner */\n  dup4\n    /* \"contracts/token.sol\":1564:1583  10 ** decimalsValue */\n  tag_35\n    /* \"contracts/token.sol\":1433:1458  _decimals = decimalsValue */\n  dup5\n    /* \"contracts/token.sol\":1564:1566  10 */\n  0x0a\n    /* \"contracts/token.sol\":1564:1583  10 ** decimalsValue */\n  tag_28\n  jump\t// in\ntag_35:\n    /* \"contracts/token.sol\":1547:1584  initialSupply * (10 ** decimalsValue) */\n  tag_36\n  swap1\n    /* \"contracts/token.sol\":1547:1560  initialSupply */\n  dup5\n    /* \"contracts/token.sol\":1547:1584  initialSupply * (10 ** decimalsValue) */\n  tag_37\n  jump\t// in\ntag_36:\n    /* \"contracts/token.sol\":1527:1532  _mint */\n  tag_38\n    /* \"contracts/token.sol\":1527:1585  _mint(initialOwner, initialSupply * (10 ** decimalsValue)) */\n  jump\t// in\ntag_34:\n    /* \"contracts/token.sol\":950:1592  constructor(... */\n  pop\n  pop\n  pop\n    /* \"contracts/token.sol\":459:2753  contract WBGZToken is ERC20, ERC20Burnable, Ownable, Pausable {... */\n  jump(tag_77)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\ntag_38:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n  tag_42\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7506  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7476:7508  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\ntag_42:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n  tag_44\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7545  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7548:7555  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7557:7562  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  _update */\n  tag_45\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n  jump\t// in\ntag_44:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/token.sol\":2584:2751  function _update(... */\ntag_45:\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n  tag_47\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1367  _requireNotPaused */\n  tag_48\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n  jump\t// in\ntag_47:\n    /* \"contracts/token.sol\":2714:2744  super._update(from, to, value) */\n  tag_50\n    /* \"contracts/token.sol\":2728:2732  from */\n  dup4\n    /* \"contracts/token.sol\":2734:2736  to */\n  dup4\n    /* \"contracts/token.sol\":2738:2743  value */\n  dup4\n    /* \"contracts/token.sol\":2714:2727  super._update */\n  tag_51\n    /* \"contracts/token.sol\":2714:2744  super._update(from, to, value) */\n  jump\t// in\ntag_50:\n    /* \"contracts/token.sol\":2584:2751  function _update(... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1878:2006  function _requireNotPaused() internal view virtual {... */\ntag_48:\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1943:1951  paused() */\n  tag_53\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1796:1803  _paused */\n  sload(0x05)\n  shl(0xa0, 0x01)\n  swap1\n  div\n  0xff\n  and\n  swap1\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1726:1810  function paused() public view virtual returns (bool) {... */\n  jump\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1943:1951  paused() */\ntag_53:\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1939:2000  if (paused()) {... */\n  iszero\n  tag_55\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1974:1989  EnforcedPause() */\n  mload(0x40)\n  shl(0xe0, 0xd93c0665)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1939:2000  if (paused()) {... */\ntag_55:\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1878:2006  function _requireNotPaused() internal view virtual {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_51:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n  tag_57\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6153:6158  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6149  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6158  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_58\n  swap2\n  swap1\n  tag_59\n  jump\t// in\ntag_58:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n  tag_60\n  swap1\n  pop\n  jump\ntag_57:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6208  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6263  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n  iszero\n  tag_61\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":7110:7142   */\n  dup6\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":7092:7143   */\n  mstore\n    /* \"#utility.yul\":7159:7177   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":7152:7186   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":7202:7220   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":7195:7229   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":7065:7083   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_13\n    /* \"#utility.yul\":6890:7235   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\ntag_61:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n  dup5\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6484  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6512  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6512  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\ntag_60:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n  tag_64\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6726  _totalSupply */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6735  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n  jump(tag_65)\ntag_64:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6934  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6947  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\ntag_65:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7004  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7000  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7006:7011  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n  mload(0x40)\n  tag_66\n  swap2\n    /* \"#utility.yul\":7386:7411   */\n  dup2\n  mstore\n    /* \"#utility.yul\":7374:7376   */\n  0x20\n    /* \"#utility.yul\":7359:7377   */\n  add\n  swap1\n    /* \"#utility.yul\":7240:7417   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\ntag_66:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:523   */\ntag_3:\n    /* \"#utility.yul\":100:106   */\n  0x00\n    /* \"#utility.yul\":108:114   */\n  dup1\n    /* \"#utility.yul\":116:122   */\n  0x00\n    /* \"#utility.yul\":169:171   */\n  0x60\n    /* \"#utility.yul\":157:166   */\n  dup5\n    /* \"#utility.yul\":148:155   */\n  dup7\n    /* \"#utility.yul\":144:167   */\n  sub\n    /* \"#utility.yul\":140:172   */\n  slt\n    /* \"#utility.yul\":137:189   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":185:186   */\n  0x00\n    /* \"#utility.yul\":182:183   */\n  dup1\n    /* \"#utility.yul\":175:187   */\n  revert\n    /* \"#utility.yul\":137:189   */\ntag_79:\n    /* \"#utility.yul\":211:227   */\n  dup4\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":256:287   */\n  dup2\n  and\n    /* \"#utility.yul\":246:288   */\n  dup2\n  eq\n    /* \"#utility.yul\":236:306   */\n  tag_80\n  jumpi\n    /* \"#utility.yul\":302:303   */\n  0x00\n    /* \"#utility.yul\":299:300   */\n  dup1\n    /* \"#utility.yul\":292:304   */\n  revert\n    /* \"#utility.yul\":236:306   */\ntag_80:\n    /* \"#utility.yul\":375:377   */\n  0x20\n    /* \"#utility.yul\":360:378   */\n  dup6\n  add\n    /* \"#utility.yul\":354:379   */\n  mload\n    /* \"#utility.yul\":325:330   */\n  swap1\n  swap4\n  pop\n    /* \"#utility.yul\":423:427   */\n  0xff\n    /* \"#utility.yul\":410:428   */\n  dup2\n  and\n    /* \"#utility.yul\":398:429   */\n  dup2\n  eq\n    /* \"#utility.yul\":388:447   */\n  tag_81\n  jumpi\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":388:447   */\ntag_81:\n    /* \"#utility.yul\":466:473   */\n  dup1\n    /* \"#utility.yul\":456:473   */\n  swap3\n  pop\n  pop\n    /* \"#utility.yul\":513:515   */\n  0x40\n    /* \"#utility.yul\":502:511   */\n  dup5\n    /* \"#utility.yul\":498:516   */\n  add\n    /* \"#utility.yul\":492:517   */\n  mload\n    /* \"#utility.yul\":482:517   */\n  swap1\n  pop\n    /* \"#utility.yul\":14:523   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":528:655   */\ntag_69:\n    /* \"#utility.yul\":589:599   */\n  0x4e487b71\n    /* \"#utility.yul\":584:587   */\n  0xe0\n    /* \"#utility.yul\":580:600   */\n  shl\n    /* \"#utility.yul\":577:578   */\n  0x00\n    /* \"#utility.yul\":570:601   */\n  mstore\n    /* \"#utility.yul\":620:624   */\n  0x41\n    /* \"#utility.yul\":617:618   */\n  0x04\n    /* \"#utility.yul\":610:625   */\n  mstore\n    /* \"#utility.yul\":644:648   */\n  0x24\n    /* \"#utility.yul\":641:642   */\n  0x00\n    /* \"#utility.yul\":634:649   */\n  revert\n    /* \"#utility.yul\":660:1040   */\ntag_70:\n    /* \"#utility.yul\":739:740   */\n  0x01\n    /* \"#utility.yul\":735:747   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":782:794   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":803:864   */\n  tag_84\n  jumpi\n    /* \"#utility.yul\":857:861   */\n  0x7f\n    /* \"#utility.yul\":849:855   */\n  dup3\n    /* \"#utility.yul\":845:862   */\n  and\n    /* \"#utility.yul\":835:862   */\n  swap2\n  pop\n    /* \"#utility.yul\":803:864   */\ntag_84:\n    /* \"#utility.yul\":910:912   */\n  0x20\n    /* \"#utility.yul\":902:908   */\n  dup3\n    /* \"#utility.yul\":899:913   */\n  lt\n    /* \"#utility.yul\":879:897   */\n  dup2\n    /* \"#utility.yul\":876:914   */\n  sub\n    /* \"#utility.yul\":873:1034   */\n  tag_85\n  jumpi\n    /* \"#utility.yul\":956:966   */\n  0x4e487b71\n    /* \"#utility.yul\":951:954   */\n  0xe0\n    /* \"#utility.yul\":947:967   */\n  shl\n    /* \"#utility.yul\":944:945   */\n  0x00\n    /* \"#utility.yul\":937:968   */\n  mstore\n    /* \"#utility.yul\":991:995   */\n  0x22\n    /* \"#utility.yul\":988:989   */\n  0x04\n    /* \"#utility.yul\":981:996   */\n  mstore\n    /* \"#utility.yul\":1019:1023   */\n  0x24\n    /* \"#utility.yul\":1016:1017   */\n  0x00\n    /* \"#utility.yul\":1009:1024   */\n  revert\n    /* \"#utility.yul\":873:1034   */\ntag_85:\n  pop\n    /* \"#utility.yul\":660:1040   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1171:1716   */\ntag_72:\n    /* \"#utility.yul\":1273:1275   */\n  0x1f\n    /* \"#utility.yul\":1268:1271   */\n  dup3\n    /* \"#utility.yul\":1265:1276   */\n  gt\n    /* \"#utility.yul\":1262:1710   */\n  iszero\n  tag_50\n  jumpi\n    /* \"#utility.yul\":1309:1310   */\n  0x00\n    /* \"#utility.yul\":1334:1339   */\n  dup2\n    /* \"#utility.yul\":1330:1332   */\n  dup2\n    /* \"#utility.yul\":1323:1340   */\n  mstore\n    /* \"#utility.yul\":1379:1383   */\n  0x20\n    /* \"#utility.yul\":1375:1377   */\n  dup2\n    /* \"#utility.yul\":1365:1384   */\n  keccak256\n    /* \"#utility.yul\":1449:1451   */\n  0x1f\n    /* \"#utility.yul\":1437:1447   */\n  dup6\n    /* \"#utility.yul\":1433:1452   */\n  add\n    /* \"#utility.yul\":1430:1431   */\n  0x05\n    /* \"#utility.yul\":1426:1453   */\n  shr\n    /* \"#utility.yul\":1420:1424   */\n  dup2\n    /* \"#utility.yul\":1416:1454   */\n  add\n    /* \"#utility.yul\":1485:1489   */\n  0x20\n    /* \"#utility.yul\":1473:1483   */\n  dup7\n    /* \"#utility.yul\":1470:1490   */\n  lt\n    /* \"#utility.yul\":1467:1514   */\n  iszero\n  tag_89\n  jumpi\n  pop\n    /* \"#utility.yul\":1508:1512   */\n  dup1\n    /* \"#utility.yul\":1467:1514   */\ntag_89:\n    /* \"#utility.yul\":1563:1565   */\n  0x1f\n    /* \"#utility.yul\":1558:1561   */\n  dup6\n    /* \"#utility.yul\":1554:1566   */\n  add\n    /* \"#utility.yul\":1551:1552   */\n  0x05\n    /* \"#utility.yul\":1547:1567   */\n  shr\n    /* \"#utility.yul\":1541:1545   */\n  dup3\n    /* \"#utility.yul\":1537:1568   */\n  add\n    /* \"#utility.yul\":1527:1568   */\n  swap2\n  pop\n    /* \"#utility.yul\":1618:1700   */\ntag_90:\n    /* \"#utility.yul\":1636:1638   */\n  dup2\n    /* \"#utility.yul\":1629:1634   */\n  dup2\n    /* \"#utility.yul\":1626:1639   */\n  lt\n    /* \"#utility.yul\":1618:1700   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":1681:1698   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":1662:1663   */\n  0x01\n    /* \"#utility.yul\":1651:1664   */\n  add\n    /* \"#utility.yul\":1618:1700   */\n  jump(tag_90)\ntag_92:\n    /* \"#utility.yul\":1622:1625   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1171:1716   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1892:3244   */\ntag_9:\n    /* \"#utility.yul\":2012:2022   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2034:2064   */\n  dup2\n  gt\n    /* \"#utility.yul\":2031:2087   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":2067:2085   */\n  tag_96\n  tag_69\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":2096:2193   */\n  tag_97\n    /* \"#utility.yul\":2186:2192   */\n  dup2\n    /* \"#utility.yul\":2146:2184   */\n  tag_98\n    /* \"#utility.yul\":2178:2182   */\n  dup5\n    /* \"#utility.yul\":2172:2183   */\n  sload\n    /* \"#utility.yul\":2146:2184   */\n  tag_70\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":2140:2144   */\n  dup5\n    /* \"#utility.yul\":2096:2193   */\n  tag_72\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":2248:2252   */\n  0x20\n  dup1\n    /* \"#utility.yul\":2312:2314   */\n  0x1f\n    /* \"#utility.yul\":2301:2315   */\n  dup4\n  gt\n    /* \"#utility.yul\":2329:2330   */\n  0x01\n    /* \"#utility.yul\":2324:2987   */\n  dup2\n  eq\n  tag_100\n  jumpi\n    /* \"#utility.yul\":3031:3032   */\n  0x00\n    /* \"#utility.yul\":3048:3054   */\n  dup5\n    /* \"#utility.yul\":3045:3134   */\n  iszero\n  tag_101\n  jumpi\n  pop\n    /* \"#utility.yul\":3100:3119   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3094:3120   */\n  mload\n    /* \"#utility.yul\":3045:3134   */\ntag_101:\n  not(0x00)\n    /* \"#utility.yul\":1849:1850   */\n  0x03\n    /* \"#utility.yul\":1845:1856   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1841:1865   */\n  shr\n    /* \"#utility.yul\":1837:1866   */\n  not\n    /* \"#utility.yul\":1827:1867   */\n  and\n    /* \"#utility.yul\":1873:1874   */\n  0x01\n    /* \"#utility.yul\":1869:1880   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1824:1881   */\n  or\n    /* \"#utility.yul\":3147:3228   */\n  dup6\n  sstore\n    /* \"#utility.yul\":2294:3238   */\n  jump(tag_92)\n    /* \"#utility.yul\":2324:2987   */\ntag_100:\n    /* \"#utility.yul\":1118:1119   */\n  0x00\n    /* \"#utility.yul\":1111:1125   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":1155:1159   */\n  0x20\n    /* \"#utility.yul\":1142:1160   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2360:2380   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":2478:2714   */\ntag_104:\n    /* \"#utility.yul\":2492:2499   */\n  dup3\n    /* \"#utility.yul\":2489:2490   */\n  dup2\n    /* \"#utility.yul\":2486:2500   */\n  lt\n    /* \"#utility.yul\":2478:2714   */\n  iszero\n  tag_106\n  jumpi\n    /* \"#utility.yul\":2581:2600   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2575:2601   */\n  mload\n    /* \"#utility.yul\":2560:2602   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2673:2700   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2641:2642   */\n  0x01\n    /* \"#utility.yul\":2629:2643   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":2508:2527   */\n  dup5\n  add\n    /* \"#utility.yul\":2478:2714   */\n  jump(tag_104)\ntag_106:\n    /* \"#utility.yul\":2482:2485   */\n  pop\n    /* \"#utility.yul\":2742:2748   */\n  dup6\n    /* \"#utility.yul\":2733:2740   */\n  dup3\n    /* \"#utility.yul\":2730:2749   */\n  lt\n    /* \"#utility.yul\":2727:2928   */\n  iszero\n  tag_107\n  jumpi\n    /* \"#utility.yul\":2803:2822   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2797:2823   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2886:2887   */\n  0x03\n    /* \"#utility.yul\":2882:2896   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2898:2901   */\n  0xf8\n    /* \"#utility.yul\":2878:2902   */\n  and\n    /* \"#utility.yul\":2874:2911   */\n  shr\n    /* \"#utility.yul\":2870:2912   */\n  not\n    /* \"#utility.yul\":2855:2913   */\n  and\n    /* \"#utility.yul\":2840:2914   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2727:2928   */\ntag_107:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2974:2975   */\n  0x01\n    /* \"#utility.yul\":2958:2972   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2954:2976   */\n  add\n    /* \"#utility.yul\":2941:2977   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1892:3244   */\n  jump\t// out\n    /* \"#utility.yul\":3249:3452   */\ntag_14:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":3413:3445   */\n  swap2\n  swap1\n  swap2\n  and\n    /* \"#utility.yul\":3395:3446   */\n  dup2\n  mstore\n    /* \"#utility.yul\":3383:3385   */\n  0x20\n    /* \"#utility.yul\":3368:3386   */\n  add\n  swap1\n    /* \"#utility.yul\":3249:3452   */\n  jump\t// out\n    /* \"#utility.yul\":4505:4632   */\ntag_74:\n    /* \"#utility.yul\":4566:4576   */\n  0x4e487b71\n    /* \"#utility.yul\":4561:4564   */\n  0xe0\n    /* \"#utility.yul\":4557:4577   */\n  shl\n    /* \"#utility.yul\":4554:4555   */\n  0x00\n    /* \"#utility.yul\":4547:4578   */\n  mstore\n    /* \"#utility.yul\":4597:4601   */\n  0x11\n    /* \"#utility.yul\":4594:4595   */\n  0x04\n    /* \"#utility.yul\":4587:4602   */\n  mstore\n    /* \"#utility.yul\":4621:4625   */\n  0x24\n    /* \"#utility.yul\":4618:4619   */\n  0x00\n    /* \"#utility.yul\":4611:4626   */\n  revert\n    /* \"#utility.yul\":4637:5059   */\ntag_75:\n    /* \"#utility.yul\":4726:4727   */\n  0x01\n    /* \"#utility.yul\":4769:4774   */\n  dup2\n    /* \"#utility.yul\":4726:4727   */\n  dup2\n    /* \"#utility.yul\":4783:5053   */\ntag_114:\n    /* \"#utility.yul\":4804:4811   */\n  dup1\n    /* \"#utility.yul\":4794:4802   */\n  dup6\n    /* \"#utility.yul\":4791:4812   */\n  gt\n    /* \"#utility.yul\":4783:5053   */\n  iszero\n  tag_116\n  jumpi\n    /* \"#utility.yul\":4863:4867   */\n  dup2\n    /* \"#utility.yul\":4859:4860   */\n  0x00\n    /* \"#utility.yul\":4855:4861   */\n  not\n    /* \"#utility.yul\":4851:4868   */\n  div\n    /* \"#utility.yul\":4845:4849   */\n  dup3\n    /* \"#utility.yul\":4842:4869   */\n  gt\n    /* \"#utility.yul\":4839:4892   */\n  iszero\n  tag_118\n  jumpi\n    /* \"#utility.yul\":4872:4890   */\n  tag_118\n  tag_74\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":4922:4929   */\n  dup1\n    /* \"#utility.yul\":4912:4920   */\n  dup6\n    /* \"#utility.yul\":4908:4930   */\n  and\n    /* \"#utility.yul\":4905:4960   */\n  iszero\n  tag_119\n  jumpi\n    /* \"#utility.yul\":4942:4958   */\n  swap2\n  dup2\n  mul\n  swap2\n    /* \"#utility.yul\":4905:4960   */\ntag_119:\n    /* \"#utility.yul\":5021:5043   */\n  swap4\n  dup5\n  shr\n  swap4\n    /* \"#utility.yul\":4981:4996   */\n  swap1\n  dup1\n  mul\n  swap1\n    /* \"#utility.yul\":4783:5053   */\n  jump(tag_114)\ntag_116:\n    /* \"#utility.yul\":4787:4790   */\n  pop\n    /* \"#utility.yul\":4637:5059   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5064:5870   */\ntag_76:\n    /* \"#utility.yul\":5113:5118   */\n  0x00\n    /* \"#utility.yul\":5143:5151   */\n  dup3\n    /* \"#utility.yul\":5133:5213   */\n  tag_121\n  jumpi\n  pop\n    /* \"#utility.yul\":5184:5185   */\n  0x01\n    /* \"#utility.yul\":5198:5203   */\n  jump(tag_120)\n    /* \"#utility.yul\":5133:5213   */\ntag_121:\n    /* \"#utility.yul\":5232:5236   */\n  dup2\n    /* \"#utility.yul\":5222:5298   */\n  tag_122\n  jumpi\n  pop\n    /* \"#utility.yul\":5269:5270   */\n  0x00\n    /* \"#utility.yul\":5283:5288   */\n  jump(tag_120)\n    /* \"#utility.yul\":5222:5298   */\ntag_122:\n    /* \"#utility.yul\":5314:5318   */\n  dup2\n    /* \"#utility.yul\":5332:5333   */\n  0x01\n    /* \"#utility.yul\":5327:5386   */\n  dup2\n  eq\n  tag_124\n  jumpi\n    /* \"#utility.yul\":5400:5401   */\n  0x02\n    /* \"#utility.yul\":5395:5525   */\n  dup2\n  eq\n  tag_125\n  jumpi\n    /* \"#utility.yul\":5307:5525   */\n  jump(tag_123)\n    /* \"#utility.yul\":5327:5386   */\ntag_124:\n    /* \"#utility.yul\":5357:5358   */\n  0x01\n    /* \"#utility.yul\":5348:5358   */\n  swap2\n  pop\n    /* \"#utility.yul\":5371:5376   */\n  pop\n  jump(tag_120)\n    /* \"#utility.yul\":5395:5525   */\ntag_125:\n    /* \"#utility.yul\":5432:5435   */\n  0xff\n    /* \"#utility.yul\":5422:5430   */\n  dup5\n    /* \"#utility.yul\":5419:5436   */\n  gt\n    /* \"#utility.yul\":5416:5459   */\n  iszero\n  tag_127\n  jumpi\n    /* \"#utility.yul\":5439:5457   */\n  tag_127\n  tag_74\n  jump\t// in\ntag_127:\n  pop\n  pop\n    /* \"#utility.yul\":5495:5496   */\n  0x01\n    /* \"#utility.yul\":5481:5497   */\n  dup3\n  shl\n    /* \"#utility.yul\":5510:5515   */\n  jump(tag_120)\n    /* \"#utility.yul\":5307:5525   */\ntag_123:\n  pop\n    /* \"#utility.yul\":5609:5611   */\n  0x20\n    /* \"#utility.yul\":5599:5607   */\n  dup4\n    /* \"#utility.yul\":5596:5612   */\n  lt\n    /* \"#utility.yul\":5590:5593   */\n  0x0133\n    /* \"#utility.yul\":5584:5588   */\n  dup4\n    /* \"#utility.yul\":5581:5594   */\n  lt\n    /* \"#utility.yul\":5577:5613   */\n  and\n    /* \"#utility.yul\":5571:5573   */\n  0x4e\n    /* \"#utility.yul\":5561:5569   */\n  dup5\n    /* \"#utility.yul\":5558:5574   */\n  lt\n    /* \"#utility.yul\":5553:5555   */\n  0x0b\n    /* \"#utility.yul\":5547:5551   */\n  dup5\n    /* \"#utility.yul\":5544:5556   */\n  lt\n    /* \"#utility.yul\":5540:5575   */\n  and\n    /* \"#utility.yul\":5537:5614   */\n  or\n    /* \"#utility.yul\":5534:5693   */\n  iszero\n  tag_128\n  jumpi\n  pop\n    /* \"#utility.yul\":5646:5665   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":5678:5683   */\n  jump(tag_120)\n    /* \"#utility.yul\":5534:5693   */\ntag_128:\n    /* \"#utility.yul\":5725:5759   */\n  tag_129\n    /* \"#utility.yul\":5750:5758   */\n  dup4\n    /* \"#utility.yul\":5744:5748   */\n  dup4\n    /* \"#utility.yul\":5725:5759   */\n  tag_75\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":5795:5801   */\n  dup1\n    /* \"#utility.yul\":5791:5792   */\n  0x00\n    /* \"#utility.yul\":5787:5793   */\n  not\n    /* \"#utility.yul\":5783:5802   */\n  div\n    /* \"#utility.yul\":5774:5781   */\n  dup3\n    /* \"#utility.yul\":5771:5803   */\n  gt\n    /* \"#utility.yul\":5768:5826   */\n  iszero\n  tag_131\n  jumpi\n    /* \"#utility.yul\":5806:5824   */\n  tag_131\n  tag_74\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":5844:5864   */\n  mul\n  swap1\n  pop\n    /* \"#utility.yul\":5064:5870   */\ntag_120:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5875:6015   */\ntag_28:\n    /* \"#utility.yul\":5933:5938   */\n  0x00\n    /* \"#utility.yul\":5962:6009   */\n  tag_133\n    /* \"#utility.yul\":6003:6007   */\n  0xff\n    /* \"#utility.yul\":5993:6001   */\n  dup5\n    /* \"#utility.yul\":5989:6008   */\n  and\n    /* \"#utility.yul\":5983:5987   */\n  dup4\n    /* \"#utility.yul\":5962:6009   */\n  tag_76\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":5953:6009   */\n  swap4\n    /* \"#utility.yul\":5875:6015   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6020:6237   */\ntag_30:\n    /* \"#utility.yul\":6060:6061   */\n  0x00\n    /* \"#utility.yul\":6086:6087   */\n  dup3\n    /* \"#utility.yul\":6076:6208   */\n  tag_135\n  jumpi\n    /* \"#utility.yul\":6130:6140   */\n  0x4e487b71\n    /* \"#utility.yul\":6125:6128   */\n  0xe0\n    /* \"#utility.yul\":6121:6141   */\n  shl\n    /* \"#utility.yul\":6118:6119   */\n  0x00\n    /* \"#utility.yul\":6111:6142   */\n  mstore\n    /* \"#utility.yul\":6165:6169   */\n  0x12\n    /* \"#utility.yul\":6162:6163   */\n  0x04\n    /* \"#utility.yul\":6155:6170   */\n  mstore\n    /* \"#utility.yul\":6193:6197   */\n  0x24\n    /* \"#utility.yul\":6190:6191   */\n  0x00\n    /* \"#utility.yul\":6183:6198   */\n  revert\n    /* \"#utility.yul\":6076:6208   */\ntag_135:\n  pop\n    /* \"#utility.yul\":6222:6231   */\n  div\n  swap1\n    /* \"#utility.yul\":6020:6237   */\n  jump\t// out\n    /* \"#utility.yul\":6587:6755   */\ntag_37:\n    /* \"#utility.yul\":6660:6669   */\n  dup1\n  dup3\n  mul\n    /* \"#utility.yul\":6691:6700   */\n  dup2\n  iszero\n    /* \"#utility.yul\":6708:6723   */\n  dup3\n  dup3\n  div\n    /* \"#utility.yul\":6702:6724   */\n  dup5\n  eq\n    /* \"#utility.yul\":6688:6725   */\n  or\n    /* \"#utility.yul\":6678:6749   */\n  tag_120\n  jumpi\n    /* \"#utility.yul\":6729:6747   */\n  tag_120\n  tag_74\n  jump\t// in\n    /* \"#utility.yul\":6760:6885   */\ntag_59:\n    /* \"#utility.yul\":6825:6834   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":6846:6856   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":6843:6879   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":6859:6877   */\n  tag_120\n  tag_74\n  jump\t// in\n    /* \"#utility.yul\":7240:7417   */\ntag_77:\n    /* \"contracts/token.sol\":459:2753  contract WBGZToken is ERC20, ERC20Burnable, Ownable, Pausable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/token.sol\":459:2753  contract WBGZToken is ERC20, ERC20Burnable, Ownable, Pausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_20\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_25\n      tag_26\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_23\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2881:2893  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n    tag_31:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n      tag_23\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_25\n      tag_36\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n        /* \"contracts/token.sol\":1758:1856  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n        /* \"contracts/token.sol\":1840:1849  _decimals */\n      sload(0x05)\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/token.sol\":1758:1856  function decimals() public view virtual override returns (uint8) {... */\n      mload(0x40)\n        /* \"#utility.yul\":1883:1887   */\n      0xff\n        /* \"#utility.yul\":1871:1888   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"contracts/token.sol\":1758:1856  function decimals() public view virtual override returns (uint8) {... */\n      tag_23\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"contracts/token.sol\":2434:2497  function unpause() public onlyOwner {... */\n    tag_8:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      stop\n        /* \"contracts/token.sol\":2008:2179  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_9:\n      tag_44\n      tag_47\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_10:\n      tag_44\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1726:1810  function paused() public view virtual returns (bool) {... */\n    tag_11:\n      tag_25\n      tag_54\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_31\n      tag_57\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_57:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2998:3005  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      tag_44\n      tag_62\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_14:\n      tag_44\n      tag_64\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n        /* \"contracts/token.sol\":2280:2339  function pause() public onlyOwner {... */\n    tag_15:\n      tag_44\n      tag_67\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_16:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_17:\n      tag_21\n      tag_73\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_18:\n      tag_25\n      tag_76\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_19:\n      tag_31\n      tag_80\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_20:\n      tag_44\n      tag_85\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_88\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_90\n      swap1\n      tag_89\n      jump\t// in\n    tag_90:\n      dup1\n      iszero\n      tag_91\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_92\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_91)\n    tag_92:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_93:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_93\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_91:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3975:3979  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n      tag_97\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4045:4052  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4054:4059  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4037  _approve */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4077:4081  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4070:4081  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_94:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4767:4771  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4860  _spendAllowance(from, spender, value) */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4839:4843  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4854:4859  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4838  _spendAllowance */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4860  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4896  _transfer(from, to, value) */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4880:4884  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4886:4888  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4890:4895  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4879  _transfer */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4896  _transfer(from, to, value) */\n      jump\t// in\n    tag_104:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4913:4917  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token.sol\":2434:2497  function unpause() public onlyOwner {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_108\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_109\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_108:\n        /* \"contracts/token.sol\":2480:2490  _unpause() */\n      tag_111\n        /* \"contracts/token.sol\":2480:2488  _unpause */\n      tag_112\n        /* \"contracts/token.sol\":2480:2490  _unpause() */\n      jump\t// in\n    tag_111:\n        /* \"contracts/token.sol\":2434:2497  function unpause() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/token.sol\":2008:2179  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_114\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_109\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_114:\n        /* \"contracts/token.sol\":667:684  10_000_000 * 1e18 */\n      0x084595161401484a000000\n        /* \"contracts/token.sol\":2101:2107  amount */\n      dup2\n        /* \"contracts/token.sol\":2085:2098  totalSupply() */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2881:2893  _totalSupply */\n      sload(0x02)\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/token.sol\":2085:2098  totalSupply() */\n    tag_116:\n        /* \"contracts/token.sol\":2085:2107  totalSupply() + amount */\n      tag_117\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n        /* \"contracts/token.sol\":2085:2121  totalSupply() + amount <= MAX_SUPPLY */\n      gt\n      iszero\n        /* \"contracts/token.sol\":2077:2145  require(totalSupply() + amount <= MAX_SUPPLY, \"Max supply exceeded\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3563:3565   */\n      0x20\n        /* \"contracts/token.sol\":2077:2145  require(totalSupply() + amount <= MAX_SUPPLY, \"Max supply exceeded\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3545:3566   */\n      mstore\n        /* \"#utility.yul\":3602:3604   */\n      0x13\n        /* \"#utility.yul\":3582:3600   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3575:3605   */\n      mstore\n      shl(0x6a, 0x13585e081cdd5c1c1b1e48195e18d959591959)\n        /* \"#utility.yul\":3621:3639   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3614:3663   */\n      mstore\n        /* \"#utility.yul\":3680:3698   */\n      0x64\n      add\n        /* \"contracts/token.sol\":2077:2145  require(totalSupply() + amount <= MAX_SUPPLY, \"Max supply exceeded\") */\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"contracts/token.sol\":2155:2172  _mint(to, amount) */\n      tag_122\n        /* \"contracts/token.sol\":2161:2163  to */\n      dup3\n        /* \"contracts/token.sol\":2165:2171  amount */\n      dup3\n        /* \"contracts/token.sol\":2155:2160  _mint */\n      tag_123\n        /* \"contracts/token.sol\":2155:2172  _mint(to, amount) */\n      jump\t// in\n    tag_122:\n        /* \"contracts/token.sol\":2008:2179  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      tag_125\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":692:697  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:677  _burn */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1726:1810  function paused() public view virtual returns (bool) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1796:1803  _paused */\n      sload(0x05)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1726:1810  function paused() public view virtual returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_109\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_111\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1112:1119  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1135:1140  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1111  _spendAllowance */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1157:1164  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1166:1171  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1156  _burn */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      jump\t// in\n        /* \"contracts/token.sol\":2280:2339  function pause() public onlyOwner {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_109\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_140:\n        /* \"contracts/token.sol\":2324:2332  _pause() */\n      tag_111\n        /* \"contracts/token.sol\":2324:2330  _pause */\n      tag_143\n        /* \"contracts/token.sol\":2324:2332  _pause() */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_88\n      swap1\n      tag_89\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3313:3317  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3394  _transfer(owner, to, value) */\n      tag_97\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3386  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3388:3393  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3376  _transfer */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3394  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_82:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3535:3542  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3572  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_156\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_109\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_156:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_158\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_125\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8723:8728  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8730:8737  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8739:8744  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8746:8750  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8722  _approve */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10795  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10418:10442  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10470  allowance(owner, spender) */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10455:10460  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10462:10469  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10454  allowance */\n      tag_82\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10470  allowance(owner, spender) */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10418:10470  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10484:10500  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10484:10520  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10480:10789  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_171\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10559:10564  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10540:10556  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10540:10564  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10536:10666  if (currentAllowance < value) {... */\n      iszero\n      tag_168\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10618:10625  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10627:10643  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10645:10650  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10591:10651  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10536:10666  if (currentAllowance < value) {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10764  _approve(owner, spender, currentAllowance - value, false) */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10716:10721  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10730  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10751:10756  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10748  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10756  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10763  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10715  _approve */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10764  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10408:10795  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10795  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5297:5597  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_105:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5398  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n      tag_173\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5448:5449  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5451  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n    tag_173:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5491  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n      tag_175\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5543:5544  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5514:5546  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5574:5578  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5580:5582  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5584:5589  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5573  _update */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_181\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_69\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_181:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_111\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2586:2703  function _unpause() internal virtual whenPaused {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1597:1613  _requirePaused() */\n      tag_186\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1597:1611  _requirePaused */\n      tag_187\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1597:1613  _requirePaused() */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2644:2651  _paused */\n      0x05\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2644:2659  _paused = false */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2674:2696  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2683:2695  _msgSender() */\n    tag_189:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2674:2696  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_190\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2586:2703  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\n    tag_123:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n      tag_192\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7506  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7476:7508  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7548:7555  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7557:7562  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  _update */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7888:8094  function _burn(address account, uint256 value) internal {... */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7958:7979  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7954:8043  if (account == address(0)) {... */\n      tag_196\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8029:8030  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8002:8032  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7954:8043  if (account == address(0)) {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8052:8087  _update(account, address(0), value) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8060:8067  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8077:8078  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8081:8086  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8052:8059  _update */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8052:8087  _update(account, address(0), value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2339:2454  function _pause() internal virtual whenNotPaused {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      tag_201\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1367  _requireNotPaused */\n      tag_202\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      jump\t// in\n    tag_201:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2398:2405  _paused */\n      0x05\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2398:2412  _paused = true */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2427:2447  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2434:2446  _msgSender() */\n      tag_189\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_164:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9736  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n      tag_207\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9788:9789  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9759:9791  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n    tag_207:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9836  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n      tag_209\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9887:9888  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9859:9890  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n    tag_209:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9921  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9937  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9945  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:10031  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_171\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10005:10012  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9998:10003  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10014:10019  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_212\n      swap2\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token.sol\":2584:2751  function _update(... */\n    tag_178:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      tag_214\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1367  _requireNotPaused */\n      tag_202\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      jump\t// in\n    tag_214:\n        /* \"contracts/token.sol\":2714:2744  super._update(from, to, value) */\n      tag_163\n        /* \"contracts/token.sol\":2728:2732  from */\n      dup4\n        /* \"contracts/token.sol\":2734:2736  to */\n      dup4\n        /* \"contracts/token.sol\":2738:2743  value */\n      dup4\n        /* \"contracts/token.sol\":2714:2727  super._update */\n      tag_217\n        /* \"contracts/token.sol\":2714:2744  super._update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2078:2204  function _requirePaused() internal view virtual {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2141:2149  paused() */\n      tag_219\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2141:2147  paused */\n      tag_54\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2141:2149  paused() */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2136:2198  if (!paused()) {... */\n      tag_111\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2172:2187  ExpectedPause() */\n      mload(0x40)\n      shl(0xe0, 0x8dfc202b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1878:2006  function _requireNotPaused() internal view virtual {... */\n    tag_202:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1943:1951  paused() */\n      tag_222\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1943:1949  paused */\n      tag_54\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1943:1951  paused() */\n      jump\t// in\n    tag_222:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1939:2000  if (paused()) {... */\n      iszero\n      tag_111\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1974:1989  EnforcedPause() */\n      mload(0x40)\n      shl(0xe0, 0xd93c0665)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_217:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n      tag_225\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6153:6158  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6149  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6158  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_226\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_226:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n      tag_227\n      swap1\n      pop\n      jump\n    tag_225:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6208  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6263  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n      iszero\n      tag_228\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6315:6319  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6334:6339  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n    tag_228:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6484  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6512  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6512  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n    tag_227:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n      tag_230\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6726  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6735  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n      jump(tag_231)\n    tag_230:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6934  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6947  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n    tag_231:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7004  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7000  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7006:7011  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      mload(0x40)\n      tag_232\n      swap2\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:562   */\n    tag_24:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_236:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_238\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_236)\n    tag_238:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_233:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_240\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_240:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_27:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_242\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_242:\n        /* \"#utility.yul\":913:942   */\n      tag_243\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_233\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_37:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_247\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_247:\n        /* \"#utility.yul\":1563:1592   */\n      tag_248\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_233\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_249\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_233\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2080   */\n    tag_51:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_252\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_252:\n      pop\n        /* \"#utility.yul\":2051:2074   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1900:2080   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2085:2271   */\n    tag_58:\n        /* \"#utility.yul\":2144:2150   */\n      0x00\n        /* \"#utility.yul\":2197:2199   */\n      0x20\n        /* \"#utility.yul\":2185:2194   */\n      dup3\n        /* \"#utility.yul\":2176:2183   */\n      dup5\n        /* \"#utility.yul\":2172:2195   */\n      sub\n        /* \"#utility.yul\":2168:2200   */\n      slt\n        /* \"#utility.yul\":2165:2217   */\n      iszero\n      tag_254\n      jumpi\n        /* \"#utility.yul\":2213:2214   */\n      0x00\n        /* \"#utility.yul\":2210:2211   */\n      dup1\n        /* \"#utility.yul\":2203:2215   */\n      revert\n        /* \"#utility.yul\":2165:2217   */\n    tag_254:\n        /* \"#utility.yul\":2236:2265   */\n      tag_255\n        /* \"#utility.yul\":2255:2264   */\n      dup3\n        /* \"#utility.yul\":2236:2265   */\n      tag_233\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":2226:2265   */\n      swap4\n        /* \"#utility.yul\":2085:2271   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2276:2479   */\n    tag_71:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2440:2472   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2422:2473   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2410:2412   */\n      0x20\n        /* \"#utility.yul\":2395:2413   */\n      add\n      swap1\n        /* \"#utility.yul\":2276:2479   */\n      jump\t// out\n        /* \"#utility.yul\":2484:2744   */\n    tag_81:\n        /* \"#utility.yul\":2552:2558   */\n      0x00\n        /* \"#utility.yul\":2560:2566   */\n      dup1\n        /* \"#utility.yul\":2613:2615   */\n      0x40\n        /* \"#utility.yul\":2601:2610   */\n      dup4\n        /* \"#utility.yul\":2592:2599   */\n      dup6\n        /* \"#utility.yul\":2588:2611   */\n      sub\n        /* \"#utility.yul\":2584:2616   */\n      slt\n        /* \"#utility.yul\":2581:2633   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":2629:2630   */\n      0x00\n        /* \"#utility.yul\":2626:2627   */\n      dup1\n        /* \"#utility.yul\":2619:2631   */\n      revert\n        /* \"#utility.yul\":2581:2633   */\n    tag_258:\n        /* \"#utility.yul\":2652:2681   */\n      tag_259\n        /* \"#utility.yul\":2671:2680   */\n      dup4\n        /* \"#utility.yul\":2652:2681   */\n      tag_233\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":2642:2681   */\n      swap2\n      pop\n        /* \"#utility.yul\":2700:2738   */\n      tag_260\n        /* \"#utility.yul\":2734:2736   */\n      0x20\n        /* \"#utility.yul\":2723:2732   */\n      dup5\n        /* \"#utility.yul\":2719:2737   */\n      add\n        /* \"#utility.yul\":2700:2738   */\n      tag_233\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":2690:2738   */\n      swap1\n      pop\n        /* \"#utility.yul\":2484:2744   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2749:3129   */\n    tag_89:\n        /* \"#utility.yul\":2828:2829   */\n      0x01\n        /* \"#utility.yul\":2824:2836   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2871:2883   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2892:2953   */\n      tag_262\n      jumpi\n        /* \"#utility.yul\":2946:2950   */\n      0x7f\n        /* \"#utility.yul\":2938:2944   */\n      dup3\n        /* \"#utility.yul\":2934:2951   */\n      and\n        /* \"#utility.yul\":2924:2951   */\n      swap2\n      pop\n        /* \"#utility.yul\":2892:2953   */\n    tag_262:\n        /* \"#utility.yul\":2999:3001   */\n      0x20\n        /* \"#utility.yul\":2991:2997   */\n      dup3\n        /* \"#utility.yul\":2988:3002   */\n      lt\n        /* \"#utility.yul\":2968:2986   */\n      dup2\n        /* \"#utility.yul\":2965:3003   */\n      sub\n        /* \"#utility.yul\":2962:3123   */\n      tag_263\n      jumpi\n        /* \"#utility.yul\":3045:3055   */\n      0x4e487b71\n        /* \"#utility.yul\":3040:3043   */\n      0xe0\n        /* \"#utility.yul\":3036:3056   */\n      shl\n        /* \"#utility.yul\":3033:3034   */\n      0x00\n        /* \"#utility.yul\":3026:3057   */\n      mstore\n        /* \"#utility.yul\":3080:3084   */\n      0x22\n        /* \"#utility.yul\":3077:3078   */\n      0x04\n        /* \"#utility.yul\":3070:3085   */\n      mstore\n        /* \"#utility.yul\":3108:3112   */\n      0x24\n        /* \"#utility.yul\":3105:3106   */\n      0x00\n        /* \"#utility.yul\":3098:3113   */\n      revert\n        /* \"#utility.yul\":2962:3123   */\n    tag_263:\n      pop\n        /* \"#utility.yul\":2749:3129   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3134:3356   */\n    tag_118:\n        /* \"#utility.yul\":3199:3208   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3220:3230   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3217:3350   */\n      iszero\n      tag_94\n      jumpi\n        /* \"#utility.yul\":3272:3282   */\n      0x4e487b71\n        /* \"#utility.yul\":3267:3270   */\n      0xe0\n        /* \"#utility.yul\":3263:3283   */\n      shl\n        /* \"#utility.yul\":3260:3261   */\n      0x00\n        /* \"#utility.yul\":3253:3284   */\n      mstore\n        /* \"#utility.yul\":3307:3311   */\n      0x11\n        /* \"#utility.yul\":3304:3305   */\n      0x04\n        /* \"#utility.yul\":3297:3312   */\n      mstore\n        /* \"#utility.yul\":3335:3339   */\n      0x24\n        /* \"#utility.yul\":3332:3333   */\n      0x00\n        /* \"#utility.yul\":3325:3340   */\n      revert\n        /* \"#utility.yul\":3709:4054   */\n    tag_170:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3929:3961   */\n      swap4\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":3911:3962   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3993:3995   */\n      0x20\n        /* \"#utility.yul\":3978:3996   */\n      dup4\n      add\n        /* \"#utility.yul\":3971:4005   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":4036:4038   */\n      0x40\n        /* \"#utility.yul\":4021:4039   */\n      dup3\n      add\n        /* \"#utility.yul\":4014:4048   */\n      mstore\n        /* \"#utility.yul\":3899:3901   */\n      0x60\n        /* \"#utility.yul\":3884:3902   */\n      add\n      swap1\n        /* \"#utility.yul\":3709:4054   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f529989a813db1d2559468912ed7ef9fa1bfb27f6bf334d9913188b73ea920de64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1327": {
									"entryPoint": null,
									"id": 1327,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 674,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_requireNotPaused_1041": {
									"entryPoint": 763,
									"id": 1041,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 593,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_1405": {
									"entryPoint": 735,
									"id": 1405,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 816,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@paused_1029": {
									"entryPoint": null,
									"id": 1029,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint8t_uint256_fromMemory": {
									"entryPoint": 1119,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_110461b12e459dc76e692e7a47f9621cf45c7d48020c3c7b2066107cdf1f52ae__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_66951e943767d1a82db964b88c0b96d34edc5f8603ce5bb4a5ed6ff204c0ce11__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cf5f0b19ff04fa207c20b1f7a248a3040f08c0b8ec31b088d64a90e74a006752__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df21d991ce9f9f19ddeb71ee966704400557f7736aa26cfa8b0002d28a07b080__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1875,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 1852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1673,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1907,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 1280,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 1222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1581,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1202,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7419:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "127:396:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "173:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "182:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "185:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "175:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "175:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "175:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "148:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "157:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "144:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "144:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "169:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "140:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "140:32:10"
															},
															"nodeType": "YulIf",
															"src": "137:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "198:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "217:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "211:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "211:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "202:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "290:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "299:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "302:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "292:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "292:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "292:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "249:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "260:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "275:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "280:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "271:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "271:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "284:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "267:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "267:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "256:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "256:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "246:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "246:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "239:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "239:50:10"
															},
															"nodeType": "YulIf",
															"src": "236:70:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "315:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "325:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "315:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "339:40:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "364:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "375:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "360:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "360:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "354:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "354:25:10"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "343:7:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "431:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "440:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "443:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "433:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "433:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "433:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nodeType": "YulIdentifier",
																				"src": "401:7:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value_1",
																						"nodeType": "YulIdentifier",
																						"src": "414:7:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "423:4:10",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "410:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "410:18:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "398:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "398:31:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "391:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "391:39:10"
															},
															"nodeType": "YulIf",
															"src": "388:59:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "456:17:10",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "466:7:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "456:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "482:35:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "502:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "513:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "498:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "498:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "492:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "492:25:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "482:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint8t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "77:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "88:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "100:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "108:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "116:6:10",
														"type": ""
													}
												],
												"src": "14:509:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "560:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "577:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "584:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "589:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "580:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "580:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "570:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "570:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "617:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "620:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "610:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "610:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "610:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "641:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "644:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "634:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "634:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "634:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "528:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "715:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "725:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "739:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "742:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "735:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "735:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "725:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "756:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "786:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "792:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "782:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "782:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "760:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "833:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "835:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "849:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "857:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "845:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "845:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "835:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "813:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "806:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "806:26:10"
															},
															"nodeType": "YulIf",
															"src": "803:61:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "923:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "944:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "951:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "956:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "947:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "947:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "937:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "937:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "937:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "988:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "991:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "981:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "981:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "981:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1016:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1019:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1009:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1009:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1009:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "879:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "902:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "910:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "899:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "899:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "876:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "876:38:10"
															},
															"nodeType": "YulIf",
															"src": "873:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "695:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "704:6:10",
														"type": ""
													}
												],
												"src": "660:380:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1101:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1118:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "1121:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1111:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1111:14:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1111:14:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1134:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1152:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1155:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "1142:9:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1142:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "1134:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1084:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1092:4:10",
														"type": ""
													}
												],
												"src": "1045:121:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1252:464:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1285:425:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1299:11:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1309:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "1303:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1330:2:10"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1334:5:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1323:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1323:17:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1323:17:10"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1353:31:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1375:2:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1379:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "1365:9:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1365:19:10"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "1357:4:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1397:57:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1420:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1430:1:10",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "1437:10:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1449:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1433:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1433:19:10"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "1426:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1426:27:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1416:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1416:38:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "1401:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1491:23:10",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1493:19:10",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "1508:4:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "1493:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "1473:10:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1485:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "1470:2:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:20:10"
																		},
																		"nodeType": "YulIf",
																		"src": "1467:47:10"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1527:41:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1541:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1551:1:10",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "1558:3:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1563:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1554:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1554:12:10"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "1547:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1547:20:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1537:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1537:31:10"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "1531:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1581:24:10",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "1594:11:10"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "1585:5:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1679:21:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1688:5:10"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1695:2:10"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "1681:6:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1681:17:10"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1681:17:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "1629:5:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1636:2:10"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "1626:2:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1626:13:10"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "1640:26:10",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1642:22:10",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1655:5:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1662:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1651:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1651:13:10"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "1642:5:10"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "1622:3:10",
																			"statements": []
																		},
																		"src": "1618:82:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "1268:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1273:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1265:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1265:11:10"
															},
															"nodeType": "YulIf",
															"src": "1262:448:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1224:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1231:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "1236:10:10",
														"type": ""
													}
												],
												"src": "1171:545:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1806:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1816:65:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "1831:4:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1849:1:10",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "1852:3:10"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1845:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1845:11:10"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1862:1:10",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "1858:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1858:6:10"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "1841:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1841:24:10"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1837:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1837:29:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1827:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1827:40:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1873:1:10",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "1876:3:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1869:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1869:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1824:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1824:57:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "1816:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1783:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1789:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "1797:4:10",
														"type": ""
													}
												],
												"src": "1721:166:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1988:1256:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1998:24:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2018:3:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2012:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2012:10:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "2002:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2065:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2067:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2067:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2067:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2037:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2053:2:10",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2057:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2049:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2049:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2061:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2045:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2045:18:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2034:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2034:30:10"
															},
															"nodeType": "YulIf",
															"src": "2031:56:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2140:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "2178:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "2172:5:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2172:11:10"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "2146:25:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2146:38:10"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2186:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "2096:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2096:97:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2096:97:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2202:18:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2219:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "2206:9:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2229:23:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2248:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "2233:11:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2261:24:10",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "2274:11:10"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "2261:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2331:656:10",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2345:35:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2364:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2376:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "2372:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2372:7:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "2360:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2360:20:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "2349:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2393:49:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2437:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "2407:29:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2407:35:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "2397:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2455:10:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2464:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "2459:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2542:172:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2567:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "2585:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "2590:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "2581:3:10"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2581:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "2575:5:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2575:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2560:6:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2560:42:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2560:42:10"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2619:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2633:6:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2641:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2629:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2629:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "2619:6:10"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2660:40:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "2677:9:10"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2688:11:10"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2673:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2673:27:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "2660:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2489:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "2492:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "2486:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2486:14:10"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "2501:28:10",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "2503:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "2512:1:10"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2515:11:10"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2508:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2508:19:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2503:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "2482:3:10",
																					"statements": []
																				},
																				"src": "2478:236:10"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2762:166:10",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "2780:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2807:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2812:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2803:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2803:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2797:5:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2797:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "2784:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2847:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "2859:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "2886:1:10",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "2889:6:10"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "2882:3:10"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "2882:14:10"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2898:3:10",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "2878:3:10"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2878:24:10"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2908:1:10",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "2904:3:10"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2904:6:10"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "2874:3:10"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "2874:37:10"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "2870:3:10"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2870:42:10"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "2855:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2855:58:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2840:6:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2840:74:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2840:74:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "2733:7:10"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2742:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "2730:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2730:19:10"
																				},
																				"nodeType": "YulIf",
																				"src": "2727:201:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2948:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2962:1:10",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "2965:6:10"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2958:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2958:14:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2974:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2954:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2954:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2941:6:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2941:36:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2941:36:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2324:663:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2329:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3004:234:10",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3018:14:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3031:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "3022:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3067:67:10",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3085:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3104:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3109:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3100:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3100:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3094:5:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3094:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3085:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "3048:6:10"
																				},
																				"nodeType": "YulIf",
																				"src": "3045:89:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3154:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3213:5:10"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "3220:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "3160:52:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3160:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3147:6:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3147:81:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3147:81:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2996:242:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2304:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2312:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2301:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2301:14:10"
															},
															"nodeType": "YulSwitch",
															"src": "2294:944:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1973:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1979:3:10",
														"type": ""
													}
												],
												"src": "1892:1352:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3350:102:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3360:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3372:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3383:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3368:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3368:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3360:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3402:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3417:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3433:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3438:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3429:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3429:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3442:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3425:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3425:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3413:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3413:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3395:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3395:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3395:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3319:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3330:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3341:4:10",
														"type": ""
													}
												],
												"src": "3249:203:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3631:163:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3648:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3659:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3641:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3641:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3641:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3682:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3693:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3678:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3678:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3698:2:10",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3671:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3671:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3671:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3721:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3732:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3717:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3717:18:10"
																	},
																	{
																		"hexValue": "496e76616c6964206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3737:15:10",
																		"type": "",
																		"value": "Invalid owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3710:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3710:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3710:43:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3762:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3774:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3785:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3770:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3770:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3762:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_110461b12e459dc76e692e7a47f9621cf45c7d48020c3c7b2066107cdf1f52ae__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3608:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3622:4:10",
														"type": ""
													}
												],
												"src": "3457:337:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3973:167:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3990:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4001:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3983:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3983:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3983:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4024:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4035:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4020:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4020:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:10",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4013:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4013:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4013:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4063:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4074:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4059:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4059:18:10"
																	},
																	{
																		"hexValue": "446563696d616c7320746f6f2068696768",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4079:19:10",
																		"type": "",
																		"value": "Decimals too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4052:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4052:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4052:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4108:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4120:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4131:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4116:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4116:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4108:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cf5f0b19ff04fa207c20b1f7a248a3040f08c0b8ec31b088d64a90e74a006752__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3950:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3964:4:10",
														"type": ""
													}
												],
												"src": "3799:341:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4319:181:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4336:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4347:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4329:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4329:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4329:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4370:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4381:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4366:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4366:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4386:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4359:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4359:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4359:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4409:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4420:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4405:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4405:18:10"
																	},
																	{
																		"hexValue": "496e697469616c20737570706c79206d75737420626520706f736974697665",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4425:33:10",
																		"type": "",
																		"value": "Initial supply must be positive"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4398:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4398:61:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4398:61:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4468:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4480:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4491:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4476:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4476:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4468:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df21d991ce9f9f19ddeb71ee966704400557f7736aa26cfa8b0002d28a07b080__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4296:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4310:4:10",
														"type": ""
													}
												],
												"src": "4145:355:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4537:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4554:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4561:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4566:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4557:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4557:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4547:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4547:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4547:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4594:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4597:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4587:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4587:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4587:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4618:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4621:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4611:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4611:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4611:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4505:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4701:358:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4711:16:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4726:1:10",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "4715:7:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4736:16:10",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "4745:7:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "4736:5:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4761:13:10",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "4769:5:10"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "4761:4:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4825:228:10",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "4870:22:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "4872:16:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4872:18:10"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "4872:18:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "4845:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4859:1:10",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "4855:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4855:6:10"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "4863:4:10"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "4851:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4851:17:10"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "4842:2:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4842:27:10"
																		},
																		"nodeType": "YulIf",
																		"src": "4839:53:10"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "4931:29:10",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "4933:25:10",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "4946:5:10"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "4953:4:10"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "4942:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4942:16:10"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "4933:5:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "4912:8:10"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "4922:7:10"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4908:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4908:22:10"
																		},
																		"nodeType": "YulIf",
																		"src": "4905:55:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4973:23:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "4985:4:10"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "4991:4:10"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "4981:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4981:15:10"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "4973:4:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5009:34:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "5025:7:10"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "5034:8:10"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "5021:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5021:22:10"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "5009:8:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "4794:8:10"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "4804:7:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4791:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4791:21:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4813:3:10",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4787:3:10",
																"statements": []
															},
															"src": "4783:270:10"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "4665:5:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "4672:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "4685:5:10",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "4692:4:10",
														"type": ""
													}
												],
												"src": "4637:422:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5123:747:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5161:52:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5175:10:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "5184:1:10",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "5175:5:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "5198:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "5143:8:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5136:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5136:16:10"
															},
															"nodeType": "YulIf",
															"src": "5133:80:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5246:52:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5260:10:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "5269:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "5260:5:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "5283:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "5232:4:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5225:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5225:12:10"
															},
															"nodeType": "YulIf",
															"src": "5222:76:10"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5334:52:10",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "5348:10:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5357:1:10",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "5348:5:10"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "5371:5:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "5327:59:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5332:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5402:123:10",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5437:22:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "5439:16:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5439:18:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "5439:18:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "5422:8:10"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5432:3:10",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "5419:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5419:17:10"
																				},
																				"nodeType": "YulIf",
																				"src": "5416:43:10"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "5472:25:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "5485:8:10"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5495:1:10",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5481:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5481:16:10"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "5472:5:10"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "5510:5:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "5395:130:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5400:1:10",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "5314:4:10"
															},
															"nodeType": "YulSwitch",
															"src": "5307:218:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5623:70:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5637:28:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "5650:4:10"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "5656:8:10"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "5646:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5646:19:10"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "5637:5:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "5678:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "5547:4:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5553:2:10",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "5544:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5544:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "5561:8:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5571:2:10",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "5558:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5558:16:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5540:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5540:35:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "5584:4:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5590:3:10",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "5581:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5581:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "5599:8:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5609:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "5596:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5596:16:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5577:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5577:36:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5537:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5537:77:10"
															},
															"nodeType": "YulIf",
															"src": "5534:159:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5702:57:10",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "5744:4:10"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "5750:8:10"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "5725:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5725:34:10"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "5706:7:10",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "5715:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5804:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5806:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5806:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5806:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "5774:7:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5791:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "5787:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5787:6:10"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "5795:6:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "5783:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5783:19:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5771:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5771:32:10"
															},
															"nodeType": "YulIf",
															"src": "5768:58:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5835:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "5848:7:10"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "5857:6:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5844:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5844:20:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "5835:5:10"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "5094:4:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "5100:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "5113:5:10",
														"type": ""
													}
												],
												"src": "5064:806:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5943:72:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5953:56:10",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "5983:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "5993:8:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6003:4:10",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5989:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5989:19:10"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "5962:20:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5962:47:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "5953:5:10"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "5914:4:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "5920:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "5933:5:10",
														"type": ""
													}
												],
												"src": "5875:140:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6066:171:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6097:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6118:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6125:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6130:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "6121:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6121:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6111:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6111:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6111:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6162:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6165:4:10",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6155:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6155:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6155:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6190:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6193:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6183:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6183:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6183:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6086:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6079:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6079:9:10"
															},
															"nodeType": "YulIf",
															"src": "6076:132:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6217:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6226:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6229:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6222:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6222:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6217:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6051:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6054:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "6060:1:10",
														"type": ""
													}
												],
												"src": "6020:217:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6416:166:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6433:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6444:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6426:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6426:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6426:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6467:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6478:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6463:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6463:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6483:2:10",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6456:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6456:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6456:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6506:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6517:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6502:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6502:18:10"
																	},
																	{
																		"hexValue": "537570706c7920746f6f206c61726765",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6522:18:10",
																		"type": "",
																		"value": "Supply too large"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6495:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6495:46:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6495:46:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6550:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6562:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6573:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6558:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6558:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6550:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_66951e943767d1a82db964b88c0b96d34edc5f8603ce5bb4a5ed6ff204c0ce11__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6393:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6407:4:10",
														"type": ""
													}
												],
												"src": "6242:340:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6639:116:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6649:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6664:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6667:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6660:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6660:9:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "6649:7:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6727:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6729:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6729:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6729:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6698:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6691:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6691:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "6705:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "6712:7:10"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "6721:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "6708:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6708:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "6702:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6702:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "6688:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6688:37:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6681:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6681:45:10"
															},
															"nodeType": "YulIf",
															"src": "6678:71:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6618:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6621:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "6627:7:10",
														"type": ""
													}
												],
												"src": "6587:168:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6808:77:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6818:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6829:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6832:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6825:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6825:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6818:3:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6857:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6859:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6859:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6859:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6849:1:10"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "6852:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6846:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6846:10:10"
															},
															"nodeType": "YulIf",
															"src": "6843:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6791:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6794:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6800:3:10",
														"type": ""
													}
												],
												"src": "6760:125:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7047:188:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7057:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7069:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7080:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7065:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7065:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7057:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7099:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7114:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7130:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7135:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "7126:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7126:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7139:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "7122:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7122:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7110:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7110:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7092:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7092:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7092:51:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7163:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7174:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7159:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7159:18:10"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7179:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7152:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7152:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7152:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7206:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7217:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7202:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7202:18:10"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7222:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7195:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7195:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7195:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7000:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7011:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7019:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7027:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7038:4:10",
														"type": ""
													}
												],
												"src": "6890:345:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7341:76:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7351:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7363:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7374:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7359:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7359:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7351:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7393:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7404:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7386:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7386:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7386:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7310:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7321:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7332:4:10",
														"type": ""
													}
												],
												"src": "7240:177:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_addresst_uint8t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        if iszero(eq(value_1, and(value_1, 0xff))) { revert(0, 0) }\n        value1 := value_1\n        value2 := mload(add(headStart, 64))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_110461b12e459dc76e692e7a47f9621cf45c7d48020c3c7b2066107cdf1f52ae__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Invalid owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cf5f0b19ff04fa207c20b1f7a248a3040f08c0b8ec31b088d64a90e74a006752__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Decimals too high\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_df21d991ce9f9f19ddeb71ee966704400557f7736aa26cfa8b0002d28a07b080__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Initial supply must be positive\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_66951e943767d1a82db964b88c0b96d34edc5f8603ce5bb4a5ed6ff204c0ce11__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Supply too large\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x12A7 CODESIZE SUB DUP1 PUSH3 0x12A7 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x33 SWAP2 PUSH3 0x45F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0xC DUP1 DUP3 MSTORE PUSH12 0xE5B881E5AE89E4BB99E5A5B3 PUSH1 0xA0 SHL PUSH1 0x20 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP7 ADD SWAP1 SWAP6 MSTORE SWAP2 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE DUP5 SWAP2 PUSH1 0x3 PUSH3 0x78 DUP4 DUP3 PUSH3 0x551 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x87 DUP3 DUP3 PUSH3 0x551 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0xBF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xB6 SWAP2 SWAP1 PUSH3 0x619 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xCA DUP2 PUSH3 0x251 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x113 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x24B73B30B634B21037BBB732B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xB6 JUMP JUMPDEST PUSH1 0x12 DUP3 PUSH1 0xFF AND GT ISZERO PUSH3 0x15D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x88CAC6D2DAC2D8E640E8DEDE40D0D2CED PUSH1 0x7B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xB6 JUMP JUMPDEST DUP1 PUSH0 SUB PUSH3 0x1AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C20737570706C79206D75737420626520706F73697469766500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xB6 JUMP JUMPDEST PUSH3 0x1BB DUP3 PUSH1 0xA PUSH3 0x73C JUMP JUMPDEST PUSH3 0x1C8 SWAP1 PUSH0 NOT PUSH3 0x753 JUMP JUMPDEST DUP2 GT ISZERO PUSH3 0x20C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x537570706C7920746F6F206C61726765 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xB6 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL PUSH1 0xFF DUP6 AND MUL OR SWAP1 SSTORE PUSH3 0x248 DUP4 PUSH3 0x236 DUP5 PUSH1 0xA PUSH3 0x73C JUMP JUMPDEST PUSH3 0x242 SWAP1 DUP5 PUSH3 0x773 JUMP JUMPDEST PUSH3 0x2A2 JUMP JUMPDEST POP POP POP PUSH3 0x7A3 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x2CE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xB6 SWAP2 SWAP1 PUSH3 0x619 JUMP JUMPDEST PUSH3 0x2DB PUSH0 DUP4 DUP4 PUSH3 0x2DF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0x2E9 PUSH3 0x2FB JUMP JUMPDEST PUSH3 0x2F6 DUP4 DUP4 DUP4 PUSH3 0x330 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x30F PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO PUSH3 0x32E JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x35E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x352 SWAP2 SWAP1 PUSH3 0x78D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH3 0x3D0 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH3 0x3B2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH3 0xB6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x3EE JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH3 0x40C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x452 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x472 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x489 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH1 0xFF DUP2 AND DUP2 EQ PUSH3 0x4A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x4DB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x4FA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x2F6 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x528 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x549 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x534 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x56D JUMPI PUSH3 0x56D PUSH3 0x4B2 JUMP JUMPDEST PUSH3 0x585 DUP2 PUSH3 0x57E DUP5 SLOAD PUSH3 0x4C6 JUMP JUMPDEST DUP5 PUSH3 0x500 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x5BB JUMPI PUSH0 DUP5 ISZERO PUSH3 0x5A3 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x549 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x5EB JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x5CA JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x609 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x681 JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH3 0x665 JUMPI PUSH3 0x665 PUSH3 0x62D JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x673 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x646 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH3 0x699 JUMPI POP PUSH1 0x1 PUSH3 0x736 JUMP JUMPDEST DUP2 PUSH3 0x6A7 JUMPI POP PUSH0 PUSH3 0x736 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x6C0 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x6CB JUMPI PUSH3 0x6EB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x736 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x6DF JUMPI PUSH3 0x6DF PUSH3 0x62D JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x736 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x710 JUMPI POP DUP2 DUP2 EXP PUSH3 0x736 JUMP JUMPDEST PUSH3 0x71C DUP4 DUP4 PUSH3 0x641 JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH3 0x732 JUMPI PUSH3 0x732 PUSH3 0x62D JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x74C PUSH1 0xFF DUP5 AND DUP4 PUSH3 0x689 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH3 0x76E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH3 0x736 JUMPI PUSH3 0x736 PUSH3 0x62D JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x736 JUMPI PUSH3 0x736 PUSH3 0x62D JUMP JUMPDEST PUSH2 0xAF6 DUP1 PUSH3 0x7B1 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE4 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x233 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF0 PUSH2 0x246 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFD SWAP2 SWAP1 PUSH2 0x905 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 PUSH2 0x114 CALLDATASIZE PUSH1 0x4 PUSH2 0x96B JUMP JUMPDEST PUSH2 0x2D6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFD JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFD JUMP JUMPDEST PUSH2 0x119 PUSH2 0x149 CALLDATASIZE PUSH1 0x4 PUSH2 0x993 JUMP JUMPDEST PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFD JUMP JUMPDEST PUSH2 0x175 PUSH2 0x312 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x175 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0x96B JUMP JUMPDEST PUSH2 0x324 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0x9CC JUMP JUMPDEST PUSH2 0x3A3 JUMP JUMPDEST PUSH2 0x119 PUSH2 0x3B0 JUMP JUMPDEST PUSH2 0x12D PUSH2 0x1B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x3C0 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x1E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x96B JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x3E6 JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFD SWAP2 SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH2 0xF0 PUSH2 0x405 JUMP JUMPDEST PUSH2 0x119 PUSH2 0x21B CALLDATASIZE PUSH1 0x4 PUSH2 0x96B JUMP JUMPDEST PUSH2 0x414 JUMP JUMPDEST PUSH2 0x12D PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0xA17 JUMP JUMPDEST PUSH2 0x421 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x241 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0x44B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x255 SWAP1 PUSH2 0xA48 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x281 SWAP1 PUSH2 0xA48 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2CC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2A3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2CC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2AF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2E3 DUP2 DUP6 DUP6 PUSH2 0x485 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2FC DUP6 DUP3 DUP6 PUSH2 0x497 JUMP JUMPDEST PUSH2 0x307 DUP6 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x31A PUSH2 0x545 JUMP JUMPDEST PUSH2 0x322 PUSH2 0x577 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x32C PUSH2 0x545 JUMP JUMPDEST PUSH11 0x84595161401484A000000 DUP2 PUSH2 0x342 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x34C SWAP2 SWAP1 PUSH2 0xA80 JUMP JUMPDEST GT ISZERO PUSH2 0x395 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13585E081CDD5C1C1B1E48195E18D959591959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x39F DUP3 DUP3 PUSH2 0x5C6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3AD CALLER DUP3 PUSH2 0x5FA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3C8 PUSH2 0x545 JUMP JUMPDEST PUSH2 0x322 PUSH0 PUSH2 0x62E JUMP JUMPDEST PUSH2 0x3DC DUP3 CALLER DUP4 PUSH2 0x497 JUMP JUMPDEST PUSH2 0x39F DUP3 DUP3 PUSH2 0x5FA JUMP JUMPDEST PUSH2 0x3EE PUSH2 0x545 JUMP JUMPDEST PUSH2 0x322 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x255 SWAP1 PUSH2 0xA48 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2E3 DUP2 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x453 PUSH2 0x545 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x47C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH2 0x3AD DUP2 PUSH2 0x62E JUMP JUMPDEST PUSH2 0x492 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x6C2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4A2 DUP5 DUP5 PUSH2 0x421 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 LT ISZERO PUSH2 0x4E2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4D4 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA9F JUMP JUMPDEST PUSH2 0x4E2 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x6C2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x511 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x53A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH2 0x492 DUP4 DUP4 DUP4 PUSH2 0x794 JUMP JUMPDEST CALLER PUSH2 0x54E PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x322 JUMPI CALLER PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH2 0x57F PUSH2 0x7A7 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5BC SWAP2 SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5EF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH2 0x39F PUSH0 DUP4 DUP4 PUSH2 0x794 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x623 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH2 0x39F DUP3 PUSH0 DUP4 PUSH2 0x794 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x687 PUSH2 0x7CC JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x5AF CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x6EB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x714 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x4E2 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x786 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x79C PUSH2 0x7CC JUMP JUMPDEST PUSH2 0x492 DUP4 DUP4 DUP4 PUSH2 0x7F2 JUMP JUMPDEST PUSH2 0x7AF PUSH2 0x3B0 JUMP JUMPDEST PUSH2 0x322 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7D4 PUSH2 0x3B0 JUMP JUMPDEST ISZERO PUSH2 0x322 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x81C JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x811 SWAP2 SWAP1 PUSH2 0xA80 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x879 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x85B JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x895 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x8B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x8F8 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x930 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x914 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x966 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x97C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x985 DUP4 PUSH2 0x950 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9AE DUP5 PUSH2 0x950 JUMP JUMPDEST SWAP3 POP PUSH2 0x9BC PUSH1 0x20 DUP6 ADD PUSH2 0x950 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9DC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9FC DUP3 PUSH2 0x950 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA28 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA31 DUP4 PUSH2 0x950 JUMP JUMPDEST SWAP2 POP PUSH2 0xA3F PUSH1 0x20 DUP5 ADD PUSH2 0x950 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xA5C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xA7A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2E9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 0x29 SWAP9 SWAP11 DUP2 RETURNDATASIZE 0xB1 0xD2 SSTORE SWAP5 PUSH9 0x912ED7EF9FA1BFB27F PUSH12 0xF334D9913188B73EA920DE64 PUSH20 0x6F6C634300081400330000000000000000000000 ",
							"sourceMap": "459:2294:9:-:0;;;950:642;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1582:113:2;;;;;;;;;;;;-1:-1:-1;;;1582:113:2;;;;;;;;;;;;;;;;;;;;;;1118:12:9;;1648:5:2;:13;1582:113;1648:5;:13;:::i;:::-;-1:-1:-1;1671:7:2;:17;1681:7;1671;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1350:1;1322:31;;-1:-1:-1;;;1322:31:0;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;;;;;;1150:26:9;::::2;1142:52;;;::::0;-1:-1:-1;;;1142:52:9;;3659:2:10;1142:52:9::2;::::0;::::2;3641:21:10::0;3698:2;3678:18;;;3671:30;-1:-1:-1;;;3717:18:10;;;3710:43;3770:18;;1142:52:9::2;3457:337:10::0;1142:52:9::2;1229:2;1212:13;:19;;;;1204:49;;;::::0;-1:-1:-1;;;1204:49:9;;4001:2:10;1204:49:9::2;::::0;::::2;3983:21:10::0;4040:2;4020:18;;;4013:30;-1:-1:-1;;;4059:18:10;;;4052:47;4116:18;;1204:49:9::2;3799:341:10::0;1204:49:9::2;1271:13;1288:1;1271:18:::0;1263:62:::2;;;::::0;-1:-1:-1;;;1263:62:9;;4347:2:10;1263:62:9::2;::::0;::::2;4329:21:10::0;4386:2;4366:18;;;4359:30;4425:33;4405:18;;;4398:61;4476:18;;1263:62:9::2;4145:355:10::0;1263:62:9::2;1381:19;1387:13:::0;1381:2:::2;:19;:::i;:::-;1360:41;::::0;-1:-1:-1;;1360:41:9::2;:::i;:::-;1343:13;:58;;1335:87;;;::::0;-1:-1:-1;;;1335:87:9;;6444:2:10;1335:87:9::2;::::0;::::2;6426:21:10::0;6483:2;6463:18;;;6456:30;-1:-1:-1;;;6502:18:10;;;6495:46;6558:18;;1335:87:9::2;6242:340:10::0;1335:87:9::2;1433:9;:25:::0;;-1:-1:-1;;;;1433:25:9::2;-1:-1:-1::0;;;1433:25:9::2;::::0;::::2;;;::::0;;1527:58:::2;1533:12:::0;1564:19:::2;1433:25:::0;1564:2:::2;:19;:::i;:::-;1547:37;::::0;:13;:37:::2;:::i;:::-;1527:5;:58::i;:::-;950:642:::0;;;459:2294;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;7362:208:2:-;-1:-1:-1;;;;;7432:21:2;;7428:91;;7505:1;7476:32;;-1:-1:-1;;;7476:32:2;;;;;;;;:::i;7428:91::-;7528:35;7544:1;7548:7;7557:5;7528:7;:35::i;:::-;7362:208;;:::o;2584:167:9:-;1350:19:7;:17;:19::i;:::-;2714:30:9::1;2728:4:::0;2734:2;2738:5;2714:13:::1;:30::i;:::-;2584:167:::0;;;:::o;1878:128:7:-;1943:8;1796:7;;-1:-1:-1;;;1796:7:7;;;;;1726:84;1943:8;1939:61;;;1974:15;;-1:-1:-1;;;1974:15:7;;;;;;;;;;;1939:61;1878:128::o;5912:1107:2:-;-1:-1:-1;;;;;6001:18:2;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;5997:540:2;;-1:-1:-1;5997:540:2;;-1:-1:-1;;;;;6211:15:2;;6189:19;6211:15;;;;;;;;;;;6244:19;;;6240:115;;;6290:50;;-1:-1:-1;;;6290:50:2;;-1:-1:-1;;;;;7110:32:10;;6290:50:2;;;7092:51:10;7159:18;;;7152:34;;;7202:18;;;7195:34;;;7065:18;;6290:50:2;6890:345:10;6240:115:2;-1:-1:-1;;;;;6475:15:2;;:9;:15;;;;;;;;;;6493:19;;;;6475:37;;5997:540;-1:-1:-1;;;;;6551:16:2;;6547:425;;6714:12;:21;;;;;;;6547:425;;;-1:-1:-1;;;;;6925:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6547:425;7002:2;-1:-1:-1;;;;;6987:25:2;6996:4;-1:-1:-1;;;;;6987:25:2;;7006:5;6987:25;;;;7386::10;;7374:2;7359:18;;7240:177;6987:25:2;;;;;;;;5912:1107;;;:::o;14:509:10:-;100:6;108;116;169:2;157:9;148:7;144:23;140:32;137:52;;;185:1;182;175:12;137:52;211:16;;-1:-1:-1;;;;;256:31:10;;246:42;;236:70;;302:1;299;292:12;236:70;375:2;360:18;;354:25;325:5;;-1:-1:-1;423:4:10;410:18;;398:31;;388:59;;443:1;440;433:12;388:59;466:7;456:17;;;513:2;502:9;498:18;492:25;482:35;;14:509;;;;;:::o;528:127::-;589:10;584:3;580:20;577:1;570:31;620:4;617:1;610:15;644:4;641:1;634:15;660:380;739:1;735:12;;;;782;;;803:61;;857:4;849:6;845:17;835:27;;803:61;910:2;902:6;899:14;879:18;876:38;873:161;;956:10;951:3;947:20;944:1;937:31;991:4;988:1;981:15;1019:4;1016:1;1009:15;873:161;;660:380;;;:::o;1171:545::-;1273:2;1268:3;1265:11;1262:448;;;1309:1;1334:5;1330:2;1323:17;1379:4;1375:2;1365:19;1449:2;1437:10;1433:19;1430:1;1426:27;1420:4;1416:38;1485:4;1473:10;1470:20;1467:47;;;-1:-1:-1;1508:4:10;1467:47;1563:2;1558:3;1554:12;1551:1;1547:20;1541:4;1537:31;1527:41;;1618:82;1636:2;1629:5;1626:13;1618:82;;;1681:17;;;1662:1;1651:13;1618:82;;;1622:3;;;1171:545;;;:::o;1892:1352::-;2012:10;;-1:-1:-1;;;;;2034:30:10;;2031:56;;;2067:18;;:::i;:::-;2096:97;2186:6;2146:38;2178:4;2172:11;2146:38;:::i;:::-;2140:4;2096:97;:::i;:::-;2248:4;;2312:2;2301:14;;2329:1;2324:663;;;;3031:1;3048:6;3045:89;;;-1:-1:-1;3100:19:10;;;3094:26;3045:89;-1:-1:-1;;1849:1:10;1845:11;;;1841:24;1837:29;1827:40;1873:1;1869:11;;;1824:57;3147:81;;2294:944;;2324:663;1118:1;1111:14;;;1155:4;1142:18;;-1:-1:-1;;2360:20:10;;;2478:236;2492:7;2489:1;2486:14;2478:236;;;2581:19;;;2575:26;2560:42;;2673:27;;;;2641:1;2629:14;;;;2508:19;;2478:236;;;2482:3;2742:6;2733:7;2730:19;2727:201;;;2803:19;;;2797:26;-1:-1:-1;;2886:1:10;2882:14;;;2898:3;2878:24;2874:37;2870:42;2855:58;2840:74;;2727:201;-1:-1:-1;;;;;2974:1:10;2958:14;;;2954:22;2941:36;;-1:-1:-1;1892:1352:10:o;3249:203::-;-1:-1:-1;;;;;3413:32:10;;;;3395:51;;3383:2;3368:18;;3249:203::o;4505:127::-;4566:10;4561:3;4557:20;4554:1;4547:31;4597:4;4594:1;4587:15;4621:4;4618:1;4611:15;4637:422;4726:1;4769:5;4726:1;4783:270;4804:7;4794:8;4791:21;4783:270;;;4863:4;4859:1;4855:6;4851:17;4845:4;4842:27;4839:53;;;4872:18;;:::i;:::-;4922:7;4912:8;4908:22;4905:55;;;4942:16;;;;4905:55;5021:22;;;;4981:15;;;;4783:270;;;4787:3;4637:422;;;;;:::o;5064:806::-;5113:5;5143:8;5133:80;;-1:-1:-1;5184:1:10;5198:5;;5133:80;5232:4;5222:76;;-1:-1:-1;5269:1:10;5283:5;;5222:76;5314:4;5332:1;5327:59;;;;5400:1;5395:130;;;;5307:218;;5327:59;5357:1;5348:10;;5371:5;;;5395:130;5432:3;5422:8;5419:17;5416:43;;;5439:18;;:::i;:::-;-1:-1:-1;;5495:1:10;5481:16;;5510:5;;5307:218;;5609:2;5599:8;5596:16;5590:3;5584:4;5581:13;5577:36;5571:2;5561:8;5558:16;5553:2;5547:4;5544:12;5540:35;5537:77;5534:159;;;-1:-1:-1;5646:19:10;;;5678:5;;5534:159;5725:34;5750:8;5744:4;5725:34;:::i;:::-;5795:6;5791:1;5787:6;5783:19;5774:7;5771:32;5768:58;;;5806:18;;:::i;:::-;5844:20;;-1:-1:-1;5064:806:10;;;;;:::o;5875:140::-;5933:5;5962:47;6003:4;5993:8;5989:19;5983:4;5962:47;:::i;:::-;5953:56;5875:140;-1:-1:-1;;;5875:140:10:o;6020:217::-;6060:1;6086;6076:132;;6130:10;6125:3;6121:20;6118:1;6111:31;6165:4;6162:1;6155:15;6193:4;6190:1;6183:15;6076:132;-1:-1:-1;6222:9:10;;6020:217::o;6587:168::-;6660:9;;;6691;;6708:15;;;6702:22;;6688:37;6678:71;;6729:18;;:::i;6760:125::-;6825:9;;;6846:10;;;6843:36;;;6859:18;;:::i;7240:177::-;459:2294:9;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 1157,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 1730,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_672": {
									"entryPoint": 1530,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 1349,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 1478,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_961": {
									"entryPoint": null,
									"id": 961,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_1070": {
									"entryPoint": 1663,
									"id": 1070,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_1041": {
									"entryPoint": 1996,
									"id": 1041,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_1054": {
									"entryPoint": 1959,
									"id": 1054,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_798": {
									"entryPoint": 1175,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 1582,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 1256,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_1086": {
									"entryPoint": 1399,
									"id": 1086,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_1405": {
									"entryPoint": 1940,
									"id": 1405,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 2034,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 1057,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 726,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": null,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_922": {
									"entryPoint": 977,
									"id": 922,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_901": {
									"entryPoint": 931,
									"id": 901,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_1337": {
									"entryPoint": null,
									"id": 1337,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_1363": {
									"entryPoint": 804,
									"id": 1363,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 582,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1014,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1373": {
									"entryPoint": 998,
									"id": 1373,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_1029": {
									"entryPoint": 944,
									"id": 1029,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 960,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 1029,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": null,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 751,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 1099,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 1044,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unpause_1383": {
									"entryPoint": 786,
									"id": 1383,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 2384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2411,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2719,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2309,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0b608f755d10a61bd7bfbe50c676755794b42b2dd9daf91b7deb384eabaa476f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2688,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2632,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4056:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:427:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:10",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:10"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:10",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:10"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:10"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:10",
																"statements": []
															},
															"src": "294:140:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:10"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "478:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "483:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "443:42:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "443:42:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "494:62:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "537:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "546:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "553:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:54:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:10",
														"type": ""
													}
												],
												"src": "14:548:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "616:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "626:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "635:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "718:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "727:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "730:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "703:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "708:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "712:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "667:50:10"
															},
															"nodeType": "YulIf",
															"src": "664:70:10"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "595:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "606:5:10",
														"type": ""
													}
												],
												"src": "567:173:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "832:167:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "878:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "887:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "890:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "874:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:32:10"
															},
															"nodeType": "YulIf",
															"src": "842:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "903:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "913:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "951:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "989:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "961:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "790:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "801:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "813:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "821:6:10",
														"type": ""
													}
												],
												"src": "745:254:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1099:92:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1109:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1090:4:10",
														"type": ""
													}
												],
												"src": "1004:187:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1297:76:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1307:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1266:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1277:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1288:4:10",
														"type": ""
													}
												],
												"src": "1196:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1482:224:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1528:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1495:32:10"
															},
															"nodeType": "YulIf",
															"src": "1492:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1553:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1563:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1601:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1658:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:32:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1432:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1443:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1455:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1463:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1471:6:10",
														"type": ""
													}
												],
												"src": "1378:328:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1808:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1818:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1826:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:10",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1853:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1777:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1788:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1799:4:10",
														"type": ""
													}
												],
												"src": "1711:184:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1970:110:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2016:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1983:32:10"
															},
															"nodeType": "YulIf",
															"src": "1980:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2041:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2064:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2051:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1936:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1947:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1959:6:10",
														"type": ""
													}
												],
												"src": "1900:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2155:116:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2201:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2210:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2213:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2203:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2203:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2203:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2176:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2185:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2172:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2172:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2197:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2168:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2168:32:10"
															},
															"nodeType": "YulIf",
															"src": "2165:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2226:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2255:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2236:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2236:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2226:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2121:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2132:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2144:6:10",
														"type": ""
													}
												],
												"src": "2085:186:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2377:102:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2387:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2399:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2410:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2395:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2395:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2387:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2429:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2444:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2460:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2465:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2456:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2456:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2469:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2452:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2452:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2440:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2440:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2422:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2422:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2422:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2346:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2357:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2368:4:10",
														"type": ""
													}
												],
												"src": "2276:203:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2571:173:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2617:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2626:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2629:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2619:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2619:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2619:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2592:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2601:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2588:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2588:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2613:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2584:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2584:32:10"
															},
															"nodeType": "YulIf",
															"src": "2581:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2642:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2671:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2652:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2652:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2642:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2690:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2723:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2734:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2719:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2719:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2700:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2700:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2690:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2529:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2540:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2552:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2560:6:10",
														"type": ""
													}
												],
												"src": "2484:260:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2804:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2814:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2828:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2831:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2824:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2824:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2814:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2845:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2875:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2881:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2871:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2871:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2849:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2922:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2924:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2938:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2946:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2934:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2934:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2924:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2902:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2895:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2895:26:10"
															},
															"nodeType": "YulIf",
															"src": "2892:61:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3012:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3033:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3040:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3045:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3036:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3036:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3026:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3026:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3026:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3077:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3080:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3070:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3070:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3070:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3105:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3108:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3098:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3098:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3098:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2968:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2991:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2999:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2988:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2988:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2965:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2965:38:10"
															},
															"nodeType": "YulIf",
															"src": "2962:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2784:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2793:6:10",
														"type": ""
													}
												],
												"src": "2749:380:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3182:174:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3192:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3203:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3206:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3199:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3199:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3192:3:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3239:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3260:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3267:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3272:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3263:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3263:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3253:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3253:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3253:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3304:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3307:4:10",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3297:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3297:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3297:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3332:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3335:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3325:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3325:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3325:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3223:1:10"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "3226:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3220:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3220:10:10"
															},
															"nodeType": "YulIf",
															"src": "3217:133:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3165:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3168:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3174:3:10",
														"type": ""
													}
												],
												"src": "3134:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3535:169:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3552:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3563:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3545:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3545:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3545:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3586:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3597:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3582:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3582:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3602:2:10",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3575:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3575:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3575:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3625:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3636:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3621:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3621:18:10"
																	},
																	{
																		"hexValue": "4d617820737570706c79206578636565646564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3641:21:10",
																		"type": "",
																		"value": "Max supply exceeded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3614:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3614:49:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3614:49:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3672:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3684:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3695:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3680:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3680:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3672:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0b608f755d10a61bd7bfbe50c676755794b42b2dd9daf91b7deb384eabaa476f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3512:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3526:4:10",
														"type": ""
													}
												],
												"src": "3361:343:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3866:188:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3876:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3888:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3899:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3884:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3884:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3876:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3918:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3933:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3949:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3954:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3945:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3945:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3958:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3941:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3941:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3929:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3929:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3911:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3911:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3911:51:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3982:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3993:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3978:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3978:18:10"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3998:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3971:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3971:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3971:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4025:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4036:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4021:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4021:18:10"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4041:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4014:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4014:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4014:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3819:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3830:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3838:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3846:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3857:4:10",
														"type": ""
													}
												],
												"src": "3709:345:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_0b608f755d10a61bd7bfbe50c676755794b42b2dd9daf91b7deb384eabaa476f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Max supply exceeded\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100e4575f3560e01c806306fdde03146100e8578063095ea7b31461010657806318160ddd1461012957806323b872dd1461013b578063313ce5671461014e5780633f4ba83a1461016d57806340c10f191461017757806342966c681461018a5780635c975abb1461019d57806370a08231146101a5578063715018a6146101cd57806379cc6790146101d55780638456cb59146101e85780638da5cb5b146101f057806395d89b4114610205578063a9059cbb1461020d578063dd62ed3e14610220578063f2fde38b14610233575b5f80fd5b6100f0610246565b6040516100fd9190610905565b60405180910390f35b61011961011436600461096b565b6102d6565b60405190151581526020016100fd565b6002545b6040519081526020016100fd565b610119610149366004610993565b6102ef565b600554600160a81b900460ff1660405160ff90911681526020016100fd565b610175610312565b005b61017561018536600461096b565b610324565b6101756101983660046109cc565b6103a3565b6101196103b0565b61012d6101b33660046109e3565b6001600160a01b03165f9081526020819052604090205490565b6101756103c0565b6101756101e336600461096b565b6103d1565b6101756103e6565b6101f86103f6565b6040516100fd9190610a03565b6100f0610405565b61011961021b36600461096b565b610414565b61012d61022e366004610a17565b610421565b6101756102413660046109e3565b61044b565b60606003805461025590610a48565b80601f016020809104026020016040519081016040528092919081815260200182805461028190610a48565b80156102cc5780601f106102a3576101008083540402835291602001916102cc565b820191905f5260205f20905b8154815290600101906020018083116102af57829003601f168201915b5050505050905090565b5f336102e3818585610485565b60019150505b92915050565b5f336102fc858285610497565b6103078585856104e8565b506001949350505050565b61031a610545565b610322610577565b565b61032c610545565b6a084595161401484a0000008161034260025490565b61034c9190610a80565b11156103955760405162461bcd60e51b815260206004820152601360248201527213585e081cdd5c1c1b1e48195e18d959591959606a1b60448201526064015b60405180910390fd5b61039f82826105c6565b5050565b6103ad33826105fa565b50565b600554600160a01b900460ff1690565b6103c8610545565b6103225f61062e565b6103dc823383610497565b61039f82826105fa565b6103ee610545565b61032261067f565b6005546001600160a01b031690565b60606004805461025590610a48565b5f336102e38185856104e8565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b610453610545565b6001600160a01b03811661047c575f604051631e4fbdf760e01b815260040161038c9190610a03565b6103ad8161062e565b61049283838360016106c2565b505050565b5f6104a28484610421565b90505f198110156104e257818110156104d457828183604051637dc7a0d960e11b815260040161038c93929190610a9f565b6104e284848484035f6106c2565b50505050565b6001600160a01b038316610511575f604051634b637e8f60e11b815260040161038c9190610a03565b6001600160a01b03821661053a575f60405163ec442f0560e01b815260040161038c9190610a03565b610492838383610794565b3361054e6103f6565b6001600160a01b031614610322573360405163118cdaa760e01b815260040161038c9190610a03565b61057f6107a7565b6005805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516105bc9190610a03565b60405180910390a1565b6001600160a01b0382166105ef575f60405163ec442f0560e01b815260040161038c9190610a03565b61039f5f8383610794565b6001600160a01b038216610623575f604051634b637e8f60e11b815260040161038c9190610a03565b61039f825f83610794565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6106876107cc565b6005805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586105af3390565b6001600160a01b0384166106eb575f60405163e602df0560e01b815260040161038c9190610a03565b6001600160a01b038316610714575f604051634a1406b160e11b815260040161038c9190610a03565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156104e257826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161078691815260200190565b60405180910390a350505050565b61079c6107cc565b6104928383836107f2565b6107af6103b0565b61032257604051638dfc202b60e01b815260040160405180910390fd5b6107d46103b0565b156103225760405163d93c066560e01b815260040160405180910390fd5b6001600160a01b03831661081c578060025f8282546108119190610a80565b909155506108799050565b6001600160a01b0383165f908152602081905260409020548181101561085b5783818360405163391434e360e21b815260040161038c93929190610a9f565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216610895576002805482900390556108b3565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516108f891815260200190565b60405180910390a3505050565b5f6020808352835180828501525f5b8181101561093057858101830151858201604001528201610914565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610966575f80fd5b919050565b5f806040838503121561097c575f80fd5b61098583610950565b946020939093013593505050565b5f805f606084860312156109a5575f80fd5b6109ae84610950565b92506109bc60208501610950565b9150604084013590509250925092565b5f602082840312156109dc575f80fd5b5035919050565b5f602082840312156109f3575f80fd5b6109fc82610950565b9392505050565b6001600160a01b0391909116815260200190565b5f8060408385031215610a28575f80fd5b610a3183610950565b9150610a3f60208401610950565b90509250929050565b600181811c90821680610a5c57607f821691505b602082108103610a7a57634e487b7160e01b5f52602260045260245ffd5b50919050565b808201808211156102e957634e487b7160e01b5f52601160045260245ffd5b6001600160a01b03939093168352602083019190915260408201526060019056fea2646970667358221220f529989a813db1d2559468912ed7ef9fa1bfb27f6bf334d9913188b73ea920de64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE4 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x233 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF0 PUSH2 0x246 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFD SWAP2 SWAP1 PUSH2 0x905 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 PUSH2 0x114 CALLDATASIZE PUSH1 0x4 PUSH2 0x96B JUMP JUMPDEST PUSH2 0x2D6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFD JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFD JUMP JUMPDEST PUSH2 0x119 PUSH2 0x149 CALLDATASIZE PUSH1 0x4 PUSH2 0x993 JUMP JUMPDEST PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFD JUMP JUMPDEST PUSH2 0x175 PUSH2 0x312 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x175 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0x96B JUMP JUMPDEST PUSH2 0x324 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0x9CC JUMP JUMPDEST PUSH2 0x3A3 JUMP JUMPDEST PUSH2 0x119 PUSH2 0x3B0 JUMP JUMPDEST PUSH2 0x12D PUSH2 0x1B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x3C0 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x1E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x96B JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x3E6 JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFD SWAP2 SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH2 0xF0 PUSH2 0x405 JUMP JUMPDEST PUSH2 0x119 PUSH2 0x21B CALLDATASIZE PUSH1 0x4 PUSH2 0x96B JUMP JUMPDEST PUSH2 0x414 JUMP JUMPDEST PUSH2 0x12D PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0xA17 JUMP JUMPDEST PUSH2 0x421 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x241 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0x44B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x255 SWAP1 PUSH2 0xA48 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x281 SWAP1 PUSH2 0xA48 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2CC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2A3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2CC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2AF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2E3 DUP2 DUP6 DUP6 PUSH2 0x485 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2FC DUP6 DUP3 DUP6 PUSH2 0x497 JUMP JUMPDEST PUSH2 0x307 DUP6 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x31A PUSH2 0x545 JUMP JUMPDEST PUSH2 0x322 PUSH2 0x577 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x32C PUSH2 0x545 JUMP JUMPDEST PUSH11 0x84595161401484A000000 DUP2 PUSH2 0x342 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x34C SWAP2 SWAP1 PUSH2 0xA80 JUMP JUMPDEST GT ISZERO PUSH2 0x395 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13585E081CDD5C1C1B1E48195E18D959591959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x39F DUP3 DUP3 PUSH2 0x5C6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3AD CALLER DUP3 PUSH2 0x5FA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3C8 PUSH2 0x545 JUMP JUMPDEST PUSH2 0x322 PUSH0 PUSH2 0x62E JUMP JUMPDEST PUSH2 0x3DC DUP3 CALLER DUP4 PUSH2 0x497 JUMP JUMPDEST PUSH2 0x39F DUP3 DUP3 PUSH2 0x5FA JUMP JUMPDEST PUSH2 0x3EE PUSH2 0x545 JUMP JUMPDEST PUSH2 0x322 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x255 SWAP1 PUSH2 0xA48 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2E3 DUP2 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x453 PUSH2 0x545 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x47C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH2 0x3AD DUP2 PUSH2 0x62E JUMP JUMPDEST PUSH2 0x492 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x6C2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4A2 DUP5 DUP5 PUSH2 0x421 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 LT ISZERO PUSH2 0x4E2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4D4 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA9F JUMP JUMPDEST PUSH2 0x4E2 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x6C2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x511 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x53A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH2 0x492 DUP4 DUP4 DUP4 PUSH2 0x794 JUMP JUMPDEST CALLER PUSH2 0x54E PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x322 JUMPI CALLER PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH2 0x57F PUSH2 0x7A7 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5BC SWAP2 SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5EF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH2 0x39F PUSH0 DUP4 DUP4 PUSH2 0x794 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x623 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH2 0x39F DUP3 PUSH0 DUP4 PUSH2 0x794 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x687 PUSH2 0x7CC JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x5AF CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x6EB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x714 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x4E2 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x786 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x79C PUSH2 0x7CC JUMP JUMPDEST PUSH2 0x492 DUP4 DUP4 DUP4 PUSH2 0x7F2 JUMP JUMPDEST PUSH2 0x7AF PUSH2 0x3B0 JUMP JUMPDEST PUSH2 0x322 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7D4 PUSH2 0x3B0 JUMP JUMPDEST ISZERO PUSH2 0x322 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x81C JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x811 SWAP2 SWAP1 PUSH2 0xA80 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x879 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x85B JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x895 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x8B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x8F8 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x930 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x914 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x966 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x97C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x985 DUP4 PUSH2 0x950 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9AE DUP5 PUSH2 0x950 JUMP JUMPDEST SWAP3 POP PUSH2 0x9BC PUSH1 0x20 DUP6 ADD PUSH2 0x950 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9DC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9FC DUP3 PUSH2 0x950 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA28 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA31 DUP4 PUSH2 0x950 JUMP JUMPDEST SWAP2 POP PUSH2 0xA3F PUSH1 0x20 DUP5 ADD PUSH2 0x950 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xA5C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xA7A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2E9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 0x29 SWAP9 SWAP11 DUP2 RETURNDATASIZE 0xB1 0xD2 SSTORE SWAP5 PUSH9 0x912ED7EF9FA1BFB27F PUSH12 0xF334D9913188B73EA920DE64 PUSH20 0x6F6C634300081400330000000000000000000000 ",
							"sourceMap": "459:2294:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3902:186;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:10;;1162:22;1144:41;;1132:2;1117:18;3902:186:2;1004:187:10;2803:97:2;2881:12;;2803:97;;;1342:25:10;;;1330:2;1315:18;2803:97:2;1196:177:10;4680:244:2;;;;;;:::i;:::-;;:::i;1758:98:9:-;1840:9;;-1:-1:-1;;;1840:9:9;;;;1758:98;;1883:4:10;1871:17;;;1853:36;;1841:2;1826:18;1758:98:9;1711:184:10;2434:63:9;;;:::i;:::-;;2008:171;;;;;;:::i;:::-;;:::i;618:87:4:-;;;;;;:::i;:::-;;:::i;1726:84:7:-;;;:::i;2933:116:2:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3024:18:2;2998:7;3024:18;;;;;;;;;;;;2933:116;2293:101:0;;;:::i;1021:158:4:-;;;;;;:::i;:::-;;:::i;2280:59:9:-;;;:::i;1638:85:0:-;;;:::i;:::-;;;;;;;:::i;1962:93:2:-;;;:::i;3244:178::-;;;;;;:::i;:::-;;:::i;3455:140::-;;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;1760:89:2:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3902:186::-;3975:4;735:10:6;4029:31:2;735:10:6;4045:7:2;4054:5;4029:8;:31::i;:::-;4077:4;4070:11;;;3902:186;;;;;:::o;4680:244::-;4767:4;735:10:6;4823:37:2;4839:4;735:10:6;4854:5:2;4823:15;:37::i;:::-;4870:26;4880:4;4886:2;4890:5;4870:9;:26::i;:::-;-1:-1:-1;4913:4:2;;4680:244;-1:-1:-1;;;;4680:244:2:o;2434:63:9:-;1531:13:0;:11;:13::i;:::-;2480:10:9::1;:8;:10::i;:::-;2434:63::o:0;2008:171::-;1531:13:0;:11;:13::i;:::-;667:17:9::1;2101:6;2085:13;2881:12:2::0;;;2803:97;2085:13:9::1;:22;;;;:::i;:::-;:36;;2077:68;;;::::0;-1:-1:-1;;;2077:68:9;;3563:2:10;2077:68:9::1;::::0;::::1;3545:21:10::0;3602:2;3582:18;;;3575:30;-1:-1:-1;;;3621:18:10;;;3614:49;3680:18;;2077:68:9::1;;;;;;;;;2155:17;2161:2;2165:6;2155:5;:17::i;:::-;2008:171:::0;;:::o;618:87:4:-;672:26;735:10:6;692:5:4;672;:26::i;:::-;618:87;:::o;1726:84:7:-;1796:7;;-1:-1:-1;;;1796:7:7;;;;;1726:84::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;1021:158:4:-:0;1096:45;1112:7;735:10:6;1135:5:4;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;2280:59:9:-;1531:13:0;:11;:13::i;:::-;2324:8:9::1;:6;:8::i;1638:85:0:-:0;1710:6;;-1:-1:-1;;;;;1710:6:0;;1638:85::o;1962:93:2:-;2009:13;2041:7;2034:14;;;;;:::i;3244:178::-;3313:4;735:10:6;3367:27:2;735:10:6;3384:2:2;3388:5;3367:9;:27::i;3455:140::-;-1:-1:-1;;;;;3561:18:2;;;3535:7;3561:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3455:140::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2700:1;2672:31;;-1:-1:-1::0;;;2672:31:0::1;;;;;;;;:::i;2623:91::-;2723:28;2742:8;2723:18;:28::i;8630:128:2:-:0;8714:37;8723:5;8730:7;8739:5;8746:4;8714:8;:37::i;:::-;8630:128;;;:::o;10319:476::-;10418:24;10445:25;10455:5;10462:7;10445:9;:25::i;:::-;10418:52;;-1:-1:-1;;10484:16:2;:36;10480:309;;;10559:5;10540:16;:24;10536:130;;;10618:7;10627:16;10645:5;10591:60;;-1:-1:-1;;;10591:60:2;;;;;;;;;;:::i;10536:130::-;10707:57;10716:5;10723:7;10751:5;10732:16;:24;10758:5;10707:8;:57::i;:::-;10408:387;10319:476;;;:::o;5297:300::-;-1:-1:-1;;;;;5380:18:2;;5376:86;;5448:1;5421:30;;-1:-1:-1;;;5421:30:2;;;;;;;;:::i;5376:86::-;-1:-1:-1;;;;;5475:16:2;;5471:86;;5543:1;5514:32;;-1:-1:-1;;;5514:32:2;;;;;;;;:::i;5471:86::-;5566:24;5574:4;5580:2;5584:5;5566:7;:24::i;1796:162:0:-;735:10:6;1855:7:0;:5;:7::i;:::-;-1:-1:-1;;;;;1855:23:0;;1851:101;;735:10:6;1901:40:0;;-1:-1:-1;;;1901:40:0;;;;;;;;:::i;2586:117:7:-;1597:16;:14;:16::i;:::-;2644:7:::1;:15:::0;;-1:-1:-1;;;;2644:15:7::1;::::0;;2674:22:::1;735:10:6::0;2683:12:7::1;2674:22;;;;;;:::i;:::-;;;;;;;;2586:117::o:0;7362:208:2:-;-1:-1:-1;;;;;7432:21:2;;7428:91;;7505:1;7476:32;;-1:-1:-1;;;7476:32:2;;;;;;;;:::i;7428:91::-;7528:35;7544:1;7548:7;7557:5;7528:7;:35::i;7888:206::-;-1:-1:-1;;;;;7958:21:2;;7954:89;;8029:1;8002:30;;-1:-1:-1;;;8002:30:2;;;;;;;;:::i;7954:89::-;8052:35;8060:7;8077:1;8081:5;8052:7;:35::i;2912:187:0:-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;2339:115:7:-;1350:19;:17;:19::i;:::-;2398:7:::1;:14:::0;;-1:-1:-1;;;;2398:14:7::1;-1:-1:-1::0;;;2398:14:7::1;::::0;;2427:20:::1;2434:12;735:10:6::0;;656:96;9605:432:2;-1:-1:-1;;;;;9717:19:2;;9713:89;;9788:1;9759:32;;-1:-1:-1;;;9759:32:2;;;;;;;;:::i;9713:89::-;-1:-1:-1;;;;;9815:21:2;;9811:90;;9887:1;9859:31;;-1:-1:-1;;;9859:31:2;;;;;;;;:::i;9811:90::-;-1:-1:-1;;;;;9910:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;9955:76;;;;10005:7;-1:-1:-1;;;;;9989:31:2;9998:5;-1:-1:-1;;;;;9989:31:2;;10014:5;9989:31;;;;1342:25:10;;1330:2;1315:18;;1196:177;9989:31:2;;;;;;;;9605:432;;;;:::o;2584:167:9:-;1350:19:7;:17;:19::i;:::-;2714:30:9::1;2728:4;2734:2;2738:5;2714:13;:30::i;2078:126:7:-:0;2141:8;:6;:8::i;:::-;2136:62;;2172:15;;-1:-1:-1;;;2172:15:7;;;;;;;;;;;1878:128;1943:8;:6;:8::i;:::-;1939:61;;;1974:15;;-1:-1:-1;;;1974:15:7;;;;;;;;;;;5912:1107:2;-1:-1:-1;;;;;6001:18:2;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;5997:540:2;;-1:-1:-1;5997:540:2;;-1:-1:-1;;;;;6211:15:2;;6189:19;6211:15;;;;;;;;;;;6244:19;;;6240:115;;;6315:4;6321:11;6334:5;6290:50;;-1:-1:-1;;;6290:50:2;;;;;;;;;;:::i;6240:115::-;-1:-1:-1;;;;;6475:15:2;;:9;:15;;;;;;;;;;6493:19;;;;6475:37;;5997:540;-1:-1:-1;;;;;6551:16:2;;6547:425;;6714:12;:21;;;;;;;6547:425;;;-1:-1:-1;;;;;6925:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6547:425;7002:2;-1:-1:-1;;;;;6987:25:2;6996:4;-1:-1:-1;;;;;6987:25:2;;7006:5;6987:25;;;;1342::10;;1330:2;1315:18;;1196:177;6987:25:2;;;;;;;;5912:1107;;;:::o;14:548:10:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:10;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:10:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:180::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;-1:-1:-1;2051:23:10;;1900:180;-1:-1:-1;1900:180:10:o;2085:186::-;2144:6;2197:2;2185:9;2176:7;2172:23;2168:32;2165:52;;;2213:1;2210;2203:12;2165:52;2236:29;2255:9;2236:29;:::i;:::-;2226:39;2085:186;-1:-1:-1;;;2085:186:10:o;2276:203::-;-1:-1:-1;;;;;2440:32:10;;;;2422:51;;2410:2;2395:18;;2276:203::o;2484:260::-;2552:6;2560;2613:2;2601:9;2592:7;2588:23;2584:32;2581:52;;;2629:1;2626;2619:12;2581:52;2652:29;2671:9;2652:29;:::i;:::-;2642:39;;2700:38;2734:2;2723:9;2719:18;2700:38;:::i;:::-;2690:48;;2484:260;;;;;:::o;2749:380::-;2828:1;2824:12;;;;2871;;;2892:61;;2946:4;2938:6;2934:17;2924:27;;2892:61;2999:2;2991:6;2988:14;2968:18;2965:38;2962:161;;3045:10;3040:3;3036:20;3033:1;3026:31;3080:4;3077:1;3070:15;3108:4;3105:1;3098:15;2962:161;;2749:380;;;:::o;3134:222::-;3199:9;;;3220:10;;;3217:133;;;3272:10;3267:3;3263:20;3260:1;3253:31;3307:4;3304:1;3297:15;3335:4;3332:1;3325:15;3709:345;-1:-1:-1;;;;;3929:32:10;;;;3911:51;;3993:2;3978:18;;3971:34;;;;4036:2;4021:18;;4014:34;3899:2;3884:18;;3709:345::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "561200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24712",
								"balanceOf(address)": "2713",
								"burn(uint256)": "53281",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "2377",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2633",
								"pause()": "infinite",
								"paused()": "2489",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2302",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28730",
								"unpause()": "infinite"
							},
							"internal": {
								"_update(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 459,
									"end": 2753,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 459,
									"end": 2753,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 459,
									"end": 2753,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 950,
									"end": 1592,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 950,
									"end": 1592,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 950,
									"end": 1592,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 950,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 950,
									"end": 1592,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 950,
									"end": 1592,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 950,
									"end": 1592,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 950,
									"end": 1592,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 950,
									"end": 1592,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 950,
									"end": 1592,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 950,
									"end": 1592,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 950,
									"end": 1592,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 950,
									"end": 1592,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 950,
									"end": 1592,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 950,
									"end": 1592,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 950,
									"end": 1592,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 950,
									"end": 1592,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 950,
									"end": 1592,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 950,
									"end": 1592,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 950,
									"end": 1592,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 950,
									"end": 1592,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 950,
									"end": 1592,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 950,
									"end": 1592,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 950,
									"end": 1592,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 950,
									"end": 1592,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 950,
									"end": 1592,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 950,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 950,
									"end": 1592,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 950,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 950,
									"end": 1592,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 950,
									"end": 1592,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 950,
									"end": 1592,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "C"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5B881E5AE89E4BB99E5A5B3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "SWAP6",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1118,
									"end": 1130,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1118,
									"end": 1130,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1150,
									"end": 1176,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1150,
									"end": 1176,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1142,
									"end": 1194,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 1142,
									"end": 1194,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1142,
									"end": 1194,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1142,
									"end": 1194,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1142,
									"end": 1194,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1142,
									"end": 1194,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3659,
									"end": 3661,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1142,
									"end": 1194,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1142,
									"end": 1194,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1142,
									"end": 1194,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3641,
									"end": 3662,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3698,
									"end": 3700,
									"name": "PUSH",
									"source": 10,
									"value": "D"
								},
								{
									"begin": 3678,
									"end": 3696,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 3678,
									"end": 3696,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3678,
									"end": 3696,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3671,
									"end": 3701,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "24B73B30B634B21037BBB732B9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "99"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3717,
									"end": 3735,
									"name": "PUSH",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 3717,
									"end": 3735,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3717,
									"end": 3735,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3710,
									"end": 3753,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3770,
									"end": 3788,
									"name": "PUSH",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 3770,
									"end": 3788,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1142,
									"end": 1194,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 3457,
									"end": 3794,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1142,
									"end": 1194,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 1142,
									"end": 1194,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1229,
									"end": 1231,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 1212,
									"end": 1225,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1212,
									"end": 1231,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 1212,
									"end": 1231,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1212,
									"end": 1231,
									"modifierDepth": 2,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1212,
									"end": 1231,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1253,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1204,
									"end": 1253,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1253,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1204,
									"end": 1253,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1204,
									"end": 1253,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1253,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4001,
									"end": 4003,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1204,
									"end": 1253,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1204,
									"end": 1253,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1253,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3983,
									"end": 4004,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4040,
									"end": 4042,
									"name": "PUSH",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 4020,
									"end": 4038,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 4020,
									"end": 4038,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4020,
									"end": 4038,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4013,
									"end": 4043,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "88CAC6D2DAC2D8E640E8DEDE40D0D2CED"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "7B"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4059,
									"end": 4077,
									"name": "PUSH",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 4059,
									"end": 4077,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4059,
									"end": 4077,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4052,
									"end": 4099,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4116,
									"end": 4134,
									"name": "PUSH",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 4116,
									"end": 4134,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1204,
									"end": 1253,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 3799,
									"end": 4140,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1204,
									"end": 1253,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1204,
									"end": 1253,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1271,
									"end": 1284,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1288,
									"end": 1289,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1271,
									"end": 1289,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1263,
									"end": 1325,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1263,
									"end": 1325,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1263,
									"end": 1325,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1263,
									"end": 1325,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1263,
									"end": 1325,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1263,
									"end": 1325,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4347,
									"end": 4349,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1263,
									"end": 1325,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1263,
									"end": 1325,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1263,
									"end": 1325,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4329,
									"end": 4350,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4386,
									"end": 4388,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 4366,
									"end": 4384,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 4366,
									"end": 4384,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4366,
									"end": 4384,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4359,
									"end": 4389,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4425,
									"end": 4458,
									"name": "PUSH",
									"source": 10,
									"value": "496E697469616C20737570706C79206D75737420626520706F73697469766500"
								},
								{
									"begin": 4405,
									"end": 4423,
									"name": "PUSH",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 4405,
									"end": 4423,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4405,
									"end": 4423,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4398,
									"end": 4459,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4476,
									"end": 4494,
									"name": "PUSH",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 4476,
									"end": 4494,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1263,
									"end": 1325,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 4145,
									"end": 4500,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1263,
									"end": 1325,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1263,
									"end": 1325,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1381,
									"end": 1400,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 1387,
									"end": 1400,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1381,
									"end": 1383,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "A"
								},
								{
									"begin": 1381,
									"end": 1400,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 1381,
									"end": 1400,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1381,
									"end": 1400,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 1381,
									"end": 1400,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1360,
									"end": 1401,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 1360,
									"end": 1401,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1360,
									"end": 1401,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 1360,
									"end": 1401,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1360,
									"end": 1401,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 1360,
									"end": 1401,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1343,
									"end": 1356,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1343,
									"end": 1401,
									"modifierDepth": 2,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1343,
									"end": 1401,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1335,
									"end": 1422,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 1335,
									"end": 1422,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1335,
									"end": 1422,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1335,
									"end": 1422,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1335,
									"end": 1422,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1335,
									"end": 1422,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 6444,
									"end": 6446,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1335,
									"end": 1422,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1335,
									"end": 1422,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1335,
									"end": 1422,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6426,
									"end": 6447,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 6483,
									"end": 6485,
									"name": "PUSH",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 6463,
									"end": 6481,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 6463,
									"end": 6481,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6463,
									"end": 6481,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6456,
									"end": 6486,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "537570706C7920746F6F206C61726765"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "80"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6502,
									"end": 6520,
									"name": "PUSH",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 6502,
									"end": 6520,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6502,
									"end": 6520,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6495,
									"end": 6541,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 6558,
									"end": 6576,
									"name": "PUSH",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 6558,
									"end": 6576,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1335,
									"end": 1422,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 6242,
									"end": 6582,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1335,
									"end": 1422,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 1335,
									"end": 1422,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1433,
									"end": 1442,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 1433,
									"end": 1458,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1433,
									"end": 1458,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1433,
									"end": 1458,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1433,
									"end": 1458,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 1433,
									"end": 1458,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1433,
									"end": 1458,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1433,
									"end": 1458,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1433,
									"end": 1458,
									"modifierDepth": 2,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1433,
									"end": 1458,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1433,
									"end": 1458,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1527,
									"end": 1585,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 1533,
									"end": 1545,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1564,
									"end": 1583,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 1433,
									"end": 1458,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1564,
									"end": 1566,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "A"
								},
								{
									"begin": 1564,
									"end": 1583,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 1564,
									"end": 1583,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1564,
									"end": 1583,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 1564,
									"end": 1583,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1547,
									"end": 1584,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 1547,
									"end": 1584,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1547,
									"end": 1560,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1547,
									"end": 1584,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 1547,
									"end": 1584,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1547,
									"end": 1584,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 1547,
									"end": 1584,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1527,
									"end": 1532,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 1527,
									"end": 1585,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1527,
									"end": 1585,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 1527,
									"end": 1585,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 950,
									"end": 1592,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 950,
									"end": 1592,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 950,
									"end": 1592,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 459,
									"end": 2753,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 459,
									"end": 2753,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "tag",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7505,
									"end": 7506,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 7476,
									"end": 7508,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "tag",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 7544,
									"end": 7545,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7548,
									"end": 7555,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7557,
									"end": 7562,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 7528,
									"end": 7563,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "tag",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7362,
									"end": 7570,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2584,
									"end": 2751,
									"name": "tag",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 2584,
									"end": 2751,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1350,
									"end": 1369,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1350,
									"end": 1367,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1350,
									"end": 1369,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1369,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1350,
									"end": 1369,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2714,
									"end": 2744,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 2728,
									"end": 2732,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2734,
									"end": 2736,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2738,
									"end": 2743,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2714,
									"end": 2727,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 2714,
									"end": 2744,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2714,
									"end": 2744,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 2714,
									"end": 2744,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2584,
									"end": 2751,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2584,
									"end": 2751,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2584,
									"end": 2751,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2584,
									"end": 2751,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1878,
									"end": 2006,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1878,
									"end": 2006,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1943,
									"end": 1951,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 1796,
									"end": 1803,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1796,
									"end": 1803,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1796,
									"end": 1803,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1796,
									"end": 1803,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 1796,
									"end": 1803,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1796,
									"end": 1803,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1796,
									"end": 1803,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1726,
									"end": 1810,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1943,
									"end": 1951,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 1943,
									"end": 1951,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1939,
									"end": 2000,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1939,
									"end": 2000,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 1939,
									"end": 2000,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 1989,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1974,
									"end": 1989,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D93C0665"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1974,
									"end": 1989,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 1989,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 1989,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1974,
									"end": 1989,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 1989,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1974,
									"end": 1989,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 1989,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 1989,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 1989,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 1989,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 1989,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1939,
									"end": 2000,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 1939,
									"end": 2000,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1878,
									"end": 2006,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "tag",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6153,
									"end": 6158,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6149,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6137,
									"end": 6149,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "59"
								},
								{
									"begin": 6137,
									"end": 6158,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "tag",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "tag",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6189,
									"end": 6208,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6244,
									"end": 6263,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6244,
									"end": 6263,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6244,
									"end": 6263,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "61"
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7110,
									"end": 7142,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 7110,
									"end": 7142,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7092,
									"end": 7143,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 7159,
									"end": 7177,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 7159,
									"end": 7177,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7159,
									"end": 7177,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7152,
									"end": 7186,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7152,
									"end": 7186,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7152,
									"end": 7186,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 7202,
									"end": 7220,
									"name": "PUSH",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 7202,
									"end": 7220,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7202,
									"end": 7220,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7195,
									"end": 7229,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7195,
									"end": 7229,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7195,
									"end": 7229,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 7065,
									"end": 7083,
									"name": "PUSH",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 7065,
									"end": 7083,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 6890,
									"end": 7235,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "tag",
									"source": 2,
									"value": "61"
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6484,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6493,
									"end": 6512,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6493,
									"end": 6512,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6493,
									"end": 6512,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6493,
									"end": 6512,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "tag",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "64"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6726,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "65"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "tag",
									"source": 2,
									"value": "64"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6934,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "tag",
									"source": 2,
									"value": "65"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7004,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6996,
									"end": 7000,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7006,
									"end": 7011,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "66"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7386,
									"end": 7411,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7386,
									"end": 7411,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 7374,
									"end": 7376,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 7359,
									"end": 7377,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7359,
									"end": 7377,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7240,
									"end": 7417,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "tag",
									"source": 2,
									"value": "66"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5912,
									"end": 7019,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 523,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 523,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 100,
									"end": 106,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 108,
									"end": 114,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 116,
									"end": 122,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 171,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 157,
									"end": 166,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 148,
									"end": 155,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 144,
									"end": 167,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 140,
									"end": 172,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 137,
									"end": 189,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 137,
									"end": 189,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 137,
									"end": 189,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 185,
									"end": 186,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 182,
									"end": 183,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 175,
									"end": 187,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 137,
									"end": 189,
									"name": "tag",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 137,
									"end": 189,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 211,
									"end": 227,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 211,
									"end": 227,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 256,
									"end": 287,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 256,
									"end": 287,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 246,
									"end": 288,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 246,
									"end": 288,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 236,
									"end": 306,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 236,
									"end": 306,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 302,
									"end": 303,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 299,
									"end": 300,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 292,
									"end": 304,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 236,
									"end": 306,
									"name": "tag",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 236,
									"end": 306,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 375,
									"end": 377,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 360,
									"end": 378,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 360,
									"end": 378,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 354,
									"end": 379,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 325,
									"end": 330,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 325,
									"end": 330,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 423,
									"end": 427,
									"name": "PUSH",
									"source": 10,
									"value": "FF"
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 410,
									"end": 428,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 398,
									"end": 429,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 398,
									"end": 429,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 388,
									"end": 447,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 388,
									"end": 447,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 388,
									"end": 447,
									"name": "tag",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 388,
									"end": 447,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 466,
									"end": 473,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 456,
									"end": 473,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 456,
									"end": 473,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 456,
									"end": 473,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 513,
									"end": 515,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 502,
									"end": 511,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 498,
									"end": 516,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 492,
									"end": 517,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 482,
									"end": 517,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 482,
									"end": 517,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14,
									"end": 523,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 14,
									"end": 523,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14,
									"end": 523,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 14,
									"end": 523,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14,
									"end": 523,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 14,
									"end": 523,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 528,
									"end": 655,
									"name": "tag",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 528,
									"end": 655,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 589,
									"end": 599,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 584,
									"end": 587,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 580,
									"end": 600,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 577,
									"end": 578,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 601,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 620,
									"end": 624,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 617,
									"end": 618,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 610,
									"end": 625,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 644,
									"end": 648,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 641,
									"end": 642,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 634,
									"end": 649,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 660,
									"end": 1040,
									"name": "tag",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 660,
									"end": 1040,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 739,
									"end": 740,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 735,
									"end": 747,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 735,
									"end": 747,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 735,
									"end": 747,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 735,
									"end": 747,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 782,
									"end": 794,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 782,
									"end": 794,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 782,
									"end": 794,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 803,
									"end": 864,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 803,
									"end": 864,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 849,
									"end": 855,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 845,
									"end": 862,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 835,
									"end": 862,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 835,
									"end": 862,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 803,
									"end": 864,
									"name": "tag",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 803,
									"end": 864,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 910,
									"end": 912,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 902,
									"end": 908,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 899,
									"end": 913,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 879,
									"end": 897,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 876,
									"end": 914,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 873,
									"end": 1034,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 873,
									"end": 1034,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 956,
									"end": 966,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 951,
									"end": 954,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 947,
									"end": 967,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 944,
									"end": 945,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 937,
									"end": 968,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 991,
									"end": 995,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 988,
									"end": 989,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 981,
									"end": 996,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1019,
									"end": 1023,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1016,
									"end": 1017,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1009,
									"end": 1024,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 873,
									"end": 1034,
									"name": "tag",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 873,
									"end": 1034,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 873,
									"end": 1034,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 660,
									"end": 1040,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 660,
									"end": 1040,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 660,
									"end": 1040,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 660,
									"end": 1040,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1171,
									"end": 1716,
									"name": "tag",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 1171,
									"end": 1716,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1273,
									"end": 1275,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1268,
									"end": 1271,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1265,
									"end": 1276,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1262,
									"end": 1710,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1262,
									"end": 1710,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 1262,
									"end": 1710,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1309,
									"end": 1310,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1334,
									"end": 1339,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1330,
									"end": 1332,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1323,
									"end": 1340,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1379,
									"end": 1383,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1375,
									"end": 1377,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1365,
									"end": 1384,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 1449,
									"end": 1451,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1437,
									"end": 1447,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1433,
									"end": 1452,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1430,
									"end": 1431,
									"name": "PUSH",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 1426,
									"end": 1453,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1420,
									"end": 1424,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1416,
									"end": 1454,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1485,
									"end": 1489,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1473,
									"end": 1483,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1470,
									"end": 1490,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1467,
									"end": 1514,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1467,
									"end": 1514,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 1467,
									"end": 1514,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1508,
									"end": 1512,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1467,
									"end": 1514,
									"name": "tag",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 1467,
									"end": 1514,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1563,
									"end": 1565,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1558,
									"end": 1561,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1554,
									"end": 1566,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1551,
									"end": 1552,
									"name": "PUSH",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 1547,
									"end": 1567,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1541,
									"end": 1545,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1537,
									"end": 1568,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1527,
									"end": 1568,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1527,
									"end": 1568,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1618,
									"end": 1700,
									"name": "tag",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 1618,
									"end": 1700,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1636,
									"end": 1638,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1629,
									"end": 1634,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1626,
									"end": 1639,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1618,
									"end": 1700,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1618,
									"end": 1700,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 1618,
									"end": 1700,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1681,
									"end": 1698,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1681,
									"end": 1698,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1681,
									"end": 1698,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1662,
									"end": 1663,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1651,
									"end": 1664,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1618,
									"end": 1700,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 1618,
									"end": 1700,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1618,
									"end": 1700,
									"name": "tag",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 1618,
									"end": 1700,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1622,
									"end": 1625,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1622,
									"end": 1625,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1622,
									"end": 1625,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1171,
									"end": 1716,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1171,
									"end": 1716,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1171,
									"end": 1716,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1171,
									"end": 1716,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1892,
									"end": 3244,
									"name": "tag",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 1892,
									"end": 3244,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2012,
									"end": 2022,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2012,
									"end": 2022,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2034,
									"end": 2064,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2034,
									"end": 2064,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 2031,
									"end": 2087,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2031,
									"end": 2087,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 2031,
									"end": 2087,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2067,
									"end": 2085,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 2067,
									"end": 2085,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 2067,
									"end": 2085,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2067,
									"end": 2085,
									"name": "tag",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 2067,
									"end": 2085,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2096,
									"end": 2193,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "97"
								},
								{
									"begin": 2186,
									"end": 2192,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2146,
									"end": 2184,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 2178,
									"end": 2182,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2172,
									"end": 2183,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 2146,
									"end": 2184,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 2146,
									"end": 2184,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2146,
									"end": 2184,
									"name": "tag",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 2146,
									"end": 2184,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2140,
									"end": 2144,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2096,
									"end": 2193,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 2096,
									"end": 2193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2096,
									"end": 2193,
									"name": "tag",
									"source": 10,
									"value": "97"
								},
								{
									"begin": 2096,
									"end": 2193,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2248,
									"end": 2252,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2248,
									"end": 2252,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2312,
									"end": 2314,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 2301,
									"end": 2315,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2301,
									"end": 2315,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 2329,
									"end": 2330,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2324,
									"end": 2987,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2324,
									"end": 2987,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 2324,
									"end": 2987,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 2324,
									"end": 2987,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3031,
									"end": 3032,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3048,
									"end": 3054,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3045,
									"end": 3134,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3045,
									"end": 3134,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "101"
								},
								{
									"begin": 3045,
									"end": 3134,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3100,
									"end": 3119,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3100,
									"end": 3119,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3100,
									"end": 3119,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3094,
									"end": 3120,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3045,
									"end": 3134,
									"name": "tag",
									"source": 10,
									"value": "101"
								},
								{
									"begin": 3045,
									"end": 3134,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1849,
									"end": 1850,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1845,
									"end": 1856,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1845,
									"end": 1856,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1845,
									"end": 1856,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1841,
									"end": 1865,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1837,
									"end": 1866,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1827,
									"end": 1867,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1873,
									"end": 1874,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1869,
									"end": 1880,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1869,
									"end": 1880,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1869,
									"end": 1880,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1824,
									"end": 1881,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 3147,
									"end": 3228,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3147,
									"end": 3228,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2294,
									"end": 3238,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 2294,
									"end": 3238,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2324,
									"end": 2987,
									"name": "tag",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 2324,
									"end": 2987,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1118,
									"end": 1119,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1111,
									"end": 1125,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1111,
									"end": 1125,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1111,
									"end": 1125,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1155,
									"end": 1159,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1142,
									"end": 1160,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1142,
									"end": 1160,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2360,
									"end": 2380,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2360,
									"end": 2380,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2360,
									"end": 2380,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2478,
									"end": 2714,
									"name": "tag",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 2478,
									"end": 2714,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2492,
									"end": 2499,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2489,
									"end": 2490,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2486,
									"end": 2500,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 2478,
									"end": 2714,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2478,
									"end": 2714,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "106"
								},
								{
									"begin": 2478,
									"end": 2714,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2581,
									"end": 2600,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 2581,
									"end": 2600,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2581,
									"end": 2600,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2575,
									"end": 2601,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2560,
									"end": 2602,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2560,
									"end": 2602,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2673,
									"end": 2700,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 2673,
									"end": 2700,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2673,
									"end": 2700,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2673,
									"end": 2700,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 2641,
									"end": 2642,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2629,
									"end": 2643,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2629,
									"end": 2643,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2629,
									"end": 2643,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2629,
									"end": 2643,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2508,
									"end": 2527,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2508,
									"end": 2527,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2478,
									"end": 2714,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 2478,
									"end": 2714,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2478,
									"end": 2714,
									"name": "tag",
									"source": 10,
									"value": "106"
								},
								{
									"begin": 2478,
									"end": 2714,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2482,
									"end": 2485,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2742,
									"end": 2748,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2733,
									"end": 2740,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2730,
									"end": 2749,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 2727,
									"end": 2928,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2727,
									"end": 2928,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "107"
								},
								{
									"begin": 2727,
									"end": 2928,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2803,
									"end": 2822,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 2803,
									"end": 2822,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2803,
									"end": 2822,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2797,
									"end": 2823,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2886,
									"end": 2887,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 2882,
									"end": 2896,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 2882,
									"end": 2896,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2882,
									"end": 2896,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2898,
									"end": 2901,
									"name": "PUSH",
									"source": 10,
									"value": "F8"
								},
								{
									"begin": 2878,
									"end": 2902,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2874,
									"end": 2911,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 2870,
									"end": 2912,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 2855,
									"end": 2913,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2840,
									"end": 2914,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2840,
									"end": 2914,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2727,
									"end": 2928,
									"name": "tag",
									"source": 10,
									"value": "107"
								},
								{
									"begin": 2727,
									"end": 2928,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2974,
									"end": 2975,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2958,
									"end": 2972,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2958,
									"end": 2972,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2958,
									"end": 2972,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2954,
									"end": 2976,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2941,
									"end": 2977,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2941,
									"end": 2977,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1892,
									"end": 3244,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3249,
									"end": 3452,
									"name": "tag",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 3249,
									"end": 3452,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3413,
									"end": 3445,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3413,
									"end": 3445,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3413,
									"end": 3445,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3413,
									"end": 3445,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3395,
									"end": 3446,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3395,
									"end": 3446,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3383,
									"end": 3385,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3368,
									"end": 3386,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3368,
									"end": 3386,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3249,
									"end": 3452,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4505,
									"end": 4632,
									"name": "tag",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 4505,
									"end": 4632,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4566,
									"end": 4576,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 4561,
									"end": 4564,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 4557,
									"end": 4577,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 4554,
									"end": 4555,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4547,
									"end": 4578,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4597,
									"end": 4601,
									"name": "PUSH",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 4594,
									"end": 4595,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 4587,
									"end": 4602,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4621,
									"end": 4625,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 4618,
									"end": 4619,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4611,
									"end": 4626,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 4637,
									"end": 5059,
									"name": "tag",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 4637,
									"end": 5059,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4726,
									"end": 4727,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 4769,
									"end": 4774,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4726,
									"end": 4727,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4783,
									"end": 5053,
									"name": "tag",
									"source": 10,
									"value": "114"
								},
								{
									"begin": 4783,
									"end": 5053,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4804,
									"end": 4811,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4794,
									"end": 4802,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 4791,
									"end": 4812,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 4783,
									"end": 5053,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4783,
									"end": 5053,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "116"
								},
								{
									"begin": 4783,
									"end": 5053,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4863,
									"end": 4867,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4859,
									"end": 4860,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4855,
									"end": 4861,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 4851,
									"end": 4868,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 4845,
									"end": 4849,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4842,
									"end": 4869,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 4839,
									"end": 4892,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4839,
									"end": 4892,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 4839,
									"end": 4892,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4872,
									"end": 4890,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 4872,
									"end": 4890,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 4872,
									"end": 4890,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4872,
									"end": 4890,
									"name": "tag",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 4872,
									"end": 4890,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4922,
									"end": 4929,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4912,
									"end": 4920,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 4908,
									"end": 4930,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4905,
									"end": 4960,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4905,
									"end": 4960,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "119"
								},
								{
									"begin": 4905,
									"end": 4960,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4942,
									"end": 4958,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4942,
									"end": 4958,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4942,
									"end": 4958,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 4942,
									"end": 4958,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4905,
									"end": 4960,
									"name": "tag",
									"source": 10,
									"value": "119"
								},
								{
									"begin": 4905,
									"end": 4960,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5021,
									"end": 5043,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 5021,
									"end": 5043,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5021,
									"end": 5043,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 5021,
									"end": 5043,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 4981,
									"end": 4996,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4981,
									"end": 4996,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4981,
									"end": 4996,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 4981,
									"end": 4996,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4783,
									"end": 5053,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "114"
								},
								{
									"begin": 4783,
									"end": 5053,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4783,
									"end": 5053,
									"name": "tag",
									"source": 10,
									"value": "116"
								},
								{
									"begin": 4783,
									"end": 5053,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4787,
									"end": 4790,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4637,
									"end": 5059,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4637,
									"end": 5059,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4637,
									"end": 5059,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4637,
									"end": 5059,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4637,
									"end": 5059,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4637,
									"end": 5059,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5064,
									"end": 5870,
									"name": "tag",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 5064,
									"end": 5870,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5113,
									"end": 5118,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5143,
									"end": 5151,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5133,
									"end": 5213,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "121"
								},
								{
									"begin": 5133,
									"end": 5213,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5184,
									"end": 5185,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 5198,
									"end": 5203,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 5198,
									"end": 5203,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5133,
									"end": 5213,
									"name": "tag",
									"source": 10,
									"value": "121"
								},
								{
									"begin": 5133,
									"end": 5213,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5232,
									"end": 5236,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5222,
									"end": 5298,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "122"
								},
								{
									"begin": 5222,
									"end": 5298,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5269,
									"end": 5270,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5283,
									"end": 5288,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 5283,
									"end": 5288,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5222,
									"end": 5298,
									"name": "tag",
									"source": 10,
									"value": "122"
								},
								{
									"begin": 5222,
									"end": 5298,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5314,
									"end": 5318,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5332,
									"end": 5333,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 5327,
									"end": 5386,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5327,
									"end": 5386,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 5327,
									"end": 5386,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "124"
								},
								{
									"begin": 5327,
									"end": 5386,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5400,
									"end": 5401,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 5395,
									"end": 5525,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5395,
									"end": 5525,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 5395,
									"end": 5525,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "125"
								},
								{
									"begin": 5395,
									"end": 5525,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5307,
									"end": 5525,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "123"
								},
								{
									"begin": 5307,
									"end": 5525,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5327,
									"end": 5386,
									"name": "tag",
									"source": 10,
									"value": "124"
								},
								{
									"begin": 5327,
									"end": 5386,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5357,
									"end": 5358,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 5348,
									"end": 5358,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5348,
									"end": 5358,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5371,
									"end": 5376,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5371,
									"end": 5376,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 5371,
									"end": 5376,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5395,
									"end": 5525,
									"name": "tag",
									"source": 10,
									"value": "125"
								},
								{
									"begin": 5395,
									"end": 5525,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5432,
									"end": 5435,
									"name": "PUSH",
									"source": 10,
									"value": "FF"
								},
								{
									"begin": 5422,
									"end": 5430,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5419,
									"end": 5436,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 5416,
									"end": 5459,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5416,
									"end": 5459,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "127"
								},
								{
									"begin": 5416,
									"end": 5459,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5439,
									"end": 5457,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "127"
								},
								{
									"begin": 5439,
									"end": 5457,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 5439,
									"end": 5457,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5439,
									"end": 5457,
									"name": "tag",
									"source": 10,
									"value": "127"
								},
								{
									"begin": 5439,
									"end": 5457,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5495,
									"end": 5496,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 5481,
									"end": 5497,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5481,
									"end": 5497,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 5510,
									"end": 5515,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 5510,
									"end": 5515,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5307,
									"end": 5525,
									"name": "tag",
									"source": 10,
									"value": "123"
								},
								{
									"begin": 5307,
									"end": 5525,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5307,
									"end": 5525,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5609,
									"end": 5611,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5599,
									"end": 5607,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5596,
									"end": 5612,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 5590,
									"end": 5593,
									"name": "PUSH",
									"source": 10,
									"value": "133"
								},
								{
									"begin": 5584,
									"end": 5588,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5581,
									"end": 5594,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 5577,
									"end": 5613,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5571,
									"end": 5573,
									"name": "PUSH",
									"source": 10,
									"value": "4E"
								},
								{
									"begin": 5561,
									"end": 5569,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5558,
									"end": 5574,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 5553,
									"end": 5555,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 5547,
									"end": 5551,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5544,
									"end": 5556,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 5540,
									"end": 5575,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5537,
									"end": 5614,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 5534,
									"end": 5693,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5534,
									"end": 5693,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "128"
								},
								{
									"begin": 5534,
									"end": 5693,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5646,
									"end": 5665,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5646,
									"end": 5665,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5646,
									"end": 5665,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 5678,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 5678,
									"end": 5683,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5534,
									"end": 5693,
									"name": "tag",
									"source": 10,
									"value": "128"
								},
								{
									"begin": 5534,
									"end": 5693,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5725,
									"end": 5759,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "129"
								},
								{
									"begin": 5750,
									"end": 5758,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5744,
									"end": 5748,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5725,
									"end": 5759,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 5725,
									"end": 5759,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5725,
									"end": 5759,
									"name": "tag",
									"source": 10,
									"value": "129"
								},
								{
									"begin": 5725,
									"end": 5759,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5795,
									"end": 5801,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 5791,
									"end": 5792,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5787,
									"end": 5793,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 5783,
									"end": 5802,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 5774,
									"end": 5781,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5771,
									"end": 5803,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 5768,
									"end": 5826,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5768,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "131"
								},
								{
									"begin": 5768,
									"end": 5826,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5806,
									"end": 5824,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "131"
								},
								{
									"begin": 5806,
									"end": 5824,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 5806,
									"end": 5824,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5806,
									"end": 5824,
									"name": "tag",
									"source": 10,
									"value": "131"
								},
								{
									"begin": 5806,
									"end": 5824,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5844,
									"end": 5864,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 5844,
									"end": 5864,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5064,
									"end": 5870,
									"name": "tag",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 5064,
									"end": 5870,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5064,
									"end": 5870,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 5064,
									"end": 5870,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5064,
									"end": 5870,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5064,
									"end": 5870,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5064,
									"end": 5870,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5875,
									"end": 6015,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 5875,
									"end": 6015,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5933,
									"end": 5938,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5962,
									"end": 6009,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "133"
								},
								{
									"begin": 6003,
									"end": 6007,
									"name": "PUSH",
									"source": 10,
									"value": "FF"
								},
								{
									"begin": 5993,
									"end": 6001,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5989,
									"end": 6008,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5983,
									"end": 5987,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5962,
									"end": 6009,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 5962,
									"end": 6009,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5962,
									"end": 6009,
									"name": "tag",
									"source": 10,
									"value": "133"
								},
								{
									"begin": 5962,
									"end": 6009,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5953,
									"end": 6009,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 5875,
									"end": 6015,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5875,
									"end": 6015,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6020,
									"end": 6237,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 6020,
									"end": 6237,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6060,
									"end": 6061,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6086,
									"end": 6087,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6076,
									"end": 6208,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "135"
								},
								{
									"begin": 6076,
									"end": 6208,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6130,
									"end": 6140,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 6125,
									"end": 6128,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 6121,
									"end": 6141,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 6118,
									"end": 6119,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6111,
									"end": 6142,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 6165,
									"end": 6169,
									"name": "PUSH",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 6162,
									"end": 6163,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 6155,
									"end": 6170,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 6193,
									"end": 6197,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 6190,
									"end": 6191,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6183,
									"end": 6198,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 6076,
									"end": 6208,
									"name": "tag",
									"source": 10,
									"value": "135"
								},
								{
									"begin": 6076,
									"end": 6208,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6222,
									"end": 6231,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 6222,
									"end": 6231,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6020,
									"end": 6237,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6587,
									"end": 6755,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 6587,
									"end": 6755,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6660,
									"end": 6669,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 6660,
									"end": 6669,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6660,
									"end": 6669,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 6691,
									"end": 6700,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6691,
									"end": 6700,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 6708,
									"end": 6723,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6708,
									"end": 6723,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6708,
									"end": 6723,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 6702,
									"end": 6724,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6702,
									"end": 6724,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 6688,
									"end": 6725,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 6678,
									"end": 6749,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 6678,
									"end": 6749,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6729,
									"end": 6747,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 6729,
									"end": 6747,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 6729,
									"end": 6747,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6760,
									"end": 6885,
									"name": "tag",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 6760,
									"end": 6885,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6825,
									"end": 6834,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 6825,
									"end": 6834,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6825,
									"end": 6834,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6846,
									"end": 6856,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 6846,
									"end": 6856,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6846,
									"end": 6856,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 6843,
									"end": 6879,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 6843,
									"end": 6879,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 6843,
									"end": 6879,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6859,
									"end": 6877,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 6859,
									"end": 6877,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 6859,
									"end": 6877,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7240,
									"end": 7417,
									"name": "tag",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 7240,
									"end": 7417,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 459,
									"end": 2753,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 459,
									"end": 2753,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 459,
									"end": 2753,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 459,
									"end": 2753,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 459,
									"end": 2753,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 459,
									"end": 2753,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 459,
									"end": 2753,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f529989a813db1d2559468912ed7ef9fa1bfb27f6bf334d9913188b73ea920de64736f6c63430008140033",
									".code": [
										{
											"begin": 459,
											"end": 2753,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "PUSH",
											"source": 9,
											"value": "6FDDE03"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "PUSH",
											"source": 9,
											"value": "95EA7B3"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "PUSH",
											"source": 9,
											"value": "18160DDD"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "PUSH",
											"source": 9,
											"value": "313CE567"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "PUSH",
											"source": 9,
											"value": "3F4BA83A"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "PUSH",
											"source": 9,
											"value": "40C10F19"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "PUSH",
											"source": 9,
											"value": "42966C68"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "PUSH",
											"source": 9,
											"value": "5C975ABB"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "PUSH",
											"source": 9,
											"value": "79CC6790"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "PUSH",
											"source": 9,
											"value": "8456CB59"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "PUSH",
											"source": 9,
											"value": "95D89B41"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "PUSH",
											"source": 9,
											"value": "DD62ED3E"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 459,
											"end": 2753,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1758,
											"end": 1856,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1758,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1840,
											"end": 1849,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1840,
											"end": 1849,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1840,
											"end": 1849,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1840,
											"end": 1849,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1840,
											"end": 1849,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1840,
											"end": 1849,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1758,
											"end": 1856,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1758,
											"end": 1856,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1883,
											"end": 1887,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1871,
											"end": 1888,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1871,
											"end": 1888,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1871,
											"end": 1888,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1758,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2434,
											"end": 2497,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 2434,
											"end": 2497,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2434,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2434,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 2434,
											"end": 2497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2434,
											"end": 2497,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2434,
											"end": 2497,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2434,
											"end": 2497,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2008,
											"end": 2179,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 2008,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2008,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2008,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 2008,
											"end": 2179,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2008,
											"end": 2179,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2008,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 2008,
											"end": 2179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2008,
											"end": 2179,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 2008,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2008,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 2008,
											"end": 2179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 1726,
											"end": 1810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2998,
											"end": 3005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2280,
											"end": 2339,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 2280,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2280,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2280,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 2280,
											"end": 2339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4054,
											"end": 4059,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4029,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 4029,
											"end": 4060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4077,
											"end": 4081,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4767,
											"end": 4771,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 4839,
											"end": 4843,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4854,
											"end": 4859,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4823,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 4823,
											"end": 4860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 4880,
											"end": 4884,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4886,
											"end": 4888,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4890,
											"end": 4895,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4870,
											"end": 4879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4870,
											"end": 4896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4913,
											"end": 4917,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4913,
											"end": 4917,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2497,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 2434,
											"end": 2497,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2480,
											"end": 2490,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 2480,
											"end": 2488,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 2480,
											"end": 2490,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2490,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 2480,
											"end": 2490,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2434,
											"end": 2497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2008,
											"end": 2179,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 2008,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 667,
											"end": 684,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "84595161401484A000000"
										},
										{
											"begin": 2101,
											"end": 2107,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2098,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2098,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 2085,
											"end": 2098,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2107,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 2085,
											"end": 2107,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2107,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2107,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 2085,
											"end": 2107,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2107,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 2085,
											"end": 2107,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2121,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2121,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2145,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 2077,
											"end": 2145,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2145,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2077,
											"end": 2145,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2077,
											"end": 2145,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2145,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3563,
											"end": 3565,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2077,
											"end": 2145,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2077,
											"end": 2145,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2145,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3545,
											"end": 3566,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3602,
											"end": 3604,
											"name": "PUSH",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3575,
											"end": 3605,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13585E081CDD5C1C1B1E48195E18D959591959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3621,
											"end": 3639,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 3621,
											"end": 3639,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3621,
											"end": 3639,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3614,
											"end": 3663,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3680,
											"end": 3698,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 3680,
											"end": 3698,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2077,
											"end": 2145,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 2077,
											"end": 2145,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2145,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2077,
											"end": 2145,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2145,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2145,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2145,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2145,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2145,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2145,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 2077,
											"end": 2145,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2155,
											"end": 2172,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 2161,
											"end": 2163,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2165,
											"end": 2171,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2155,
											"end": 2160,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 2155,
											"end": 2172,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2155,
											"end": 2172,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 2155,
											"end": 2172,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2008,
											"end": 2179,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2008,
											"end": 2179,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2008,
											"end": 2179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 672,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 692,
											"end": 697,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 672,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 672,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 672,
											"end": 698,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 672,
											"end": 698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1726,
											"end": 1810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1135,
											"end": 1140,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1096,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 1157,
											"end": 1164,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1166,
											"end": 1171,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 1151,
											"end": 1172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2280,
											"end": 2339,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 2280,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2332,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 2324,
											"end": 2330,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 2324,
											"end": 2332,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3313,
											"end": 3317,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3386,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3393,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3367,
											"end": 3394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3535,
											"end": 3542,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3572,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 8723,
											"end": 8728,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8730,
											"end": 8737,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8739,
											"end": 8744,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8746,
											"end": 8750,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8714,
											"end": 8722,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 8714,
											"end": 8751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8630,
											"end": 8758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10418,
											"end": 10442,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 10455,
											"end": 10460,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10462,
											"end": 10469,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10445,
											"end": 10454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 10445,
											"end": 10470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "POP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10484,
											"end": 10500,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10484,
											"end": 10520,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10559,
											"end": 10564,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10540,
											"end": 10556,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10540,
											"end": 10564,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10618,
											"end": 10625,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10627,
											"end": 10643,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10645,
											"end": 10650,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 10591,
											"end": 10651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 10716,
											"end": 10721,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10723,
											"end": 10730,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10751,
											"end": 10756,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10732,
											"end": 10748,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10732,
											"end": 10756,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10763,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10715,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 10707,
											"end": 10764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10408,
											"end": 10795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10319,
											"end": 10795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5448,
											"end": 5449,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 5421,
											"end": 5451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5543,
											"end": 5544,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 5514,
											"end": 5546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 5574,
											"end": 5578,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5582,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5584,
											"end": 5589,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5566,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 5566,
											"end": 5590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 2703,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 2586,
											"end": 2703,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1597,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 1597,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 1597,
											"end": 1613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1597,
											"end": 1613,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 1597,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2644,
											"end": 2659,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2659,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2659,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2659,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2683,
											"end": 2695,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 2683,
											"end": 2695,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 2674,
											"end": 2696,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7505,
											"end": 7506,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 7476,
											"end": 7508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7563,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 7544,
											"end": 7545,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7548,
											"end": 7555,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7557,
											"end": 7562,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 7528,
											"end": 7563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7888,
											"end": 8094,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 7888,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7954,
											"end": 8043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 7954,
											"end": 8043,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8029,
											"end": 8030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 8002,
											"end": 8032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7954,
											"end": 8043,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 7954,
											"end": 8043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8052,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 8060,
											"end": 8067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8077,
											"end": 8078,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8081,
											"end": 8086,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8052,
											"end": 8059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 8052,
											"end": 8087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2454,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 2339,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 1350,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 1350,
											"end": 1369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2405,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2398,
											"end": 2412,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2412,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2412,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2412,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2434,
											"end": 2446,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9788,
											"end": 9789,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 9759,
											"end": 9791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9887,
											"end": 9888,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 9859,
											"end": 9890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9921,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10005,
											"end": 10012,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9998,
											"end": 10003,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10014,
											"end": 10019,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 10037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2584,
											"end": 2751,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 2584,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 1350,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 1350,
											"end": 1369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2714,
											"end": 2744,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 2728,
											"end": 2732,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2734,
											"end": 2736,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2738,
											"end": 2743,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2714,
											"end": 2727,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 2714,
											"end": 2744,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2078,
											"end": 2204,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 2078,
											"end": 2204,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2141,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 2141,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 2141,
											"end": 2149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2141,
											"end": 2149,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 2141,
											"end": 2149,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2136,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 2136,
											"end": 2198,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8DFC202B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1878,
											"end": 2006,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 1878,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1943,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 1943,
											"end": 1951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1943,
											"end": 1951,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 1943,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1939,
											"end": 2000,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1939,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 1939,
											"end": 2000,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D93C0665"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6153,
											"end": 6158,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 6137,
											"end": 6158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6244,
											"end": 6263,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6244,
											"end": 6263,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6244,
											"end": 6263,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6315,
											"end": 6319,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6334,
											"end": 6339,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 6290,
											"end": 6340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6484,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6512,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6512,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6512,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6512,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6726,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6934,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7004,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6996,
											"end": 7000,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7006,
											"end": 7011,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5912,
											"end": 7019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1900,
											"end": 2080,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 1900,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2051,
											"end": 2074,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2051,
											"end": 2074,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1900,
											"end": 2080,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 2080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2085,
											"end": 2271,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 2085,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2144,
											"end": 2150,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2199,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2185,
											"end": 2194,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2183,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2195,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2200,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2213,
											"end": 2214,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2210,
											"end": 2211,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2203,
											"end": 2215,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 2255,
											"end": 2264,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 2236,
											"end": 2265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2226,
											"end": 2265,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2085,
											"end": 2271,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2085,
											"end": 2271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2276,
											"end": 2479,
											"name": "tag",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 2276,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2410,
											"end": 2412,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2276,
											"end": 2479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2552,
											"end": 2558,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2566,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2613,
											"end": 2615,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2601,
											"end": 2610,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2592,
											"end": 2599,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2588,
											"end": 2611,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2584,
											"end": 2616,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2629,
											"end": 2630,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2626,
											"end": 2627,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2619,
											"end": 2631,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 2671,
											"end": 2680,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 2652,
											"end": 2681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 2734,
											"end": 2736,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2723,
											"end": 2732,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2719,
											"end": 2737,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 2700,
											"end": 2738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2690,
											"end": 2738,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2690,
											"end": 2738,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2484,
											"end": 2744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2828,
											"end": 2829,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2871,
											"end": 2883,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2871,
											"end": 2883,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2871,
											"end": 2883,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2892,
											"end": 2953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 2892,
											"end": 2953,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2946,
											"end": 2950,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 2938,
											"end": 2944,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2934,
											"end": 2951,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2924,
											"end": 2951,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2924,
											"end": 2951,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2892,
											"end": 2953,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 2892,
											"end": 2953,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2999,
											"end": 3001,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2991,
											"end": 2997,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2988,
											"end": 3002,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2968,
											"end": 2986,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2965,
											"end": 3003,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3045,
											"end": 3055,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 3040,
											"end": 3043,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 3036,
											"end": 3056,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 3033,
											"end": 3034,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3026,
											"end": 3057,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3080,
											"end": 3084,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 3077,
											"end": 3078,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3070,
											"end": 3085,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3108,
											"end": 3112,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3105,
											"end": 3106,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3113,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 3129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3134,
											"end": 3356,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 3134,
											"end": 3356,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3208,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3208,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3208,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3220,
											"end": 3230,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3220,
											"end": 3230,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3220,
											"end": 3230,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3217,
											"end": 3350,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3217,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 3217,
											"end": 3350,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3272,
											"end": 3282,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 3267,
											"end": 3270,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 3263,
											"end": 3283,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 3260,
											"end": 3261,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3253,
											"end": 3284,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3307,
											"end": 3311,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 3304,
											"end": 3305,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3335,
											"end": 3339,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3332,
											"end": 3333,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3325,
											"end": 3340,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3709,
											"end": 4054,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 3709,
											"end": 4054,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3929,
											"end": 3961,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3929,
											"end": 3961,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3929,
											"end": 3961,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3929,
											"end": 3961,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3911,
											"end": 3962,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3911,
											"end": 3962,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3993,
											"end": 3995,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3978,
											"end": 3996,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3978,
											"end": 3996,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3971,
											"end": 4005,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3971,
											"end": 4005,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3971,
											"end": 4005,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3971,
											"end": 4005,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4036,
											"end": 4038,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4021,
											"end": 4039,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4021,
											"end": 4039,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4014,
											"end": 4048,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3899,
											"end": 3901,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3884,
											"end": 3902,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3884,
											"end": 3902,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3709,
											"end": 4054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"contracts/Factory.sol",
								"contracts/token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimalsValue\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An ERC-20 token contract based on OpenZeppelin Includes minting, burning, and pausing functionality, controlled by the owner\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"constructor\":{\"details\":\"Constructor\",\"params\":{\"decimalsValue\":\"Number of decimals for the token\",\"initialOwner\":\"Initial owner address\",\"initialSupply\":\"Initial token supply\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used for token\"},\"mint(address,uint256)\":{\"details\":\"Mint new tokens\",\"params\":{\"amount\":\"Amount to mint\",\"to\":\"Recipient address\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Pause all token transfers\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"Resume token transfers\"}},\"title\":\"WBGZToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Initializes the token with custom parameters\"},\"decimals()\":{\"notice\":\"Returns the number of decimals used for token\"},\"mint(address,uint256)\":{\"notice\":\"Mint new tokens\"},\"pause()\":{\"notice\":\"Pause all token transfers\"},\"unpause()\":{\"notice\":\"Resume token transfers\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token.sol\":\"WBGZToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":0},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"contracts/token.sol\":{\"keccak256\":\"0xa27bb5118e0b371270a17d5cb550143a1cafaa104dd9756fade76e3aa8b66893\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a7539cfd14c3bca4fab8c959ed571eb1edc2ec8c2602781b336058654df93f1\",\"dweb:/ipfs/Qme5rkRybkJzmCtGpr1LzGB7PMd5w3Kff9pPphX6enyV1a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/token.sol:WBGZToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/token.sol:WBGZToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/token.sol:WBGZToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/token.sol:WBGZToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/token.sol:WBGZToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/token.sol:WBGZToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 988,
								"contract": "contracts/token.sol:WBGZToken",
								"label": "_paused",
								"offset": 20,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 1249,
								"contract": "contracts/token.sol:WBGZToken",
								"label": "_decimals",
								"offset": 21,
								"slot": "5",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"constructor": {
								"notice": "Initializes the token with custom parameters"
							},
							"decimals()": {
								"notice": "Returns the number of decimals used for token"
							},
							"mint(address,uint256)": {
								"notice": "Mint new tokens"
							},
							"pause()": {
								"notice": "Pause all token transfers"
							},
							"unpause()": {
								"notice": "Resume token transfers"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 980,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 979,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 979,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								979
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 961,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							949
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 950,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 949,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 980,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 979,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 979,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 949,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								949,
								877,
								979
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1638:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1648:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1656:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1671:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1681:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1594:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1615:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:2"
									},
									"scope": 799,
									"src": "1582:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										936
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1820:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1837:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1830:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1805:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:2"
									},
									"scope": 799,
									"src": "1760:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										942
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2024:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2041:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2034:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2009:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:2"
									},
									"scope": 799,
									"src": "1962:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										948
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2744:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2754:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2737:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:2"
									},
									"scope": 799,
									"src": "2688:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2864:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2881:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2874:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2776:22:2",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2812:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2823:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2855:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2855:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2854:9:2"
									},
									"scope": 799,
									"src": "2803:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3007:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3024:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3034:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3024:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3017:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2906:22:2",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2942:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2960:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "2952:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2952:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2951:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "2998:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2998:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:9:2"
									},
									"scope": 799,
									"src": "2933:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3319:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3337:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3329:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3329:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "3345:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3345:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3329:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3377:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3384:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3388:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3367:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3367:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3367:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3411:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3404:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3055:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3253:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3270:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3262:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3282:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3274:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3274:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3261:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3313:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3313:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3312:6:2"
									},
									"scope": 799,
									"src": "3244:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3544:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3561:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3573:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3561:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3580:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3561:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3554:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3428:22:2",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3464:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3482:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3474:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3497:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3489:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3473:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3535:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3535:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3534:9:2"
									},
									"scope": 799,
									"src": "3455:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "3981:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3999:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "3991:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3991:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "4007:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4007:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3991:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4038:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4045:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4054:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4029:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4029:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4029:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4077:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4070:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3601:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3911:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3927:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3919:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3919:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3944:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3936:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3918:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3975:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3975:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3974:6:2"
									},
									"scope": 799,
									"src": "3902:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4773:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4791:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4783:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4783:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "4801:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4801:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4783:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4839:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4845:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4854:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4823:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4823:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4880:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4886:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4890:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4870:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4870:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4870:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4913:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "4906:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4094:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4689:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4710:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4702:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4724:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4716:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4716:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4736:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4728:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4728:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4767:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4767:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4766:6:2"
									},
									"scope": 799,
									"src": "4680:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5366:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5380:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5396:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5388:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5388:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5388:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5380:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5376:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5400:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5448:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5440:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5440:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5440:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5421:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5421:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5414:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5475:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5489:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5481:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5481:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5481:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5475:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5471:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5493:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5543:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5535:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5535:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5535:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5514:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5514:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5507:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5574:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5580:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5584:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5566:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5566:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5566:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "4930:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5306:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5324:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5316:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5338:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5330:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5330:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5315:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5366:0:2"
									},
									"scope": 799,
									"src": "5297:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "5987:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6001:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6017:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6009:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6009:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6009:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6001:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6175:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6197:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6189:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6189:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6211:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6221:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6211:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6189:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6244:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6258:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6244:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6240:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6265:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6315:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6321:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6334:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6290:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6290:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6283:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6368:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6475:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6485:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6475:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6493:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6507:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6493:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6475:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6475:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "5997:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6021:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6137:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6153:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6137:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6137:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6551:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6565:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6557:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6557:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6557:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6551:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6766:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6780:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6925:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "6935:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6925:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6942:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6925:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "6925:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6547:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6569:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6583:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6714:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6730:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6714:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6714:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "6996:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7002:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7006:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "6987:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6987:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "6982:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5603:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5921:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5937:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5929:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5929:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5951:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5943:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5943:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5963:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5955:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5955:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5928:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5987:0:2"
									},
									"scope": 799,
									"src": "5912:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7418:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7432:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7451:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7443:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7443:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7443:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7432:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7428:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7455:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7505:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7497:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7497:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7497:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7476:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7476:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7469:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7544:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7536:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7536:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7536:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7548:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7557:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7528:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7528:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7528:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7025:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7371:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7385:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7377:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7377:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7402:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7394:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7394:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7376:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7418:0:2"
									},
									"scope": 799,
									"src": "7362:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "7944:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "7958:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7977:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7969:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7969:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7969:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7958:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "7954:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "7981:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8029:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8021:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8021:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8021:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8002:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8002:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "7995:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8060:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8077:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8069:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8069:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8069:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8081:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8052:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8052:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8052:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7576:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7897:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7911:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7903:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7903:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7928:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7920:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7920:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7902:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7944:0:2"
									},
									"scope": 799,
									"src": "7888:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8704:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8723:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8730:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8739:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8746:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8714:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8714:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8714:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8100:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8639:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8656:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8648:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8648:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8671:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8663:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8663:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8688:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8680:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8680:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8647:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8704:0:2"
									},
									"scope": 799,
									"src": "8630:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9703:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9717:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9734:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9726:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9726:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9726:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9717:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9713:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9738:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9788:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9780:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9780:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9780:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9759:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9759:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9752:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9815:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9834:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9826:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9826:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9826:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9815:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9811:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9838:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9887:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9879:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9879:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9879:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9859:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9859:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9852:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "9910:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "9922:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9910:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "9929:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9910:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "9940:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9910:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "9910:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "9959:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "9955:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "9970:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "9998:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10005:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10014:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "9989:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9989:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "9984:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8764:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9614:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9631:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9623:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9623:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9646:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9638:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9638:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9663:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9655:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9655:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9675:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9670:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9670:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9622:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9703:0:2"
									},
									"scope": 799,
									"src": "9605:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10408:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10426:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10418:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10418:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10455:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10462:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10445:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10445:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10418:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10484:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10508:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10508:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10503:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10503:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10517:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10503:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10484:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10480:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10522:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10540:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10559:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10540:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10536:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10566:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10618:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10627:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10645:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10591:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10591:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10584:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10679:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10716:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10723:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10732:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10751:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10732:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10758:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10707:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10707:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10707:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10043:271:2",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10328:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10352:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10344:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10344:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10367:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10359:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10359:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10384:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10376:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10376:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10343:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10408:0:2"
									},
									"scope": 799,
									"src": "10319:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9691:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10693:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "215:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "397:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "406:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "428:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "448:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:3"
									},
									"src": "391:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "628:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "637:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "660:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "685:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:3"
									},
									"src": "622:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "822:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:3"
									},
									"scope": 877,
									"src": "776:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "932:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "972:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:3"
									},
									"scope": 877,
									"src": "913:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1223:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1235:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1268:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:3"
									},
									"scope": 877,
									"src": "1205:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1568:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1583:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1623:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:3"
									},
									"scope": 877,
									"src": "1549:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2327:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2344:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2377:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:3"
									},
									"scope": 877,
									"src": "2310:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2713:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2727:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2739:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2772:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:3"
									},
									"scope": 877,
									"src": "2691:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "205:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2675:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"ERC20": [
							799
						],
						"ERC20Burnable": [
							923
						]
					},
					"id": 924,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 924,
							"sourceUnit": 800,
							"src": "150:35:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 799,
										"src": "158:5:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 883,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 924,
							"sourceUnit": 980,
							"src": "186:51:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 882,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 979,
										"src": "194:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 885,
										"name": "Context",
										"nameLocations": [
											"483:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 979,
										"src": "483:7:4"
									},
									"id": 886,
									"nodeType": "InheritanceSpecifier",
									"src": "483:7:4"
								},
								{
									"baseName": {
										"id": 887,
										"name": "ERC20",
										"nameLocations": [
											"492:5:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "492:5:4"
									},
									"id": 888,
									"nodeType": "InheritanceSpecifier",
									"src": "492:5:4"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 884,
								"nodeType": "StructuredDocumentation",
								"src": "239:208:4",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 923,
							"linearizedBaseContracts": [
								923,
								799,
								189,
								949,
								877,
								979
							],
							"name": "ERC20Burnable",
							"nameLocation": "466:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 900,
										"nodeType": "Block",
										"src": "662:43:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 895,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "678:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "678:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 897,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "692:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 894,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "672:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "672:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 899,
												"nodeType": "ExpressionStatement",
												"src": "672:26:4"
											}
										]
									},
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "504:109:4",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "627:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "640:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "632:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:15:4"
									},
									"returnParameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:0:4"
									},
									"scope": 923,
									"src": "618:87:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 921,
										"nodeType": "Block",
										"src": "1086:93:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 910,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "1112:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 911,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "1121:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1121:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 913,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "1135:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 909,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "1096:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1096:45:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 915,
												"nodeType": "ExpressionStatement",
												"src": "1096:45:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 917,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "1157:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 918,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "1166:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 916,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "1151:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1151:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 920,
												"nodeType": "ExpressionStatement",
												"src": "1151:21:4"
											}
										]
									},
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "711:305:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "1030:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1047:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1039:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1064:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1056:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:32:4"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1086:0:4"
									},
									"scope": 923,
									"src": "1021:158:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 924,
							"src": "448:733:4",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "124:1058:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							949
						]
					},
					"id": 950,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 925,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 927,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 950,
							"sourceUnit": 878,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 926,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 929,
										"name": "IERC20",
										"nameLocations": [
											"306:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:5"
									},
									"id": 930,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 928,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:5",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 949,
							"linearizedBaseContracts": [
								949,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 936,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:5"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "417:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 933,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:5"
									},
									"scope": 949,
									"src": "378:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 942,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:5"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "540:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 939,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:5"
									},
									"scope": 949,
									"src": "499:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 948,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:5"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "674:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 945,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:5"
									},
									"scope": 949,
									"src": "631:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 950,
							"src": "278:405:5",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							979
						]
					},
					"id": 980,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 951,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 952,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 979,
							"linearizedBaseContracts": [
								979
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 957,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 956,
												"id": 959,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 979,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 969,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 966,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 965,
												"id": 968,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 970,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 963,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 979,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 977,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 974,
												"id": 976,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 979,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 980,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"Pausable": [
							1087
						]
					},
					"id": 1088,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 981,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 983,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1088,
							"sourceUnit": 980,
							"src": "128:45:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 982,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 979,
										"src": "136:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 985,
										"name": "Context",
										"nameLocations": [
											"645:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 979,
										"src": "645:7:7"
									},
									"id": 986,
									"nodeType": "InheritanceSpecifier",
									"src": "645:7:7"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 984,
								"nodeType": "StructuredDocumentation",
								"src": "175:439:7",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 1087,
							"linearizedBaseContracts": [
								1087,
								979
							],
							"name": "Pausable",
							"nameLocation": "633:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 988,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "672:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1087,
									"src": "659:20:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 987,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "659:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 989,
										"nodeType": "StructuredDocumentation",
										"src": "686:73:7",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 993,
									"name": "Paused",
									"nameLocation": "770:6:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 991,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "785:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "777:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:17:7"
									},
									"src": "764:30:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 994,
										"nodeType": "StructuredDocumentation",
										"src": "800:70:7",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 998,
									"name": "Unpaused",
									"nameLocation": "881:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "898:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "890:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:17:7"
									},
									"src": "875:32:7"
								},
								{
									"documentation": {
										"id": 999,
										"nodeType": "StructuredDocumentation",
										"src": "913:76:7",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 1001,
									"name": "EnforcedPause",
									"nameLocation": "1000:13:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:2:7"
									},
									"src": "994:22:7"
								},
								{
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "1022:80:7",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 1004,
									"name": "ExpectedPause",
									"nameLocation": "1113:13:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:2:7"
									},
									"src": "1107:22:7"
								},
								{
									"body": {
										"id": 1011,
										"nodeType": "Block",
										"src": "1340:47:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1007,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1041,
														"src": "1350:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1350:19:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1009,
												"nodeType": "ExpressionStatement",
												"src": "1350:19:7"
											},
											{
												"id": 1010,
												"nodeType": "PlaceholderStatement",
												"src": "1379:1:7"
											}
										]
									},
									"documentation": {
										"id": 1005,
										"nodeType": "StructuredDocumentation",
										"src": "1135:175:7",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1012,
									"name": "whenNotPaused",
									"nameLocation": "1324:13:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1337:2:7"
									},
									"src": "1315:72:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1019,
										"nodeType": "Block",
										"src": "1587:44:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1015,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "1597:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1597:16:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1017,
												"nodeType": "ExpressionStatement",
												"src": "1597:16:7"
											},
											{
												"id": 1018,
												"nodeType": "PlaceholderStatement",
												"src": "1623:1:7"
											}
										]
									},
									"documentation": {
										"id": 1013,
										"nodeType": "StructuredDocumentation",
										"src": "1393:167:7",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 1020,
									"name": "whenPaused",
									"nameLocation": "1574:10:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1584:2:7"
									},
									"src": "1565:66:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "1779:31:7",
										"statements": [
											{
												"expression": {
													"id": 1026,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 988,
													"src": "1796:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1025,
												"id": 1027,
												"nodeType": "Return",
												"src": "1789:14:7"
											}
										]
									},
									"documentation": {
										"id": 1021,
										"nodeType": "StructuredDocumentation",
										"src": "1637:84:7",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1735:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1741:2:7"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "1773:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1023,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1773:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:6:7"
									},
									"scope": 1087,
									"src": "1726:84:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1040,
										"nodeType": "Block",
										"src": "1929:77:7",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1033,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "1943:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1943:8:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1039,
												"nodeType": "IfStatement",
												"src": "1939:61:7",
												"trueBody": {
													"id": 1038,
													"nodeType": "Block",
													"src": "1953:47:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1035,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1001,
																	"src": "1974:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1036,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1974:15:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1037,
															"nodeType": "RevertStatement",
															"src": "1967:22:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1030,
										"nodeType": "StructuredDocumentation",
										"src": "1816:57:7",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 1041,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1887:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1904:2:7"
									},
									"returnParameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1929:0:7"
									},
									"scope": 1087,
									"src": "1878:128:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1053,
										"nodeType": "Block",
										"src": "2126:78:7",
										"statements": [
											{
												"condition": {
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2140:9:7",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1045,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "2141:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 1046,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2141:8:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1052,
												"nodeType": "IfStatement",
												"src": "2136:62:7",
												"trueBody": {
													"id": 1051,
													"nodeType": "Block",
													"src": "2151:47:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1048,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1004,
																	"src": "2172:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2172:15:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1050,
															"nodeType": "RevertStatement",
															"src": "2165:22:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1042,
										"nodeType": "StructuredDocumentation",
										"src": "2012:61:7",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 1054,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2087:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2101:2:7"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2126:0:7"
									},
									"scope": 1087,
									"src": "2078:126:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1069,
										"nodeType": "Block",
										"src": "2388:66:7",
										"statements": [
											{
												"expression": {
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1060,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "2398:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1061,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2408:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2398:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1063,
												"nodeType": "ExpressionStatement",
												"src": "2398:14:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1065,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "2434:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2434:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1064,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 993,
														"src": "2427:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2427:20:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1068,
												"nodeType": "EmitStatement",
												"src": "2422:25:7"
											}
										]
									},
									"documentation": {
										"id": 1055,
										"nodeType": "StructuredDocumentation",
										"src": "2210:124:7",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1070,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1058,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1057,
												"name": "whenNotPaused",
												"nameLocations": [
													"2374:13:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1012,
												"src": "2374:13:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2374:13:7"
										}
									],
									"name": "_pause",
									"nameLocation": "2348:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2354:2:7"
									},
									"returnParameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2388:0:7"
									},
									"scope": 1087,
									"src": "2339:115:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1085,
										"nodeType": "Block",
										"src": "2634:69:7",
										"statements": [
											{
												"expression": {
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1076,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "2644:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1077,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2654:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2644:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1079,
												"nodeType": "ExpressionStatement",
												"src": "2644:15:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1081,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "2683:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2683:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1080,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 998,
														"src": "2674:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2674:22:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1084,
												"nodeType": "EmitStatement",
												"src": "2669:27:7"
											}
										]
									},
									"documentation": {
										"id": 1071,
										"nodeType": "StructuredDocumentation",
										"src": "2460:121:7",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 1086,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1074,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1073,
												"name": "whenPaused",
												"nameLocations": [
													"2623:10:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1020,
												"src": "2623:10:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2623:10:7"
										}
									],
									"name": "_unpause",
									"nameLocation": "2595:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2603:2:7"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2634:0:7"
									},
									"scope": 1087,
									"src": "2586:117:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1088,
							"src": "615:2090:7",
							"usedErrors": [
								1001,
								1004
							],
							"usedEvents": [
								993,
								998
							]
						}
					],
					"src": "102:2604:7"
				},
				"id": 7
			},
			"contracts/Factory.sol": {
				"ast": {
					"absolutePath": "contracts/Factory.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"ERC20": [
							799
						],
						"ERC20Burnable": [
							923
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							949
						],
						"Ownable": [
							147
						],
						"Pausable": [
							1087
						],
						"WBGZFactory": [
							1232
						],
						"WBGZToken": [
							1406
						]
					},
					"id": 1233,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1089,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:8"
						},
						{
							"absolutePath": "contracts/token.sol",
							"file": "./token.sol",
							"id": 1090,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1233,
							"sourceUnit": 1407,
							"src": "57:21:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "WBGZFactory",
							"contractDependencies": [
								1406
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1091,
								"nodeType": "StructuredDocumentation",
								"src": "80:88:8",
								"text": " @title Factory\n @dev Factory contract for deploying WBGZToken using CREATE2"
							},
							"fullyImplemented": true,
							"id": 1232,
							"linearizedBaseContracts": [
								1232
							],
							"name": "WBGZFactory",
							"nameLocation": "178:11:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "d1c16269e4896821ea5dd6216a16b09048d63329a1b10963f0458d3f0389f4f4",
									"id": 1103,
									"name": "WBGZTokenDeployed",
									"nameLocation": "202:17:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "236:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "220:28:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1092,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "220:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1095,
												"indexed": true,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "266:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "250:28:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1094,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "250:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"indexed": false,
												"mutability": "mutable",
												"name": "decimalsValue",
												"nameLocation": "286:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "280:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1096,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "280:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"indexed": false,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "309:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "301:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "301:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"indexed": false,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "332:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "324:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1100,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "324:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "219:118:8"
									},
									"src": "196:142:8"
								},
								{
									"body": {
										"id": 1160,
										"nodeType": "Block",
										"src": "906:765:8",
										"statements": [
											{
												"assignments": [
													1118
												],
												"declarations": [
													{
														"constant": false,
														"id": 1118,
														"mutability": "mutable",
														"name": "bytecode",
														"nameLocation": "970:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 1160,
														"src": "957:21:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1117,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "957:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1123,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 1120,
																"name": "WBGZToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1406,
																"src": "986:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_WBGZToken_$1406_$",
																	"typeString": "type(contract WBGZToken)"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_type$_t_contract$_WBGZToken_$1406_$",
																	"typeString": "type(contract WBGZToken)"
																}
															],
															"id": 1119,
															"name": "type",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967269,
															"src": "981:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "981:15:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_magic_meta_type_t_contract$_WBGZToken_$1406",
															"typeString": "type(contract WBGZToken)"
														}
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "997:12:8",
													"memberName": "creationCode",
													"nodeType": "MemberAccess",
													"src": "981:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "957:52:8"
											},
											{
												"assignments": [
													1125
												],
												"declarations": [
													{
														"constant": false,
														"id": 1125,
														"mutability": "mutable",
														"name": "encodedArgs",
														"nameLocation": "1077:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1160,
														"src": "1064:24:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1124,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1064:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1132,
												"initialValue": {
													"arguments": [
														{
															"id": 1128,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1106,
															"src": "1102:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1129,
															"name": "decimalsValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1108,
															"src": "1116:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1130,
															"name": "initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1110,
															"src": "1131:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1126,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "1091:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1127,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1095:6:8",
														"memberName": "encode",
														"nodeType": "MemberAccess",
														"src": "1091:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1091:54:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1064:81:8"
											},
											{
												"assignments": [
													1134
												],
												"declarations": [
													{
														"constant": false,
														"id": 1134,
														"mutability": "mutable",
														"name": "fullBytecode",
														"nameLocation": "1225:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 1160,
														"src": "1212:25:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1133,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1212:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1140,
												"initialValue": {
													"arguments": [
														{
															"id": 1137,
															"name": "bytecode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1118,
															"src": "1257:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1138,
															"name": "encodedArgs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1125,
															"src": "1267:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1135,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "1240:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1136,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1244:12:8",
														"memberName": "encodePacked",
														"nodeType": "MemberAccess",
														"src": "1240:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1212:67:8"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1331:102:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1345:78:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1369:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "fullBytecode",
																				"nodeType": "YulIdentifier",
																				"src": "1376:12:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1390:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1372:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1372:23:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "fullBytecode",
																				"nodeType": "YulIdentifier",
																				"src": "1403:12:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1397:5:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1397:19:8"
																	},
																	{
																		"name": "salt",
																		"nodeType": "YulIdentifier",
																		"src": "1418:4:8"
																	}
																],
																"functionName": {
																	"name": "create2",
																	"nodeType": "YulIdentifier",
																	"src": "1361:7:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1361:62:8"
															},
															"variableNames": [
																{
																	"name": "tokenAddress",
																	"nodeType": "YulIdentifier",
																	"src": "1345:12:8"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1134,
														"isOffset": false,
														"isSlot": false,
														"src": "1376:12:8",
														"valueSize": 1
													},
													{
														"declaration": 1134,
														"isOffset": false,
														"isSlot": false,
														"src": "1403:12:8",
														"valueSize": 1
													},
													{
														"declaration": 1112,
														"isOffset": false,
														"isSlot": false,
														"src": "1418:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1115,
														"isOffset": false,
														"isSlot": false,
														"src": "1345:12:8",
														"valueSize": 1
													}
												],
												"id": 1141,
												"nodeType": "InlineAssembly",
												"src": "1322:111:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1143,
																"name": "tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1115,
																"src": "1497:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1146,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1521:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1513:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1144,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1513:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1513:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1497:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4465706c6f796d656e74206661696c6564",
															"id": 1149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1525:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fa2295279825fc5c1b0ee87bfb3d9f97e1f777c29c82f8d0a2e2fc2fa6c99dcb",
																"typeString": "literal_string \"Deployment failed\""
															},
															"value": "Deployment failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fa2295279825fc5c1b0ee87bfb3d9f97e1f777c29c82f8d0a2e2fc2fa6c99dcb",
																"typeString": "literal_string \"Deployment failed\""
															}
														],
														"id": 1142,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1489:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1489:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1151,
												"nodeType": "ExpressionStatement",
												"src": "1489:56:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1153,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "1601:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1154,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1106,
															"src": "1615:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1155,
															"name": "decimalsValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1108,
															"src": "1629:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1156,
															"name": "initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1110,
															"src": "1644:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1157,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1112,
															"src": "1659:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1152,
														"name": "WBGZTokenDeployed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1103,
														"src": "1583:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint8_$_t_uint256_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint8,uint256,bytes32)"
														}
													},
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1583:81:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1159,
												"nodeType": "EmitStatement",
												"src": "1578:86:8"
											}
										]
									},
									"documentation": {
										"id": 1104,
										"nodeType": "StructuredDocumentation",
										"src": "344:374:8",
										"text": " @notice Deploys a new WBGZToken contract using CREATE2\n @param initialOwner The initial owner of the token\n @param decimalsValue The number of decimals for the token\n @param initialSupply The initial supply of the token\n @param salt A unique salt for CREATE2 deployment\n @return tokenAddress The address of the deployed token"
									},
									"functionSelector": "3dcee3ac",
									"id": 1161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deployWBGZToken",
									"nameLocation": "732:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "765:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "757:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "757:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "decimalsValue",
												"nameLocation": "793:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "787:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1107,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "787:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "824:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "816:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "855:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "847:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1111,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "847:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "747:118:8"
									},
									"returnParameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "892:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "884:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:22:8"
									},
									"scope": 1232,
									"src": "723:948:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1230,
										"nodeType": "Block",
										"src": "2256:695:8",
										"statements": [
											{
												"assignments": [
													1176
												],
												"declarations": [
													{
														"constant": false,
														"id": 1176,
														"mutability": "mutable",
														"name": "bytecode",
														"nameLocation": "2320:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 1230,
														"src": "2307:21:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1175,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2307:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1181,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 1178,
																"name": "WBGZToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1406,
																"src": "2336:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_WBGZToken_$1406_$",
																	"typeString": "type(contract WBGZToken)"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_type$_t_contract$_WBGZToken_$1406_$",
																	"typeString": "type(contract WBGZToken)"
																}
															],
															"id": 1177,
															"name": "type",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967269,
															"src": "2331:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1179,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2331:15:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_magic_meta_type_t_contract$_WBGZToken_$1406",
															"typeString": "type(contract WBGZToken)"
														}
													},
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "2347:12:8",
													"memberName": "creationCode",
													"nodeType": "MemberAccess",
													"src": "2331:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2307:52:8"
											},
											{
												"assignments": [
													1183
												],
												"declarations": [
													{
														"constant": false,
														"id": 1183,
														"mutability": "mutable",
														"name": "encodedArgs",
														"nameLocation": "2427:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1230,
														"src": "2414:24:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1182,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2414:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1190,
												"initialValue": {
													"arguments": [
														{
															"id": 1186,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1164,
															"src": "2452:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1187,
															"name": "decimalsValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "2466:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1188,
															"name": "initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "2481:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1184,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "2441:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1185,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2445:6:8",
														"memberName": "encode",
														"nodeType": "MemberAccess",
														"src": "2441:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2441:54:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2414:81:8"
											},
											{
												"assignments": [
													1192
												],
												"declarations": [
													{
														"constant": false,
														"id": 1192,
														"mutability": "mutable",
														"name": "fullBytecode",
														"nameLocation": "2575:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 1230,
														"src": "2562:25:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1191,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2562:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1198,
												"initialValue": {
													"arguments": [
														{
															"id": 1195,
															"name": "bytecode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "2607:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1196,
															"name": "encodedArgs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "2617:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1193,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "2590:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1194,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2594:12:8",
														"memberName": "encodePacked",
														"nodeType": "MemberAccess",
														"src": "2590:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2590:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2562:67:8"
											},
											{
												"assignments": [
													1200
												],
												"declarations": [
													{
														"constant": false,
														"id": 1200,
														"mutability": "mutable",
														"name": "hash",
														"nameLocation": "2701:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1230,
														"src": "2693:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1199,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2693:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1218,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "30786666",
																			"id": 1206,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2772:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_255_by_1",
																				"typeString": "int_const 255"
																			},
																			"value": "0xff"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_255_by_1",
																				"typeString": "int_const 255"
																			}
																		],
																		"id": 1205,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2765:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 1204,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "2765:6:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2765:12:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1210,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2803:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_WBGZFactory_$1232",
																				"typeString": "contract WBGZFactory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_WBGZFactory_$1232",
																				"typeString": "contract WBGZFactory"
																			}
																		],
																		"id": 1209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2795:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1208,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2795:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2795:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1212,
																	"name": "salt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1170,
																	"src": "2826:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1214,
																			"name": "fullBytecode",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1192,
																			"src": "2858:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 1213,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "2848:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 1215,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2848:23:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1202,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2731:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1203,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2735:12:8",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "2731:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2731:154:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1201,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2708:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2708:187:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2693:202:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1225,
																			"name": "hash",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1200,
																			"src": "2937:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 1224,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2929:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1223,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "2929:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1226,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2929:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1222,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2921:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 1221,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "2921:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2921:22:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1220,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2913:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1219,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2913:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2913:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1174,
												"id": 1229,
												"nodeType": "Return",
												"src": "2906:38:8"
											}
										]
									},
									"documentation": {
										"id": 1162,
										"nodeType": "StructuredDocumentation",
										"src": "1677:395:8",
										"text": " @notice Computes the address of a WBGZToken contract that would be deployed with the given parameters\n @param initialOwner The initial owner of the token\n @param decimalsValue The number of decimals for the token\n @param initialSupply The initial supply of the token\n @param salt A unique salt for CREATE2 deployment\n @return The computed address"
									},
									"functionSelector": "18423c06",
									"id": 1231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getWBGZTokenAddress",
									"nameLocation": "2086:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2123:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "2115:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2115:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "decimalsValue",
												"nameLocation": "2151:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "2145:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1165,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2145:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "2182:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "2174:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2174:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "2213:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "2205:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1169,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2205:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2105:118:8"
									},
									"returnParameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "2247:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2247:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2246:9:8"
									},
									"scope": 1232,
									"src": "2077:874:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1233,
							"src": "169:2784:8",
							"usedErrors": [],
							"usedEvents": [
								1103
							]
						}
					],
					"src": "32:2921:8"
				},
				"id": 8
			},
			"contracts/token.sol": {
				"ast": {
					"absolutePath": "contracts/token.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"ERC20": [
							799
						],
						"ERC20Burnable": [
							923
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							949
						],
						"Ownable": [
							147
						],
						"Pausable": [
							1087
						],
						"WBGZToken": [
							1406
						]
					},
					"id": 1407,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1234,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1235,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1407,
							"sourceUnit": 800,
							"src": "57:55:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"id": 1236,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1407,
							"sourceUnit": 924,
							"src": "113:74:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1407,
							"sourceUnit": 148,
							"src": "188:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
							"file": "@openzeppelin/contracts/utils/Pausable.sol",
							"id": 1238,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1407,
							"sourceUnit": 1088,
							"src": "241:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1240,
										"name": "ERC20",
										"nameLocations": [
											"481:5:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "481:5:9"
									},
									"id": 1241,
									"nodeType": "InheritanceSpecifier",
									"src": "481:5:9"
								},
								{
									"baseName": {
										"id": 1242,
										"name": "ERC20Burnable",
										"nameLocations": [
											"488:13:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 923,
										"src": "488:13:9"
									},
									"id": 1243,
									"nodeType": "InheritanceSpecifier",
									"src": "488:13:9"
								},
								{
									"baseName": {
										"id": 1244,
										"name": "Ownable",
										"nameLocations": [
											"503:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "503:7:9"
									},
									"id": 1245,
									"nodeType": "InheritanceSpecifier",
									"src": "503:7:9"
								},
								{
									"baseName": {
										"id": 1246,
										"name": "Pausable",
										"nameLocations": [
											"512:8:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1087,
										"src": "512:8:9"
									},
									"id": 1247,
									"nodeType": "InheritanceSpecifier",
									"src": "512:8:9"
								}
							],
							"canonicalName": "WBGZToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1239,
								"nodeType": "StructuredDocumentation",
								"src": "295:163:9",
								"text": " @title WBGZToken\n @dev An ERC-20 token contract based on OpenZeppelin\n Includes minting, burning, and pausing functionality, controlled by the owner"
							},
							"fullyImplemented": true,
							"id": 1406,
							"linearizedBaseContracts": [
								1406,
								1087,
								147,
								923,
								799,
								189,
								949,
								877,
								979
							],
							"name": "WBGZToken",
							"nameLocation": "468:9:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1249,
									"mutability": "mutable",
									"name": "_decimals",
									"nameLocation": "563:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 1406,
									"src": "549:23:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1248,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "549:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1250,
										"nodeType": "StructuredDocumentation",
										"src": "579:45:9",
										"text": "@notice Maximum total supply of the token"
									},
									"id": 1255,
									"mutability": "constant",
									"name": "MAX_SUPPLY",
									"nameLocation": "654:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1406,
									"src": "629:55:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1251,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "629:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_10000000000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000000000"
										},
										"id": 1254,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31305f3030305f303030",
											"id": 1252,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "667:10:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10000000_by_1",
												"typeString": "int_const 10000000"
											},
											"value": "10_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "31653138",
											"id": 1253,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "680:4:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"value": "1e18"
										},
										"src": "667:17:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000000000"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1326,
										"nodeType": "Block",
										"src": "1132:460:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1273,
																"name": "initialOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1258,
																"src": "1150:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1174:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1166:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1274,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1166:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1277,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1166:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1150:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206f776e6572",
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1178:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_110461b12e459dc76e692e7a47f9621cf45c7d48020c3c7b2066107cdf1f52ae",
																"typeString": "literal_string \"Invalid owner\""
															},
															"value": "Invalid owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_110461b12e459dc76e692e7a47f9621cf45c7d48020c3c7b2066107cdf1f52ae",
																"typeString": "literal_string \"Invalid owner\""
															}
														],
														"id": 1272,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1142:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1142:52:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1281,
												"nodeType": "ExpressionStatement",
												"src": "1142:52:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 1285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1283,
																"name": "decimalsValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1260,
																"src": "1212:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3138",
																"id": 1284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1229:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "1212:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "446563696d616c7320746f6f2068696768",
															"id": 1286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1233:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cf5f0b19ff04fa207c20b1f7a248a3040f08c0b8ec31b088d64a90e74a006752",
																"typeString": "literal_string \"Decimals too high\""
															},
															"value": "Decimals too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cf5f0b19ff04fa207c20b1f7a248a3040f08c0b8ec31b088d64a90e74a006752",
																"typeString": "literal_string \"Decimals too high\""
															}
														],
														"id": 1282,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1204:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1204:49:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1288,
												"nodeType": "ExpressionStatement",
												"src": "1204:49:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1290,
																"name": "initialSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1262,
																"src": "1271:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1291,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1288:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1271:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c20737570706c79206d75737420626520706f736974697665",
															"id": 1293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1291:33:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df21d991ce9f9f19ddeb71ee966704400557f7736aa26cfa8b0002d28a07b080",
																"typeString": "literal_string \"Initial supply must be positive\""
															},
															"value": "Initial supply must be positive"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df21d991ce9f9f19ddeb71ee966704400557f7736aa26cfa8b0002d28a07b080",
																"typeString": "literal_string \"Initial supply must be positive\""
															}
														],
														"id": 1289,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1263:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1263:62:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1295,
												"nodeType": "ExpressionStatement",
												"src": "1263:62:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1297,
																"name": "initialSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1262,
																"src": "1343:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1300,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1365:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 1299,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1365:7:9",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				}
																			],
																			"id": 1298,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "1360:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1360:13:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint256",
																			"typeString": "type(uint256)"
																		}
																	},
																	"id": 1302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "1374:3:9",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "1360:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1305,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1303,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1381:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"id": 1304,
																				"name": "decimalsValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1260,
																				"src": "1387:13:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "1381:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1306,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1380:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1360:41:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1343:58:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537570706c7920746f6f206c61726765",
															"id": 1309,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1403:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_66951e943767d1a82db964b88c0b96d34edc5f8603ce5bb4a5ed6ff204c0ce11",
																"typeString": "literal_string \"Supply too large\""
															},
															"value": "Supply too large"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_66951e943767d1a82db964b88c0b96d34edc5f8603ce5bb4a5ed6ff204c0ce11",
																"typeString": "literal_string \"Supply too large\""
															}
														],
														"id": 1296,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1335:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1335:87:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1311,
												"nodeType": "ExpressionStatement",
												"src": "1335:87:9"
											},
											{
												"expression": {
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1312,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1249,
														"src": "1433:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1313,
														"name": "decimalsValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "1445:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1433:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1315,
												"nodeType": "ExpressionStatement",
												"src": "1433:25:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1317,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1258,
															"src": "1533:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1318,
																"name": "initialSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1262,
																"src": "1547:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1321,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 1319,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1564:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"id": 1320,
																			"name": "decimalsValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1260,
																			"src": "1570:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "1564:19:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1322,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1563:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1547:37:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1316,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1527:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1527:58:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1325,
												"nodeType": "ExpressionStatement",
												"src": "1527:58:9"
											}
										]
									},
									"documentation": {
										"id": 1256,
										"nodeType": "StructuredDocumentation",
										"src": "691:254:9",
										"text": " @notice Initializes the token with custom parameters\n @dev Constructor\n @param initialOwner Initial owner address\n @param decimalsValue Number of decimals for the token\n @param initialSupply Initial token supply"
									},
									"id": 1327,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "e5b881e5ae89e4bb99e5a5b3",
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "unicodeString",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1064:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_98184aa227ad01fa4ecc90b0fb1120074abf41632f0a942d88616207620871fd",
														"typeString": "literal_string hex\"e5b881e5ae89e4bb99e5a5b3\""
													},
													"value": "币安仙女"
												},
												{
													"hexValue": "e5b881e5ae89e4bb99e5a5b3",
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "unicodeString",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1087:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_98184aa227ad01fa4ecc90b0fb1120074abf41632f0a942d88616207620871fd",
														"typeString": "literal_string hex\"e5b881e5ae89e4bb99e5a5b3\""
													},
													"value": "币安仙女"
												}
											],
											"id": 1267,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1264,
												"name": "ERC20",
												"nameLocations": [
													"1058:5:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "1058:5:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1058:51:9"
										},
										{
											"arguments": [
												{
													"id": 1269,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1258,
													"src": "1118:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1270,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1268,
												"name": "Ownable",
												"nameLocations": [
													"1110:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1110:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1110:21:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "979:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "971:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "decimalsValue",
												"nameLocation": "1007:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "1001:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1259,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1001:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "1038:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "1030:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1030:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "961:96:9"
									},
									"returnParameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1132:0:9"
									},
									"scope": 1406,
									"src": "950:642:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										363
									],
									"body": {
										"id": 1336,
										"nodeType": "Block",
										"src": "1823:33:9",
										"statements": [
											{
												"expression": {
													"id": 1334,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1249,
													"src": "1840:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1333,
												"id": 1335,
												"nodeType": "Return",
												"src": "1833:16:9"
											}
										]
									},
									"documentation": {
										"id": 1328,
										"nodeType": "StructuredDocumentation",
										"src": "1598:155:9",
										"text": " @notice Returns the number of decimals used for token\n @dev Returns the number of decimals used for token\n @inheritdoc ERC20"
									},
									"functionSelector": "313ce567",
									"id": 1337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1767:8:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1330,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1798:8:9"
									},
									"parameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1775:2:9"
									},
									"returnParameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "1816:5:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1331,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1816:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1815:7:9"
									},
									"scope": 1406,
									"src": "1758:98:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1362,
										"nodeType": "Block",
										"src": "2067:112:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1348,
																		"name": "totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 372,
																		"src": "2085:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 1349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2085:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1350,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1342,
																	"src": "2101:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2085:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1352,
																"name": "MAX_SUPPLY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1255,
																"src": "2111:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2085:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d617820737570706c79206578636565646564",
															"id": 1354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2123:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0b608f755d10a61bd7bfbe50c676755794b42b2dd9daf91b7deb384eabaa476f",
																"typeString": "literal_string \"Max supply exceeded\""
															},
															"value": "Max supply exceeded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0b608f755d10a61bd7bfbe50c676755794b42b2dd9daf91b7deb384eabaa476f",
																"typeString": "literal_string \"Max supply exceeded\""
															}
														],
														"id": 1347,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2077:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2077:68:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1356,
												"nodeType": "ExpressionStatement",
												"src": "2077:68:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1358,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "2161:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1359,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1342,
															"src": "2165:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1357,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "2155:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2155:17:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1361,
												"nodeType": "ExpressionStatement",
												"src": "2155:17:9"
											}
										]
									},
									"documentation": {
										"id": 1338,
										"nodeType": "StructuredDocumentation",
										"src": "1862:141:9",
										"text": " @notice Mint new tokens\n @dev Mint new tokens\n @param to Recipient address\n @param amount Amount to mint"
									},
									"functionSelector": "40c10f19",
									"id": 1363,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1345,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1344,
												"name": "onlyOwner",
												"nameLocations": [
													"2057:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2057:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2057:9:9"
										}
									],
									"name": "mint",
									"nameLocation": "2017:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2030:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "2022:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2022:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2042:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "2034:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2021:28:9"
									},
									"returnParameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2067:0:9"
									},
									"scope": 1406,
									"src": "2008:171:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1372,
										"nodeType": "Block",
										"src": "2314:25:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1369,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1070,
														"src": "2324:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2324:8:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1371,
												"nodeType": "ExpressionStatement",
												"src": "2324:8:9"
											}
										]
									},
									"documentation": {
										"id": 1364,
										"nodeType": "StructuredDocumentation",
										"src": "2185:90:9",
										"text": " @notice Pause all token transfers\n @dev Pause all token transfers"
									},
									"functionSelector": "8456cb59",
									"id": 1373,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1367,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1366,
												"name": "onlyOwner",
												"nameLocations": [
													"2304:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2304:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2304:9:9"
										}
									],
									"name": "pause",
									"nameLocation": "2289:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2294:2:9"
									},
									"returnParameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2314:0:9"
									},
									"scope": 1406,
									"src": "2280:59:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1382,
										"nodeType": "Block",
										"src": "2470:27:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1379,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1086,
														"src": "2480:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2480:10:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1381,
												"nodeType": "ExpressionStatement",
												"src": "2480:10:9"
											}
										]
									},
									"documentation": {
										"id": 1374,
										"nodeType": "StructuredDocumentation",
										"src": "2345:84:9",
										"text": " @notice Resume token transfers\n @dev Resume token transfers"
									},
									"functionSelector": "3f4ba83a",
									"id": 1383,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1377,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1376,
												"name": "onlyOwner",
												"nameLocations": [
													"2460:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2460:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2460:9:9"
										}
									],
									"name": "unpause",
									"nameLocation": "2443:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:9"
									},
									"returnParameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:9"
									},
									"scope": 1406,
									"src": "2434:63:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										606
									],
									"body": {
										"id": 1404,
										"nodeType": "Block",
										"src": "2704:47:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1399,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "2728:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1400,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1388,
															"src": "2734:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1401,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1390,
															"src": "2738:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1396,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2714:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_WBGZToken_$1406_$",
																"typeString": "type(contract super WBGZToken)"
															}
														},
														"id": 1398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2720:7:9",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 606,
														"src": "2714:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2714:30:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1403,
												"nodeType": "ExpressionStatement",
												"src": "2714:30:9"
											}
										]
									},
									"documentation": {
										"id": 1384,
										"nodeType": "StructuredDocumentation",
										"src": "2503:76:9",
										"text": " @dev Override _update function to add pause functionality"
									},
									"id": 1405,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1394,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1393,
												"name": "whenNotPaused",
												"nameLocations": [
													"2690:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1012,
												"src": "2690:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2690:13:9"
										}
									],
									"name": "_update",
									"nameLocation": "2593:7:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1392,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2681:8:9"
									},
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2618:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "2610:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2610:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2640:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "2632:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2632:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2660:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "2652:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2600:71:9"
									},
									"returnParameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2704:0:9"
									},
									"scope": 1406,
									"src": "2584:167:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1407,
							"src": "459:2294:9",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188,
								1001,
								1004
							],
							"usedEvents": [
								24,
								811,
								820,
								993,
								998
							]
						}
					],
					"src": "32:2721:9"
				},
				"id": 9
			}
		}
	}
}